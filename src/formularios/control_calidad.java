/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * control_calidad.java
 *
 * Created on 21-nov-2015, 17:54:50
 */

package formularios;

import java.awt.event.KeyEvent;
import java.net.URL;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import programas.ver_conex;

/**
 *
 * @author CLAU LORE
 */
public class control_calidad extends javax.swing.JFrame {

    /** Creates new form control_calidad */
    javax.swing.table.DefaultTableModel cursor;
    ver_conex conn = new ver_conex();
    String operacion="";
    int c;
    private int band = 0;


    public control_calidad() {
        initComponents();
        cursor = (javax.swing.table.DefaultTableModel)tabla.getModel();
        this.setLocationRelativeTo(null);
        t_cod_sucursal.setText(acceso.ususucur);
        t_sucursal.setText(acceso.sucurdescri);
        t_cod_personal.setText(acceso.usucod);//codigo usuario
        t_nombre.setText(acceso.usunom);    //nombre de usuario
      //  t_apellido.setText(acceso.perapell());  //apellido de usuario

        setResizable(false);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        t_cod_personal = new javax.swing.JTextField();
        t_nombre = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        t_cod_sucursal = new javax.swing.JTextField();
        t_sucursal = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        t_numero_control = new javax.swing.JTextField();
        t_fecha = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        t_hora_realizada = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        t_cod_orden = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        b_grabar = new javax.swing.JButton();
        b_anular = new javax.swing.JButton();
        b_editar = new javax.swing.JButton();
        b_cancelar = new javax.swing.JButton();
        b_nuevo = new javax.swing.JButton();
        b_salir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true)));

        t_cod_personal.setEnabled(false);

        t_nombre.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        t_nombre.setText("NOMBRE");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("FUNCIONARIO:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("SUCURSAL:");

        t_cod_sucursal.setEnabled(false);

        t_sucursal.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        t_sucursal.setText("NOMBRE");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("CONTROL DE CALIDAD");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(t_cod_personal, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(t_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(jLabel13)
                .addGap(22, 22, 22)
                .addComponent(t_cod_sucursal, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(t_sucursal, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(t_cod_personal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_nombre)
                    .addComponent(t_cod_sucursal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(t_sucursal)
                    .addComponent(jLabel12))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "DATOS DEL CONTROL CALIDAD", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        t_numero_control.setEnabled(false);
        t_numero_control.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_numero_controlActionPerformed(evt);
            }
        });
        t_numero_control.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_numero_controlKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_numero_controlKeyTyped(evt);
            }
        });

        t_fecha.setEnabled(false);
        t_fecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_fechaActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("HORA REALIZADA:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("FECHA :");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("NUMERO:");

        t_hora_realizada.setEnabled(false);
        t_hora_realizada.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t_hora_realizadaMouseClicked(evt);
            }
        });
        t_hora_realizada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_hora_realizadaActionPerformed(evt);
            }
        });
        t_hora_realizada.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_hora_realizadaKeyTyped(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel15.setText("BUSCAR CON F12 ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(t_hora_realizada)
                    .addComponent(t_fecha)
                    .addComponent(t_numero_control, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jLabel15)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t_numero_control, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel15))
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t_hora_realizada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "BUSCAR DATOS", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        t_cod_orden.setEnabled(false);
        t_cod_orden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_cod_ordenActionPerformed(evt);
            }
        });
        t_cod_orden.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_cod_ordenKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_cod_ordenKeyTyped(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel16.setText("BUSCAR CON F12 ");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Nº DE ORDEN :");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(21, 21, 21)
                .addComponent(t_cod_orden, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel16)
                .addGap(87, 87, 87))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t_cod_orden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel16))
                .addContainerGap(75, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true)));

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ITEMS", "Nº RECETA", "MENU", "CANTIDAD", "EVALUACION", "EXELENTE", "MUY BUENO", "BUENO", "ACEPTABLE", "MALO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 783, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true)));

        b_grabar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        b_grabar.setText("GRABAR");
        b_grabar.setEnabled(false);
        b_grabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_grabarActionPerformed(evt);
            }
        });

        b_anular.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        b_anular.setText("ANULAR");
        b_anular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_anularActionPerformed(evt);
            }
        });

        b_editar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        b_editar.setText("EDITAR");
        b_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_editarActionPerformed(evt);
            }
        });

        b_cancelar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        b_cancelar.setText("CANCELAR");
        b_cancelar.setEnabled(false);
        b_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cancelarActionPerformed(evt);
            }
        });

        b_nuevo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        b_nuevo.setText("NUEVO");
        b_nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_nuevoActionPerformed(evt);
            }
        });

        b_salir.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        b_salir.setText("SALIR");
        b_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_salirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(b_nuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(b_editar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(b_anular, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(b_grabar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(b_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(b_salir, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_nuevo)
                    .addComponent(b_anular)
                    .addComponent(b_editar)
                    .addComponent(b_grabar)
                    .addComponent(b_cancelar)
                    .addComponent(b_salir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 418, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void t_numero_controlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_numero_controlActionPerformed
        buscar_detalle_control();
}//GEN-LAST:event_t_numero_controlActionPerformed

    private void t_numero_controlKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_numero_controlKeyPressed
        if (t_numero_control.getText().equals("") &&evt.getKeyCode()==123) { // presiona F12
            JTextField[] tfParam = new JTextField[2];

            tfParam[0] = this.t_numero_control;
            tfParam[1] = this.t_cod_orden;

            String sql = "SELECT cont_cod,or_pro_cod,cont_fecha FROM control_calidad WHERE  cont_estado= 'pendiente' AND cont_fecha  LIKE ";
            Buscador pp = new Buscador(sql , new String[]{"NUMERO CONTROL","NUMERO DE ORDEN", "FECHA"},3, tfParam);
            pp.setTitle("BUSCAR CONTROL DE CALIDAD");
            pp.setVisible(true);
        } else if (evt.getKeyCode() ==KeyEvent.VK_ENTER  &&   t_numero_control.getText().equals("") ){

            JOptionPane.showMessageDialog(null,"EL CAMPO NO PUEDE ESTAR VACIO","AVISO",JOptionPane.ERROR_MESSAGE);

            this.t_numero_control.setEnabled(true);
            this.t_numero_control.requestFocus();
        }
}//GEN-LAST:event_t_numero_controlKeyPressed

    private void t_numero_controlKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_numero_controlKeyTyped
        char caracter = evt.getKeyChar();
        if(((caracter < '0') ||
                (caracter > '9')) &&
                (caracter != evt.VK_BACK_SPACE)) {
            evt.consume();
        }
}//GEN-LAST:event_t_numero_controlKeyTyped

    private void t_fechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_fechaActionPerformed
        // TODO add your handling code here:
        if(t_fecha.getText().equals("")||t_fecha.getText().trim().length()==0){
            JOptionPane.showMessageDialog(null,"EL CAMPO NO PUEDE ESTAR VACIO","AVISO",JOptionPane.ERROR_MESSAGE);
            this.t_hora_realizada.setEnabled(false);
            this.t_fecha.setEnabled(true);
            this.t_fecha.requestFocus();

        } else{
            Hora();
            this.t_fecha.setEnabled(false);
            this.t_hora_realizada.setEnabled(true);
            this.t_hora_realizada.requestFocus();
        }
}//GEN-LAST:event_t_fechaActionPerformed

    private void t_hora_realizadaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t_hora_realizadaMouseClicked

}//GEN-LAST:event_t_hora_realizadaMouseClicked

    private void t_hora_realizadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_hora_realizadaActionPerformed

         if(operacion.equals("nuevo")){
          if(t_hora_realizada.getText().equals("") ||t_hora_realizada.getText().trim().length()==0 ){

            JOptionPane.showMessageDialog(null,"EL CAMPO NO PUEDE ESTAR VACIO","AVISO",JOptionPane.ERROR_MESSAGE);
            this.t_cod_orden.setEnabled(false);
            this.t_hora_realizada.setEnabled(true);
            this.t_hora_realizada.requestFocus();

           } else{
            this.t_hora_realizada.setEnabled(false);
            this.t_cod_orden.setEnabled(true);
            this.t_cod_orden.requestFocus();
         }
         }
      if(operacion.equals("editar")){
      if(t_hora_realizada.getText().equals("") ||t_hora_realizada.getText().trim().length()==0 ){

            JOptionPane.showMessageDialog(null,"EL CAMPO NO PUEDE ESTAR VACIO","AVISO",JOptionPane.ERROR_MESSAGE);
            this.t_hora_realizada.setEnabled(true);
            this.t_hora_realizada.requestFocus();
  
        } else{
           // this.t_cod_orden.setEnabled(false);
            this.b_grabar.setEnabled(true);
            this.b_grabar.requestFocus();
        }
        }


}//GEN-LAST:event_t_hora_realizadaActionPerformed

    private void t_hora_realizadaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_hora_realizadaKeyTyped
 
}//GEN-LAST:event_t_hora_realizadaKeyTyped

    private void t_cod_ordenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_cod_ordenActionPerformed
        buscar_detalle_orden();
}//GEN-LAST:event_t_cod_ordenActionPerformed

    private void t_cod_ordenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_cod_ordenKeyPressed
        if (t_cod_orden.getText().equals("") &&evt.getKeyCode()==123) { // presiona F12
            JTextField[] tfParam = new JTextField[1];

            tfParam[0] = this.t_cod_orden;



            String sql = "SELECT o.or_pro_cod,o.fecha_inicio FROM orden_produccion o WHERE  o.ord_pro_est= 'Realizado' AND o.fecha_inicio LIKE ";
            Buscador pp = new Buscador(sql , new String[]{"Codigo", "Fecha"},2, tfParam);
            pp.setTitle("BUSCAR ORDEN");
            pp.setVisible(true);
        } else if (evt.getKeyCode() ==KeyEvent.VK_ENTER  &&   t_cod_orden.getText().equals("") ){

            JOptionPane.showMessageDialog(null,"EL CAMPO NO PUEDE ESTAR VACIO","AVISO",JOptionPane.ERROR_MESSAGE);

            this.t_cod_orden.setEnabled(true);
            this.t_cod_orden.requestFocus();
        }
}//GEN-LAST:event_t_cod_ordenKeyPressed

    private void t_cod_ordenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_cod_ordenKeyTyped
        char caracter = evt.getKeyChar();
        if(((caracter < '0') ||
                (caracter > '9')) &&
                (caracter != evt.VK_BACK_SPACE)) {
            evt.consume();
        }
}//GEN-LAST:event_t_cod_ordenKeyTyped

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
  
}//GEN-LAST:event_tablaMouseClicked

    private void b_grabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_grabarActionPerformed
        validarGrilla();
        limpiar_grilla();
        hab_botones();
        des_text();
        clear_text();
        this.t_numero_control.setEnabled(false);
}//GEN-LAST:event_b_grabarActionPerformed

    private void b_anularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_anularActionPerformed
        operacion="anular";
        this.t_numero_control.setEnabled(true);
        this.t_numero_control.requestFocus();
        des_botones();
tabla.getColumnModel().getColumn(4).setMaxWidth(2147483647);
tabla.getColumnModel().getColumn(4).setMinWidth(50);
tabla.getColumnModel().getColumn(4).setPreferredWidth(70);
///

tabla.getColumnModel().getColumn(5).setMaxWidth(0);
tabla.getColumnModel().getColumn(5).setMinWidth(0);
tabla.getColumnModel().getColumn(5).setPreferredWidth(0);



tabla.getColumnModel().getColumn(6).setMaxWidth(0);
tabla.getColumnModel().getColumn(6).setMinWidth(0);
tabla.getColumnModel().getColumn(6).setPreferredWidth(0);


tabla.getColumnModel().getColumn(7).setMaxWidth(0);
tabla.getColumnModel().getColumn(7).setMinWidth(0);
tabla.getColumnModel().getColumn(7).setPreferredWidth(0);


tabla.getColumnModel().getColumn(8).setMaxWidth(0);
tabla.getColumnModel().getColumn(8).setMinWidth(0);
tabla.getColumnModel().getColumn(8).setPreferredWidth(0);



tabla.getColumnModel().getColumn(9).setMaxWidth(0);
tabla.getColumnModel().getColumn(9).setMinWidth(0);
tabla.getColumnModel().getColumn(9).setPreferredWidth(0);



}//GEN-LAST:event_b_anularActionPerformed

    private void b_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_editarActionPerformed
        operacion="editar";
        des_botones();
        this.t_numero_control.setEnabled(true);
        this.t_numero_control.requestFocus();

tabla.getColumnModel().getColumn(5).setMaxWidth(0);
tabla.getColumnModel().getColumn(5).setMinWidth(0);
tabla.getColumnModel().getColumn(5).setPreferredWidth(0);



tabla.getColumnModel().getColumn(6).setMaxWidth(0);
tabla.getColumnModel().getColumn(6).setMinWidth(0);
tabla.getColumnModel().getColumn(6).setPreferredWidth(0);


tabla.getColumnModel().getColumn(7).setMaxWidth(0);
tabla.getColumnModel().getColumn(7).setMinWidth(0);
tabla.getColumnModel().getColumn(7).setPreferredWidth(0);


tabla.getColumnModel().getColumn(8).setMaxWidth(0);
tabla.getColumnModel().getColumn(8).setMinWidth(0);
tabla.getColumnModel().getColumn(8).setPreferredWidth(0);



tabla.getColumnModel().getColumn(9).setMaxWidth(0);
tabla.getColumnModel().getColumn(9).setMinWidth(0);
tabla.getColumnModel().getColumn(9).setPreferredWidth(0);

}//GEN-LAST:event_b_editarActionPerformed

    private void b_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cancelarActionPerformed
        hab_botones();
        des_text();
        clear_text();
        
        tabla.getColumnModel().getColumn(4).setMaxWidth(0);
tabla.getColumnModel().getColumn(4).setMinWidth(0);
tabla.getColumnModel().getColumn(4).setPreferredWidth(0);

tabla.getColumnModel().getColumn(5).setMaxWidth(2147483647);
tabla.getColumnModel().getColumn(5).setMinWidth(50);
tabla.getColumnModel().getColumn(5).setPreferredWidth(70);



tabla.getColumnModel().getColumn(6).setMaxWidth(2147483647);
tabla.getColumnModel().getColumn(6).setMinWidth(50);
tabla.getColumnModel().getColumn(6).setPreferredWidth(70);


tabla.getColumnModel().getColumn(7).setMaxWidth(2147483647);
tabla.getColumnModel().getColumn(7).setMinWidth(50);
tabla.getColumnModel().getColumn(7).setPreferredWidth(70);


tabla.getColumnModel().getColumn(8).setMaxWidth(2147483647);
tabla.getColumnModel().getColumn(8).setMinWidth(50);
tabla.getColumnModel().getColumn(8).setPreferredWidth(70);



tabla.getColumnModel().getColumn(9).setMaxWidth(2147483647);
tabla.getColumnModel().getColumn(9).setMinWidth(50);
tabla.getColumnModel().getColumn(9).setPreferredWidth(70);


}//GEN-LAST:event_b_cancelarActionPerformed

    private void b_nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_nuevoActionPerformed

        operacion = "nuevo";
        gencodigo();
        des_botones();
        hab_text();
tabla.getColumnModel().getColumn(4).setMaxWidth(0);
tabla.getColumnModel().getColumn(4).setMinWidth(0);
tabla.getColumnModel().getColumn(4).setPreferredWidth(0);

tabla.getColumnModel().getColumn(5).setMaxWidth(2147483647);
tabla.getColumnModel().getColumn(5).setMinWidth(50);
tabla.getColumnModel().getColumn(5).setPreferredWidth(70);



tabla.getColumnModel().getColumn(6).setMaxWidth(2147483647);
tabla.getColumnModel().getColumn(6).setMinWidth(50);
tabla.getColumnModel().getColumn(6).setPreferredWidth(70);


tabla.getColumnModel().getColumn(7).setMaxWidth(2147483647);
tabla.getColumnModel().getColumn(7).setMinWidth(50);
tabla.getColumnModel().getColumn(7).setPreferredWidth(70);


tabla.getColumnModel().getColumn(8).setMaxWidth(2147483647);
tabla.getColumnModel().getColumn(8).setMinWidth(50);
tabla.getColumnModel().getColumn(8).setPreferredWidth(70);



tabla.getColumnModel().getColumn(9).setMaxWidth(2147483647);
tabla.getColumnModel().getColumn(9).setMinWidth(50);
tabla.getColumnModel().getColumn(9).setPreferredWidth(70);


    }//GEN-LAST:event_b_nuevoActionPerformed

    private void b_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_salirActionPerformed
        int mensaje = JOptionPane.showConfirmDialog(this, "¿DESEA SALIR?", "CONFIRMAR", JOptionPane.YES_NO_OPTION);
        if (mensaje == JOptionPane.YES_OPTION) {
            dispose();
        }
}//GEN-LAST:event_b_salirActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new control_calidad().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_anular;
    private javax.swing.JButton b_cancelar;
    private javax.swing.JButton b_editar;
    private javax.swing.JButton b_grabar;
    private javax.swing.JButton b_nuevo;
    private javax.swing.JButton b_salir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField t_cod_orden;
    private javax.swing.JTextField t_cod_personal;
    private javax.swing.JTextField t_cod_sucursal;
    private javax.swing.JTextField t_fecha;
    private javax.swing.JTextField t_hora_realizada;
    private javax.swing.JLabel t_nombre;
    private javax.swing.JTextField t_numero_control;
    private javax.swing.JLabel t_sucursal;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables

private void des_botones()
   {
      this.b_nuevo.setEnabled(false);
      this.b_anular.setEnabled(false);
      this.b_editar.setEnabled(false);
      this.b_salir.setEnabled(false);
      this.b_cancelar.setEnabled(true);
      this.b_grabar.setEnabled(false);

   }
       private void hab_botones()
   {
      this.b_nuevo.setEnabled(true);
      this.b_anular.setEnabled(true);
      this.b_editar.setEnabled(true);
      this.b_salir.setEnabled(true);
      this.b_cancelar.setEnabled(false);
      this.b_grabar.setEnabled(false);

   }
  private void hab_text()
   {
      mostrar_fecha();
      this.t_fecha.setEnabled(true);
      this.t_fecha.requestFocus();
  }
    private void clear_text()
   {
       this.t_numero_control.setText("");
       this.t_fecha.setText("");
       this.t_hora_realizada.setText("");
       this.t_cod_orden.setText("");
       limpiar_grilla();

   }
    private void des_text()
   {
     this.t_numero_control.setEnabled(false);
     this.t_fecha.setEnabled(false);
     this.t_hora_realizada.setEnabled(false);
     this.t_cod_orden.setEnabled(false);

   }
    private void limpiar_grilla()
   {
   DefaultTableModel dt;
   dt = (DefaultTableModel) tabla.getModel();
   while (tabla.getRowCount() > 0) {
   cursor.removeRow(0);
   }
   }
    private void gencodigo(){
   try {
    conn.sentencia = conn.conexion.createStatement();
    conn.resultado = conn.sentencia.executeQuery("SELECT IFNULL(MAX(cont_cod),0)+1 AS newcod FROM control_calidad");
    conn.resultado.next();
    t_numero_control.setText(conn.resultado.getString("newcod"));
         } catch (SQLException ex) {
            Logger.getLogger(control_calidad.class.getName()).log(Level.SEVERE, null, ex);
         }
         }
         private void mostrar_fecha() {
        try {
        ver_conex c=new ver_conex();
        c.sentencia=c.conexion.createStatement();
        c.resultado=c.sentencia.executeQuery("select date_format(current_date(),'%d/%m/%Y') as fecha");
        while (c.resultado.next()) {
        t_fecha.setText(c.resultado.getString("fecha"));
            }
            } catch (Exception ex) {
            javax.swing.JOptionPane.showMessageDialog(null, ex.getMessage());
            }
            }
private void Hora() {
        try {
            ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("select curtime() as hora");
            conn.resultado.next();
            t_hora_realizada.setText(conn.resultado.getString("hora"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e, "Aviso", JOptionPane.INFORMATION_MESSAGE);
        }
        }

private void buscar_detalle_orden(){

try{

     conn.sentencia = conn.conexion.createStatement();
     conn.resultado = conn.sentencia.executeQuery("SELECT * FROM detalle_orden_produccion d, orden_produccion o WHERE d.or_estado='Realizado' AND o.ord_pro_est= 'Realizado' AND o.or_pro_cod=d.or_pro_cod AND o.or_pro_cod=" + t_cod_orden.getText());
     boolean encontro = conn.resultado.next();
     if (encontro==true)//encontrog
            {

        this.t_cod_orden.setEnabled(false);
        this.b_grabar.setEnabled(true);
        this.b_grabar.requestFocus();

        ver_conex conn = new ver_conex();
        conn.sentencia = conn.conexion.createStatement();
        conn.resultado = conn.sentencia.executeQuery("SELECT d.rece_cod, d.det_item,c.rece_desc,d.cantidad FROM orden_produccion o,cabecera_recet c, detalle_orden_produccion d WHERE d.or_estado='Realizado' AND o.ord_pro_est='Realizado' AND d.rece_cod=c.rece_cod AND d.or_pro_cod=" + t_cod_orden.getText());
        while(conn.resultado.next())
         {
           conn.sentencia = conn.conexion.createStatement();
           String registro[] = new String[] {conn.resultado.getString("det_item"),conn.resultado.getString("rece_cod"),conn.resultado.getString("rece_desc"),conn.resultado.getString("cantidad")};
           cursor.addRow(registro);
        }

//////////////////////////////////////////////////////////////////////////

 if(t_cod_orden.getText().equals("") ||t_cod_orden.getText().trim().length()==0 ){
        JOptionPane.showMessageDialog(null,"EL CAMPO NO PUEDE ESTAR VACIO","AVISO",JOptionPane.ERROR_MESSAGE);

         this.t_cod_orden.setEnabled(true);
         this.t_cod_orden.requestFocus();
        }

           }
          else{
     JOptionPane.showMessageDialog(null, " NO EXISTE LA ORDEN/ REALIZAE UNO Y LUEGO VUELVA A INTENTARLO", "ATENCION", JOptionPane.ERROR_MESSAGE);
     this.t_cod_orden.setEnabled(true);
     this.t_cod_orden.requestFocus();
         }
         conn.sentencia = conn.conexion.createStatement();
     conn.resultado = conn.sentencia.executeQuery("SELECT * FROM detalle_orden_produccion d, orden_produccion o WHERE d.or_estado='pendiente' AND o.ord_pro_est= 'pendiente' AND o.or_pro_cod=d.or_pro_cod AND o.or_pro_cod=" + t_cod_orden.getText());
     boolean encontro2 = conn.resultado.next();
     if (encontro2==true)//encontrog
            {
          JOptionPane.showMessageDialog(null, " LA ORDEN ESTA EN PENDIENTE AUN NO SE HA CULMINADO", "ATENCION", JOptionPane.ERROR_MESSAGE);
     this.t_cod_orden.setEnabled(true);
     this.t_cod_orden.requestFocus();
     }
             conn.sentencia = conn.conexion.createStatement();
     conn.resultado = conn.sentencia.executeQuery("SELECT * FROM orden_produccion o WHERE  o.ord_pro_est= 'Anulado' AND o.or_pro_cod=" + t_cod_orden.getText());
     boolean encontro3 = conn.resultado.next();
     if (encontro3==true)//encontrog
            {
          JOptionPane.showMessageDialog(null, "ESTA ORDEN ESTA ANULADO", "ATENCION", JOptionPane.ERROR_MESSAGE);
     this.t_cod_orden.setEnabled(true);
     this.t_cod_orden.requestFocus();
     }

 } catch(SQLException e){
 }
 }

private void validarGrilla(){
    int tabla2= tabla.getRowCount();
    if(tabla2==0)
    {
       JOptionPane.showMessageDialog(null,"CARGAR GRILLA PARA CONTINUAR","AVISO",JOptionPane.INFORMATION_MESSAGE);
       t_cod_orden.requestFocus();
    }
    else
    {
      grabar();
    }
    }
private void grabar()
{
    try
    {

String f=t_fecha.getText();
String dd=f.substring(0,2);
String mm=f.substring(3,5);
String aa=f.substring(6,10);
String fech=aa+"/"+mm+"/"+dd;
DateFormat df=new SimpleDateFormat(fech);



String SQL = null;

        if(operacion.equals("nuevo"))
      {
      {
      SQL = "INSERT INTO control_calidad VALUES ("+t_numero_control.getText()+",'"+fech+"','"+t_hora_realizada.getText()+"','pendiente',"+t_cod_personal.getText()+","+t_cod_sucursal.getText()+","+t_cod_orden.getText()+")";

                                                                     //   control_calidad(cont_cod,cont_fecha,cont_hora,cont_estado,func_cod,suc_cod,or_pro_cod)
      }
        ver_conex c= new ver_conex();
        c.sentencia= c.conexion.createStatement();
        c.sentencia.executeUpdate(SQL);

        for (int fila = 0; fila < tabla.getRowCount(); fila++)
        {
        if(Boolean.parseBoolean(String.valueOf(this.tabla.getValueAt(fila,5)))==true)//marcado
        {
        c.sentencia = c.conexion.createStatement();
        c.sentencia.executeUpdate("INSERT INTO det_control_cantidad(cont_cod,rece_cod,descripcion,calidad,item,cantidad) VALUES ("+t_numero_control.getText()+","+tabla.getValueAt(fila,1)+",'"+tabla.getValueAt(fila,2)+"','EXCELENTE',"+tabla.getValueAt(fila,0)+","+tabla.getValueAt(fila,3)+")");
        }
        }
                for (int fila = 0; fila < tabla.getRowCount(); fila++)
        {
        if(Boolean.parseBoolean(String.valueOf(this.tabla.getValueAt(fila,6)))==true)//marcado
        {
        c.sentencia = c.conexion.createStatement();
        c.sentencia.executeUpdate("INSERT INTO det_control_cantidad(cont_cod,rece_cod,descripcion,calidad,item,cantidad) VALUES ("+t_numero_control.getText()+","+tabla.getValueAt(fila,1)+",'"+tabla.getValueAt(fila,2)+"','MUY BUENO',"+tabla.getValueAt(fila,0)+","+tabla.getValueAt(fila,3)+")");
        }
        }
              for (int fila = 0; fila < tabla.getRowCount(); fila++)
        {
        if(Boolean.parseBoolean(String.valueOf(this.tabla.getValueAt(fila,7)))==true)//marcado
        {
        c.sentencia = c.conexion.createStatement();
        c.sentencia.executeUpdate("INSERT INTO det_control_cantidad(cont_cod,rece_cod,descripcion,calidad,item,cantidad) VALUES ("+t_numero_control.getText()+","+tabla.getValueAt(fila,1)+",'"+tabla.getValueAt(fila,2)+"','BUENO',"+tabla.getValueAt(fila,0)+","+tabla.getValueAt(fila,3)+")");
        }
        }
              for (int fila = 0; fila < tabla.getRowCount(); fila++)
        {
        if(Boolean.parseBoolean(String.valueOf(this.tabla.getValueAt(fila,8)))==true)//marcado
        {
        c.sentencia = c.conexion.createStatement();
        c.sentencia.executeUpdate("INSERT INTO det_control_cantidad(cont_cod,rece_cod,descripcion,calidad,item,cantidad) VALUES ("+t_numero_control.getText()+","+tabla.getValueAt(fila,1)+",'"+tabla.getValueAt(fila,2)+"','ACEPTABLE',"+tabla.getValueAt(fila,0)+","+tabla.getValueAt(fila,3)+")");
        }
        }
                for (int fila = 0; fila < tabla.getRowCount(); fila++)
        {
        if(Boolean.parseBoolean(String.valueOf(this.tabla.getValueAt(fila,9)))==true)//marcado
        {
        c.sentencia = c.conexion.createStatement();
        c.sentencia.executeUpdate("INSERT INTO det_control_cantidad(cont_cod,rece_cod,descripcion,calidad,item,cantidad) VALUES ("+t_numero_control.getText()+","+tabla.getValueAt(fila,1)+",'"+tabla.getValueAt(fila,2)+"','MALO',"+tabla.getValueAt(fila,0)+","+tabla.getValueAt(fila,3)+")");
        }
        }
               //  c.sentencia = c.conexion.createStatement();
                 c.sentencia.executeUpdate("UPDATE orden_produccion SET ord_pro_est='Controlado' WHERE or_pro_cod = " + t_cod_orden.getText());
                // c.sentencia = c.conexion.createStatement();
                 c.sentencia.executeUpdate("UPDATE detalle_orden_produccion SET or_estado='Controlado' WHERE or_pro_cod = " + t_cod_orden.getText());
       
                                                                                                                            // det_control_cantidad(cont_cod,rece_cod,descripcion,calidad,item)
    JOptionPane.showMessageDialog(this,"EL CONTROL FUE REALIZADO","OPERACION",JOptionPane.INFORMATION_MESSAGE);
    genreporte();

     }
       }
    catch(Exception e)
    {
    }
    try{
    if(operacion.equals("anular"))
    {
    anular();
    }
    if (operacion.equals("editar"))
    {
     editar();
    }
    }
    catch(Exception e)
    {
        JOptionPane.showMessageDialog(this,"ERROR DE CONEXION33"+e,"AVISO",JOptionPane.INFORMATION_MESSAGE);
    }
    }

private void editar()
{
try {


//String f=t_fecha.getText();
//String dd=f.substring(0,2);
//String mm=f.substring(3,5);
//String aa=f.substring(6,10);
//String fech=aa+"/"+mm+"/"+dd;
//DateFormat df=new SimpleDateFormat(fech);


ver_conex co= new ver_conex();
co.sentencia = co.conexion.createStatement();
co.sentencia.executeUpdate("UPDATE control_calidad SET cont_fecha='"+t_fecha.getText()+ "',cont_hora= '"+ t_hora_realizada.getText()+ "' WHERE cont_cod = " + t_numero_control.getText());
                               // UPDATE control_calidad SET cont_fecha= cont_hora= WHERE cont_cod= or_pro_cod=
//or_pro_cod=" + t_cod_orden.getText()+"  AND

JOptionPane.showMessageDialog(this,"SE HA MODIFICADO EL CONTROL DE CALIDAD","OPERACION",JOptionPane.INFORMATION_MESSAGE);
  genreporte();
}catch (SQLException ex) {
 Logger.getLogger(control_calidad.class.getName()).log(Level.SEVERE, null, ex);
        }

        limpiar_grilla();
        hab_botones();
        des_text();
        clear_text();
}

private void anular()
{
  int res = javax.swing.JOptionPane.showOptionDialog(this,
  "DESEA ANULAR EL CONTROL DE CALIDAD?","CONTROL DE CALIDAD",javax.swing.JOptionPane.OK_CANCEL_OPTION,
   javax.swing.JOptionPane.QUESTION_MESSAGE,null,
   new Object[] { "Si", "No"},"Si");
     if (res == javax.swing.JOptionPane.OK_OPTION)
     {
           try {

            ver_conex c= new ver_conex();
            c.sentencia = c.conexion.createStatement();
            c.sentencia.executeUpdate("UPDATE control_calidad SET cont_estado='Anulado' WHERE cont_cod = " + t_numero_control.getText());

            c.sentencia = c.conexion.createStatement();
            c.sentencia.executeUpdate("UPDATE orden_produccion SET ord_pro_est='Realizado' WHERE or_pro_cod=" + t_cod_orden.getText());
            
                c.sentencia = c.conexion.createStatement();
                 c.sentencia.executeUpdate("UPDATE detalle_orden_produccion SET or_estado='Realizado' WHERE or_pro_cod = " + t_cod_orden.getText());



                JOptionPane.showMessageDialog(null, "REGISTRO FUE ANULADO EXITOSAMENTE", "AVISO", JOptionPane.INFORMATION_MESSAGE);

      }catch (SQLException ex) {
      Logger.getLogger(control_calidad.class.getName()).log(Level.SEVERE, null, ex);
      }
      } else
       {
       JOptionPane.showMessageDialog(null, "OPERACIÓN CANCELADA", "ATENCIÓN", JOptionPane.ERROR_MESSAGE);
       }
       }



private void buscar_detalle_control(){

try{

     conn.sentencia = conn.conexion.createStatement();
     conn.resultado = conn.sentencia.executeQuery("SELECT * FROM control_calidad WHERE cont_estado= 'pendiente' AND cont_cod=" + t_numero_control.getText());
     boolean encontro = conn.resultado.next();
     if (encontro==true)//encontrog
            {
        this.t_numero_control.setText(conn.resultado.getString("cont_cod"));
        this.t_fecha.setText(conn.resultado.getString("cont_fecha"));
        this.t_hora_realizada.setText(conn.resultado.getString("cont_hora"));
        this.t_cod_orden.setText(conn.resultado.getString("or_pro_cod"));

////////////////////////////////////////////////////////////////////////
           ver_conex conn = new ver_conex();
           conn.sentencia = conn.conexion.createStatement();
           conn.resultado = conn.sentencia.executeQuery(" SELECT cont_cod,rece_cod,descripcion,calidad,item,cantidad FROM det_control_cantidad WHERE cont_cod="+t_numero_control.getText()); //OJO LE PASO LA SENTENCIA=" + t_numero_receta.getText());
          while(conn.resultado.next())
           {
           conn.sentencia = conn.conexion.createStatement();
           String registro[] = new String[] {conn.resultado.getString("item"),conn.resultado.getString("rece_cod"),conn.resultado.getString("descripcion"),conn.resultado.getString("cantidad"),conn.resultado.getString("calidad")};
           cursor.addRow(registro);
       //    tabla.setEnabled(false);

           }

        if(operacion.equals("editar")){
        this.t_numero_control.setEnabled(false) ;
        this.t_fecha.setEnabled(true) ;
        this.t_fecha.requestFocus();
              }

        if(operacion.equals("anular")){
        this.t_numero_control.setEnabled(false) ;
        this.b_grabar.setEnabled(true);
        this.b_grabar.requestFocus();

               }
               }
          else{
     JOptionPane.showMessageDialog(null, "NO EXISTE EL CONTROL DE CALIDAD CON ESTE NUMERO", "ATENCION", JOptionPane.ERROR_MESSAGE);
     this.t_numero_control.setEnabled(true);
     this.t_numero_control.requestFocus();
         }
                     ver_conex conn2 = new ver_conex();
                     conn2.sentencia = conn2.conexion.createStatement();
                     conn2.resultado = conn2.sentencia.executeQuery("SELECT * FROM control_calidad WHERE  cont_estado='Anulado' AND  cont_cod=" + t_numero_control.getText());
                     boolean encontro3 = conn2.resultado.next();
                    if (encontro3==true)//encontrog
                    {
                    JOptionPane.showMessageDialog(null, "ESTE CONTROL DE CALIDAD ESTA ANULADA", "ATENCION", JOptionPane.ERROR_MESSAGE);
                    this.t_numero_control.setEnabled(true);
                    this.t_numero_control.requestFocus();
                   }


 } catch(SQLException e){
 //JOptionPane.showMessageDialog(null,e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
}
}

public void genreporte() //throws JRException, Exception
    {
        try //throws JRException, Exception
        {
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT c.cont_cod,c.cont_fecha,c.cont_hora,c.or_pro_cod,f.func_nom,f.func_ape,f.func_ci,su.suc_desc ,d.rece_cod,d.descripcion,d.calidad,d.cantidad FROM control_calidad c,funcionario f, sucursal su, det_control_cantidad d WHERE c.func_cod=f.func_cod AND c.cont_cod=d.cont_cod AND su.suc_cod=c.suc_cod AND c.cont_cod="+t_numero_control.getText()); //OJO LE PASO LA SENTENCIA
            JRResultSetDataSource jrRS = new JRResultSetDataSource(conn.resultado);

            HashMap parameters = new HashMap();
            URL urlMaestro = getClass().getClassLoader().getResource("impresion/control_calidad.jasper");

            // Cargamos el reporte
            JasperReport masterReport = null;
            masterReport = (JasperReport) JRLoader.loadObject(urlMaestro);
            JasperPrint masterPrint = null;
            masterPrint = JasperFillManager.fillReport(masterReport, parameters, jrRS);
            JasperViewer ventana = new JasperViewer(masterPrint, false);
            ventana.setTitle("VISTA PREVIA");
            ventana.setVisible(true);

        } catch (JRException ex) {
            Logger.getLogger(control_calidad.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(control_calidad.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


       }