/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import java.awt.event.KeyEvent;
import java.net.URL;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import programas.ver_conex;

/**
 *
 * @author User
 */
public class Productos extends javax.swing.JFrame {

    /**
     * Creates new form Productos
     */
    ver_conex conn = new ver_conex();
    javax.swing.table.DefaultTableModel cursor;
    private int posreg;
    private int band = 0;
    public int id_stock;

    javax.swing.table.DefaultTableModel m;

    public Productos() {
        initComponents();

        cursor = (javax.swing.table.DefaultTableModel) grilla.getModel();
        // des_text();
        this.setLocationRelativeTo(null);
        // hab_botones();
        // mardesc.setEnabled(false);
        // beditar.setEnabled(false);
        // tipdesc.setEnabled(false);
        cargar_grilla();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        bcancelar = new javax.swing.JButton();
        bgrabar = new javax.swing.JButton();
        bsalir = new javax.swing.JButton();
        bagregar = new javax.swing.JButton();
        beditar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        grilla = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        lcodigo = new javax.swing.JLabel();
        txtcodigo = new javax.swing.JTextField();
        lcodigo1 = new javax.swing.JLabel();
        txtbarra = new javax.swing.JTextField();
        lcodigo3 = new javax.swing.JLabel();
        descripcion = new javax.swing.JTextField();
        lcosto = new javax.swing.JLabel();
        costo = new javax.swing.JTextField();
        lcosto1 = new javax.swing.JLabel();
        precio_venta = new javax.swing.JTextField();
        lcodigo2 = new javax.swing.JLabel();
        chkActivo = new javax.swing.JCheckBox();
        lcosto2 = new javax.swing.JLabel();
        disponible_salon = new javax.swing.JTextField();
        unid_cod = new javax.swing.JTextField();
        unidadMedida = new javax.swing.JLabel();
        unidadMedidaDesc = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(173, 216, 230));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel4.setText("Productos");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        bcancelar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bcancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Cancel_icon-icons.com_73703.png"))); // NOI18N
        bcancelar.setEnabled(false);
        bcancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bcancelarActionPerformed(evt);
            }
        });

        bgrabar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bgrabar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/savedisk_floppydisk_guardar_1543.png"))); // NOI18N
        bgrabar.setEnabled(false);
        bgrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bgrabarActionPerformed(evt);
            }
        });

        bsalir.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bsalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/logout_90894.png"))); // NOI18N
        bsalir.setToolTipText("");
        bsalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsalirActionPerformed(evt);
            }
        });

        bagregar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bagregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/1486485588-add-create-new-math-sign-cross-plus_81186.png"))); // NOI18N
        bagregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bagregarActionPerformed(evt);
            }
        });

        beditar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        beditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/documentediting_editdocuments_text_documentedi_2820.png"))); // NOI18N
        beditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bgrabar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bsalir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bagregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bcancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(beditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(bagregar)
                .addGap(22, 22, 22)
                .addComponent(beditar)
                .addGap(18, 18, 18)
                .addComponent(bgrabar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bcancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bsalir)
                .addContainerGap())
        );

        grilla.setBackground(new java.awt.Color(153, 255, 255));
        grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Codigo  Barra", "Descripcion", "Costo", "Precio Venta", "Udm", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grilla.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                grillaAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        grilla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grillaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(grilla);

        jPanel3.setBackground(new java.awt.Color(173, 216, 230));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lcodigo.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lcodigo.setText("Codigo :");

        txtcodigo.setEnabled(false);
        txtcodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcodigoActionPerformed(evt);
            }
        });
        txtcodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcodigoKeyPressed(evt);
            }
        });

        lcodigo1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lcodigo1.setText("Codigo de Barras:");

        txtbarra.setEnabled(false);
        txtbarra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbarraActionPerformed(evt);
            }
        });
        txtbarra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtbarraKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtbarraKeyTyped(evt);
            }
        });

        lcodigo3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lcodigo3.setText("Descripcion:");

        descripcion.setEnabled(false);
        descripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descripcionActionPerformed(evt);
            }
        });
        descripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                descripcionKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                descripcionKeyTyped(evt);
            }
        });

        lcosto.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lcosto.setText("Costo :");

        costo.setEnabled(false);
        costo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                costoActionPerformed(evt);
            }
        });
        costo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                costoKeyTyped(evt);
            }
        });

        lcosto1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lcosto1.setText("Precio Venta:");

        precio_venta.setEnabled(false);
        precio_venta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                precio_ventaActionPerformed(evt);
            }
        });
        precio_venta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                precio_ventaKeyTyped(evt);
            }
        });

        lcodigo2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lcodigo2.setText("Estado:");

        chkActivo.setText("Activo");
        chkActivo.setEnabled(false);
        chkActivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkActivoActionPerformed(evt);
            }
        });

        lcosto2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lcosto2.setText("Disp. Salon:");

        disponible_salon.setEnabled(false);
        disponible_salon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disponible_salonActionPerformed(evt);
            }
        });
        disponible_salon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                disponible_salonKeyTyped(evt);
            }
        });

        unid_cod.setEnabled(false);
        unid_cod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unid_codActionPerformed(evt);
            }
        });
        unid_cod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                unid_codKeyTyped(evt);
            }
        });

        unidadMedida.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        unidadMedida.setText("UdM:");

        unidadMedidaDesc.setEnabled(false);
        unidadMedidaDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unidadMedidaDescActionPerformed(evt);
            }
        });
        unidadMedidaDesc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                unidadMedidaDescKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lcodigo3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(descripcion))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(lcodigo1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtbarra, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(lcodigo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(lcosto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(costo, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lcosto1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(precio_venta, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(lcodigo2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chkActivo))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(lcosto2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(disponible_salon, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(unidadMedida)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(unid_cod, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(unidadMedidaDesc)))
                        .addGap(0, 47, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lcodigo)
                    .addComponent(txtcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lcodigo1)
                    .addComponent(txtbarra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lcodigo3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lcosto)
                    .addComponent(costo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lcosto1)
                    .addComponent(precio_venta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lcosto2)
                    .addComponent(disponible_salon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(unidadMedida)
                        .addComponent(unid_cod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(unidadMedidaDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lcodigo2)
                    .addComponent(chkActivo))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtcodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcodigoActionPerformed
        // TODO add your handling code here:
        // buscar();
    }//GEN-LAST:event_txtcodigoActionPerformed

    private void txtcodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcodigoKeyPressed
        // TODO add your handling code here:
        //  buscar();
    }//GEN-LAST:event_txtcodigoKeyPressed

    private void bcancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bcancelarActionPerformed
        // TODO add your handling code here:
        borrar_text();
        hab_botones();
        des_text();
    }//GEN-LAST:event_bcancelarActionPerformed

    private void bgrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bgrabarActionPerformed
        // TODO add your handling code here:

        grabar();
        borrar_text();
        hab_botones();
        des_text();

        // bmarcas.setEnabled(false);
        //  bgrupos.setEnabled(false);

    }//GEN-LAST:event_bgrabarActionPerformed

    private void bsalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsalirActionPerformed
        // TODO add your handling code here:
        salir();
    }//GEN-LAST:event_bsalirActionPerformed

    private void bagregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bagregarActionPerformed
        // TODO add your handling code here:
        bandera = "agregar";
        gencod();
        gencodStock();
        des_botones();
        txtbarra.setEnabled(true);
        txtbarra.requestFocus();
        // boton_agregar();
    }//GEN-LAST:event_bagregarActionPerformed

    private void txtbarraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbarraActionPerformed
        // TODO add your handling code here:
        buscar();

    }//GEN-LAST:event_txtbarraActionPerformed

    private void txtbarraKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbarraKeyPressed
        // TODO add your handling code here:

        if (bandera.equals("editar")) {
            if (txtbarra.getText().equals("") && evt.getKeyChar() == KeyEvent.VK_ENTER)//no trae nada
            {
                JTextField[] tfParam = new JTextField[2];
                tfParam[0] = this.txtbarra;
                VentanaBuscar buscador = new VentanaBuscar("SELECT BARRA,UPPER(descripcion)AS descripcion\n"
                        + "FROM producto where descripcion like  ", new String[]{"CODIGO PRODUCTO", "NOMBRE PRODUCTO"}, 2, tfParam);
                buscador.setTitle("Buscar PRODUCTOS");
                buscador.setVisible(true);
            }
    }//GEN-LAST:event_txtbarraKeyPressed
    }
    private void descripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descripcionActionPerformed
        // TODO add your handling code here:
        costo.setEnabled(true);
        costo.requestFocus();


    }//GEN-LAST:event_descripcionActionPerformed

    private void descripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descripcionKeyTyped
        // TODO add your handling code here:
        // TODO add your handling code here:
    }//GEN-LAST:event_descripcionKeyTyped

    private void chkActivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkActivoActionPerformed
        // TODO add your handling code here:
        if (chkActivo.isSelected() == true) {
            estado = 1;
            bgrabar.setEnabled(true);
            bgrabar.requestFocus();
        }
        if (chkActivo.isSelected() == false) {
            estado = 0;
            bgrabar.setEnabled(true);
            bgrabar.requestFocus();
        }
    }//GEN-LAST:event_chkActivoActionPerformed

    private void grillaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grillaMouseClicked
        // TODO add your handling code here:}
    }//GEN-LAST:event_grillaMouseClicked

    private void costoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_costoActionPerformed
        // TODO add your handling code here:
        precio_venta.setEnabled(true);
        precio_venta.requestFocus();
    }//GEN-LAST:event_costoActionPerformed

    private void costoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_costoKeyTyped
        // TODO add your handling code here:
        // TODO add your handling code here:
        char caracter = evt.getKeyChar();
        if (((caracter < '0')
                || (caracter > '9'))
                && (caracter != evt.VK_BACK_SPACE)) {
            evt.consume();
        }
    }//GEN-LAST:event_costoKeyTyped

    private void precio_ventaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_precio_ventaActionPerformed
        // TODO add your handling code here:
        disponible_salon.setEnabled(true);
        disponible_salon.requestFocus();


    }//GEN-LAST:event_precio_ventaActionPerformed

    private void precio_ventaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precio_ventaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_precio_ventaKeyTyped

    private void descripcionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descripcionKeyReleased
        // TODO add your handling code here:
        convertiraMayusculasEnJtextfield(descripcion);

    }//GEN-LAST:event_descripcionKeyReleased

    private void beditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beditarActionPerformed
        // TODO add your handling code here:
        bandera = "editar";
        botonEditar();
    }//GEN-LAST:event_beditarActionPerformed

    private void disponible_salonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disponible_salonActionPerformed
        // TODO add your handling code here:
        unid_cod.setEnabled(true);
        unid_cod.requestFocus();

    }//GEN-LAST:event_disponible_salonActionPerformed

    private void disponible_salonKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_disponible_salonKeyTyped
        // TODO add your handling code here:
        char caracter = evt.getKeyChar();
        if (((caracter < '0')
                || (caracter > '9'))
                && (caracter != evt.VK_BACK_SPACE)) {
            evt.consume();
        }
    }//GEN-LAST:event_disponible_salonKeyTyped

    private void txtbarraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbarraKeyTyped
        // TODO add your handling code here:
        char caracter = evt.getKeyChar();
        if (((caracter < '0')
                || (caracter > '9'))
                && (caracter != evt.VK_BACK_SPACE)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtbarraKeyTyped

    private void grillaAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_grillaAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_grillaAncestorAdded

    private void unid_codActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unid_codActionPerformed
        // TODO add your handling code here:
        buscarUnidad();
        chkActivo.setEnabled(true);
    }//GEN-LAST:event_unid_codActionPerformed

    private void unid_codKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_unid_codKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_unid_codKeyTyped

    private void unidadMedidaDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unidadMedidaDescActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unidadMedidaDescActionPerformed

    private void unidadMedidaDescKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_unidadMedidaDescKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_unidadMedidaDescKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Productos().setVisible(true);
            }
        });
    }
    public String bandera = "";
    public String viva = "";
    public int estado = 0;
    public int valorBase;
    public int saldo = 0;
    public int contenido = 0;
    public int cod_asociado = 0;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bagregar;
    private javax.swing.JButton bcancelar;
    private javax.swing.JButton beditar;
    private javax.swing.JButton bgrabar;
    private javax.swing.JButton bsalir;
    private javax.swing.JCheckBox chkActivo;
    private javax.swing.JTextField costo;
    private javax.swing.JTextField descripcion;
    private javax.swing.JTextField disponible_salon;
    private javax.swing.JTable grilla;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lcodigo;
    private javax.swing.JLabel lcodigo1;
    private javax.swing.JLabel lcodigo2;
    private javax.swing.JLabel lcodigo3;
    private javax.swing.JLabel lcosto;
    private javax.swing.JLabel lcosto1;
    private javax.swing.JLabel lcosto2;
    private javax.swing.JTextField precio_venta;
    private javax.swing.JTextField txtbarra;
    private javax.swing.JTextField txtcodigo;
    private javax.swing.JTextField unid_cod;
    private javax.swing.JLabel unidadMedida;
    private javax.swing.JTextField unidadMedidaDesc;
    // End of variables declaration//GEN-END:variables

    private void des_text() {
        txtbarra.setEnabled(false);
        descripcion.setEnabled(false);
        costo.setEnabled(false);
        precio_venta.setEnabled(false);
        chkActivo.setEnabled(false);
        disponible_salon.setEnabled(false);
        unid_cod.setEnabled(false);
        unidadMedidaDesc.setEnabled(false);

    }

    private void borrar_text() {
        txtcodigo.setText("");
        txtbarra.setText("");
        descripcion.setText("");
        costo.setText("");
        unid_cod.setText("");
        unidadMedidaDesc.setText("");
        precio_venta.setText("");
        disponible_salon.setText("");
        chkActivo.setSelected(false);
    }

    private void des_botones() //metodo para deshabilitar botones
    {
        bagregar.setEnabled(false);
        //   bborrar.setEnabled(false);
        beditar.setEnabled(false);
        bgrabar.setEnabled(false);
        bsalir.setEnabled(false);
        bcancelar.setEnabled(true);
    }

    private void hab_botones() // metodo para hab botones
    {
        bagregar.setEnabled(true);
        // bborrar.setEnabled(true);
        beditar.setEnabled(true);
        bgrabar.setEnabled(false);
        bsalir.setEnabled(true);
        bcancelar.setEnabled(false);
    }

    private void gencod() {
        try {
            //       Main.inicio = "no";
            ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT IFNULL(MAX(prd_cod),0)+ 1 AS xxx FROM producto");
            conn.resultado.next();
            this.txtcodigo.setText(conn.resultado.getString("xxx"));
        } catch (SQLException ex) {
            Logger.getLogger(mercaderia.class.getName()).log(Level.SEVERE, null, ex);
            //   } catch (SQLException ex)
            {
                Logger.getLogger(mercaderia.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }

    private void grabar() {

        try {
            ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();

            if (bandera.equals("agregar")) {

                if (chkActivo.isSelected() == true) {
                    estado = 1;
                }

                gencod();// sirve para que no se dupliquen los codigos y no de error cuando se trabaja en redes///////////////////////////////////////////////////prd_cod,////////////////tip_prd_cod,/////////presen_cod,/////////////mar_cod,/////////////unid_cod,/////////////prd_nom,//////////////////prd_costo,/////////////iva,////matp_est,//////   grup_cod
                conn.sentencia.executeUpdate("INSERT INTO producto(prd_cod,tip_prd_cod,presen_cod,mar_cod,unid_cod,descripcion,costo,iva,estado,barra,precio_venta)values(" + txtcodigo.getText() + "," + 1 + "," + 1 + "," + 1 + "," + unid_cod.getText() + ",'" + descripcion.getText() + "'," + costo.getText() + "," + 1 + "," + estado + "," + txtbarra.getText() + "," + precio_venta.getText() + ")");
                conn.sentencia.executeUpdate("INSERT INTO stock_productos(ID,ID_PRODUCTO,PLU_PRODUCTO,DISPONIBLE,ESTADO)VALUES"
                        + "(" + id_stock + "," + txtcodigo.getText() + "," + txtbarra.getText() + "," + disponible_salon.getText() + " ,' 1 ') ");
                cargar_grilla();
            }
            if (bandera.equals("editar")) {
                if (chkActivo.isSelected() == true) {
                    estado = 1;
                }
                saldo = Integer.parseInt(disponible_salon.getText());
                conn.sentencia.executeUpdate("UPDATE producto SET barra ='" + txtbarra.getText() + "',descripcion='" + descripcion.getText() + "',unid_cod='" + unid_cod.getText() + "', costo='" + costo.getText() + "' ,precio_venta='" + precio_venta.getText() + "',estado=" + estado + " WHERE prd_cod =" + txtcodigo.getText());

                int valor_stock = 0;

                conn.sentencia.executeUpdate("UPDATE stock_productos SET disponible =" + disponible_salon.getText() + " where id_producto = " + txtcodigo.getText() + "");
                //  conn.sentencia.executeUpdate("UPDATE producto SET descripcion = '" + descripcion.getText() + "', costo =  " + costo.getText() + ", estado = " +estado+ ",barra = " + txtbarra.getText() + ", precio_venta ="+ precio_venta +" WHERE barra ="+ txtbarra.getText());
                cargar_grilla();
            }

            JOptionPane.showMessageDialog(null, "REGISTRO GRABADO", "CONFIRMACION", JOptionPane.INFORMATION_MESSAGE);

        } catch (SQLException ex) {
            Logger.getLogger(mercaderia.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void salir() {
        int respuesta = JOptionPane.showConfirmDialog(this, "DESEA SALIR", "CONFIRMAR", JOptionPane.YES_NO_OPTION);
        if (respuesta == JOptionPane.YES_OPTION) {
            dispose();

        }

    }

    private void buscar() {
        try {
            // Main.inicio = "no";
            ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT p.*,sp.disponible , um.unid_desc as unidadMedida"
                    + "\n"
                    + "FROM producto p \n"
                    + "INNER JOIN stock_productos sp ON sp.id_producto = p.prd_cod\n"
                    + "INNER JOIN unidad_medida um ON p.unid_cod = um.unid_cod\n"
                    + "WHERE p.barra  = " + txtbarra.getText());
            boolean encontro = conn.resultado.next();

            if (encontro == true && bandera.equals("agregar")) {
                JOptionPane.showMessageDialog(null, "EL CODIGO INGRESADO YA EXISTE");
                txtbarra.requestFocus();
                descripcion.setEnabled(false);

            }
            if (encontro == true && bandera.equals("editar")) // no encontro
            {
                descripcion.setEnabled(true);
                descripcion.requestFocus();
                txtbarra.setEnabled(false);
                txtcodigo.setText(conn.resultado.getString("prd_cod"));
                txtbarra.setText(conn.resultado.getString("barra"));
                descripcion.setText(conn.resultado.getString("descripcion"));
                costo.setText(conn.resultado.getString("costo"));
                precio_venta.setText(conn.resultado.getString("precio_venta"));
                disponible_salon.setText(conn.resultado.getString("disponible"));
                unid_cod.setText(conn.resultado.getString("unid_cod"));
                unidadMedidaDesc.setText(conn.resultado.getString("unidadMedida"));

                this.valorBase = (Integer.parseInt(conn.resultado.getString("estado")));

                if (valorBase == 1) {
                    chkActivo.setSelected(true);
                }
                if (valorBase == 0) {
                    chkActivo.setSelected(false);
                }

            }
            if (encontro == false && bandera.equals("editar")) {

                JOptionPane.showMessageDialog(null, "EL CODIGO INGRESADO NO EXITE");

            }
            if (encontro == false && bandera.equals("agregar")) {
                descripcion.setEnabled(true);
                descripcion.requestFocus();
            }
        } catch (SQLException ex) {

        }

    }

    private void cargar_grilla() {
        try {
            for (int i = grilla.getRowCount() - 1; i >= 0; i--) {
                cursor.removeRow(i);
            }

            ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT * from producto p inner join unidad_medida  um on um.unid_cod = p.unid_cod");

            while (conn.resultado.next()) {
                Object[] datos = {
                    conn.resultado.getString("prd_cod"),
                    conn.resultado.getString("barra"),
                    conn.resultado.getString("descripcion"),
                    conn.resultado.getString("costo"),
                    conn.resultado.getString("precio_venta"),
                    conn.resultado.getString("unid_desc"),
                    conn.resultado.getString("estado"),};
                cursor.addRow(datos);
            }

        } catch (SQLException ex) {
            Logger.getLogger(mercaderia.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void gencodStock() {
        try {
            //       Main.inicio = "no";
            ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT IFNULL(MAX(id),0)+ 1 AS xxx FROM stock_productos");
            conn.resultado.next();

            id_stock = (Integer.parseInt(conn.resultado.getString("xxx")));

        } catch (SQLException ex) {
            Logger.getLogger(mercaderia.class.getName()).log(Level.SEVERE, null, ex);
            //   } catch (SQLException ex)
            {
                Logger.getLogger(mercaderia.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }

    public void convertiraMayusculasEnJtextfield(javax.swing.JTextField jTextfieldS) {
        String cadena = (jTextfieldS.getText()).toUpperCase();
        jTextfieldS.setText(cadena);
    }

    private void botonEditar() //metodo para deshabilitar botones
    {
        bagregar.setEnabled(false);
        beditar.setEnabled(false);

        bgrabar.setEnabled(true);
        bsalir.setEnabled(false);

        bcancelar.setEnabled(true);
        txtbarra.setEnabled(true);
        txtbarra.requestFocus();
    }

    public void buscarUnidad() {
        try {

            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT unid_desc \n"
                    + "FROM unidad_medida\n"
                    + "WHERE unid_cod = " + this.unid_cod.getText());

            if (conn.resultado.next())//si encontro
            {
                this.unidadMedidaDesc.setText(conn.resultado.getString("unid_desc"));

                //   this.txtdepdescri.setText(conn.resultado.getString("depo_desc"));
            } else//no encontro
            {
                JOptionPane.showMessageDialog(null, "El codigo ingresado aun no esta Registrado");
                unid_cod.requestFocus();

            }

        } catch (SQLException exceptionSql) {
            //   JOptionPane.showMessageDialog(null, exceptionSql.getMessage(), "Error de Conexion con la Base de Datos", JOptionPane.ERROR_MESSAGE);
        }

    }

}
