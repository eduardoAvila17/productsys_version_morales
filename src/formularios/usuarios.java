/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import java.awt.event.KeyEvent;
import java.net.URL;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import programas.ver_conex;

/**
 *
 * @author User
 */
public class usuarios extends javax.swing.JFrame {

    /**
     * Creates new form Productos
     */
    ver_conex conn = new ver_conex();
    javax.swing.table.DefaultTableModel cursor;
    private int posreg;
    private int band = 0;
    public int id_stock;
    javax.swing.table.DefaultTableModel m;

    public usuarios() {
        initComponents();

        cursor = (javax.swing.table.DefaultTableModel) grilla.getModel();
        // des_text();
        this.setLocationRelativeTo(null);
        // hab_botones();
        // mardesc.setEnabled(false);
        // beditar.setEnabled(false);
        // tipdesc.setEnabled(false);
        cargar_grilla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        bcancelar = new javax.swing.JButton();
        bagregar = new javax.swing.JButton();
        beditar = new javax.swing.JButton();
        bsalir = new javax.swing.JButton();
        bgrabar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        grilla = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        lcodigo = new javax.swing.JLabel();
        txtcodigo = new javax.swing.JTextField();
        lcodigo1 = new javax.swing.JLabel();
        codfuncionario = new javax.swing.JTextField();
        lcodigo3 = new javax.swing.JLabel();
        usuario = new javax.swing.JTextField();
        lcosto = new javax.swing.JLabel();
        contraseña = new javax.swing.JTextField();
        lcosto1 = new javax.swing.JLabel();
        nivel = new javax.swing.JTextField();
        lcodigo2 = new javax.swing.JLabel();
        chkActivo = new javax.swing.JCheckBox();
        apellido = new javax.swing.JTextField();
        nombre1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(173, 216, 230));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setBackground(new java.awt.Color(173, 216, 230));
        jLabel4.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel4.setText("Usuarios");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        bcancelar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bcancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Cancel_icon-icons.com_73703.png"))); // NOI18N
        bcancelar.setEnabled(false);
        bcancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bcancelarActionPerformed(evt);
            }
        });

        bagregar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bagregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/1486485588-add-create-new-math-sign-cross-plus_81186.png"))); // NOI18N
        bagregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bagregarActionPerformed(evt);
            }
        });

        beditar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        beditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/documentediting_editdocuments_text_documentedi_2820.png"))); // NOI18N
        beditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beditarActionPerformed(evt);
            }
        });

        bsalir.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bsalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/logout_90894.png"))); // NOI18N
        bsalir.setToolTipText("");
        bsalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsalirActionPerformed(evt);
            }
        });

        bgrabar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bgrabar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/savedisk_floppydisk_guardar_1543.png"))); // NOI18N
        bgrabar.setEnabled(false);
        bgrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bgrabarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bsalir, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                            .addComponent(bgrabar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bcancelar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(bagregar, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                                .addComponent(beditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bagregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(beditar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bgrabar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bcancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bsalir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        grilla.setBackground(new java.awt.Color(153, 255, 255));
        grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Usuario", "Contraseña", "Nivel", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grilla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grillaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(grilla);
        if (grilla.getColumnModel().getColumnCount() > 0) {
            grilla.getColumnModel().getColumn(0).setResizable(false);
            grilla.getColumnModel().getColumn(1).setResizable(false);
            grilla.getColumnModel().getColumn(2).setResizable(false);
            grilla.getColumnModel().getColumn(3).setResizable(false);
            grilla.getColumnModel().getColumn(4).setResizable(false);
        }

        jPanel3.setBackground(new java.awt.Color(173, 216, 230));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lcodigo.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lcodigo.setText("Codigo :");

        txtcodigo.setEnabled(false);
        txtcodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcodigoActionPerformed(evt);
            }
        });
        txtcodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcodigoKeyPressed(evt);
            }
        });

        lcodigo1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lcodigo1.setText("Cod. Funcionario:");

        codfuncionario.setEnabled(false);
        codfuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codfuncionarioActionPerformed(evt);
            }
        });
        codfuncionario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                codfuncionarioKeyPressed(evt);
            }
        });

        lcodigo3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lcodigo3.setText("Usuario:");

        usuario.setEnabled(false);
        usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usuarioActionPerformed(evt);
            }
        });
        usuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                usuarioKeyTyped(evt);
            }
        });

        lcosto.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lcosto.setText("Contraseña:");

        contraseña.setEnabled(false);
        contraseña.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contraseñaActionPerformed(evt);
            }
        });
        contraseña.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                contraseñaKeyTyped(evt);
            }
        });

        lcosto1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lcosto1.setText("Nivel:");

        nivel.setEnabled(false);
        nivel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nivelActionPerformed(evt);
            }
        });
        nivel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nivelKeyTyped(evt);
            }
        });

        lcodigo2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lcodigo2.setText("Estado:");

        chkActivo.setText("Activo");
        chkActivo.setEnabled(false);
        chkActivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkActivoActionPerformed(evt);
            }
        });

        apellido.setEditable(false);
        apellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apellidoActionPerformed(evt);
            }
        });
        apellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                apellidoKeyPressed(evt);
            }
        });

        nombre1.setEditable(false);
        nombre1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombre1ActionPerformed(evt);
            }
        });
        nombre1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nombre1KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(lcodigo1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(codfuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(nombre1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(apellido, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(lcosto1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nivel, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(lcodigo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(lcodigo2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chkActivo))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(lcosto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(contraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(lcodigo3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lcodigo)
                    .addComponent(txtcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lcodigo1)
                    .addComponent(codfuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(apellido, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nombre1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lcodigo3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lcosto)
                    .addComponent(contraseña, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lcosto1)
                    .addComponent(nivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lcodigo2)
                    .addComponent(chkActivo))
                .addGap(36, 36, 36))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 651, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtcodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcodigoActionPerformed
        // TODO add your handling code here:
        // buscar();
    }//GEN-LAST:event_txtcodigoActionPerformed

    private void txtcodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcodigoKeyPressed
        // TODO add your handling code here:
        //  buscar();
    }//GEN-LAST:event_txtcodigoKeyPressed

    private void bcancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bcancelarActionPerformed
        // TODO add your handling code here:
        borrar_text();
        hab_botones();
        des_text();
    }//GEN-LAST:event_bcancelarActionPerformed

    private void bgrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bgrabarActionPerformed
        // TODO add your handling code here:
        grabar();
        borrar_text();
        hab_botones();
        des_text();

        // bmarcas.setEnabled(false);
        //  bgrupos.setEnabled(false);

    }//GEN-LAST:event_bgrabarActionPerformed

    private void bsalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsalirActionPerformed
        // TODO add your handling code here:
        salir();
    }//GEN-LAST:event_bsalirActionPerformed

    private void bagregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bagregarActionPerformed
        // TODO add your handling code here:
        bandera = "agregar";
        gencod();
        //  gencodStock();
        des_botones();
        codfuncionario.setEnabled(true);
        codfuncionario.requestFocus();

        // boton_agregar();
    }//GEN-LAST:event_bagregarActionPerformed

    private void codfuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codfuncionarioActionPerformed
        // TODO add your handling code here:
        buscar_funcionario();


    }//GEN-LAST:event_codfuncionarioActionPerformed

    private void codfuncionarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codfuncionarioKeyPressed
        // TODO add your handling code here:

        if (codfuncionario.getText().equals("") && evt.getKeyChar() == KeyEvent.VK_ENTER)//no trae nada
        {
            JTextField[] tfParam = new JTextField[2];
            tfParam[0] = this.codfuncionario;

            VentanaBuscar buscador = new VentanaBuscar("SELECT FUNC_COD,CONCAT(FUNC_NOM,' ',FUNC_APE) AS nombre\n"
                    + "FROM funcionario\n"
                    + "where FUNC_NOM like  ", new String[]{"CODIGO FUNCIONARIO", "NOMBRE FUNCIONARIO"}, 2, tfParam);
            buscador.setTitle("Buscar Funcionarios");
            buscador.setVisible(true);
            codfuncionario.requestFocus();

        }
    }//GEN-LAST:event_codfuncionarioKeyPressed

    private void usuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usuarioActionPerformed
        // TODO add your handling code here:
        buscar();
    }//GEN-LAST:event_usuarioActionPerformed

    private void usuarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usuarioKeyTyped
        // TODO add your handling code here:
        // TODO add your handling code here:
    }//GEN-LAST:event_usuarioKeyTyped

    private void chkActivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkActivoActionPerformed
        // TODO add your handling code here:
        if (chkActivo.isSelected() == true) {
            estado = 1;
            bgrabar.setEnabled(true);
            bgrabar.requestFocus();
        }
    }//GEN-LAST:event_chkActivoActionPerformed

    private void grillaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grillaMouseClicked
        // TODO add your handling code here:}

        this.bcancelar.setEnabled(true);
        //  this.beditar.setEnabled(true);
        this.bagregar.setEnabled(false);
    }//GEN-LAST:event_grillaMouseClicked

    private void contraseñaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contraseñaActionPerformed
        // TODO add your handling code here:
        nivel.setEnabled(true);
        nivel.requestFocus();
    }//GEN-LAST:event_contraseñaActionPerformed

    private void contraseñaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contraseñaKeyTyped
        // TODO add your handling code here:
        // TODO add your handling code here:
//        char caracter = evt.getKeyChar();
//        if (((caracter < '0')
//                || (caracter > '9'))
//                && (caracter != evt.VK_BACK_SPACE)) {
//            evt.consume();
//        }
    }//GEN-LAST:event_contraseñaKeyTyped

    private void nivelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nivelActionPerformed
        // TODO add your handling code here:
        chkActivo.setEnabled(true);

    }//GEN-LAST:event_nivelActionPerformed

    private void nivelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nivelKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_nivelKeyTyped

    private void apellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_apellidoActionPerformed

    private void apellidoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_apellidoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_apellidoKeyPressed

    private void nombre1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombre1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombre1ActionPerformed

    private void nombre1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombre1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombre1KeyPressed

    private void beditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beditarActionPerformed
        // TODO add your handling code here:
        bandera = "editar";
        botonEditar();
    }//GEN-LAST:event_beditarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new usuarios().setVisible(true);
            }
        });
    }
    public String bandera = "";
    public String viva = "";
    public int estado = 0;
    public int valorBase;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField apellido;
    private javax.swing.JButton bagregar;
    private javax.swing.JButton bcancelar;
    private javax.swing.JButton beditar;
    private javax.swing.JButton bgrabar;
    private javax.swing.JButton bsalir;
    private javax.swing.JCheckBox chkActivo;
    private javax.swing.JTextField codfuncionario;
    private javax.swing.JTextField contraseña;
    private javax.swing.JTable grilla;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lcodigo;
    private javax.swing.JLabel lcodigo1;
    private javax.swing.JLabel lcodigo2;
    private javax.swing.JLabel lcodigo3;
    private javax.swing.JLabel lcosto;
    private javax.swing.JLabel lcosto1;
    private javax.swing.JTextField nivel;
    private javax.swing.JTextField nombre1;
    private javax.swing.JTextField txtcodigo;
    private javax.swing.JTextField usuario;
    // End of variables declaration//GEN-END:variables

    private void des_text() {
        txtcodigo.setEnabled(false);
        codfuncionario.setEnabled(true);
        nombre1.setEnabled(true);
        apellido.setEnabled(true);
        usuario.setEnabled(true);
        contraseña.setEnabled(true);
        usuario.setEnabled(true);
        chkActivo.setEnabled(false);
        // txtprecioventa.setEnabled(true);
    }

    private void boton_agregar() {
        //   txtpreciomay.setEnabled(false);
        //  txtcod.setEnabled(false);
        //   txtcodigo.setEnabled(false);
        //   txtcodmarca.setEnabled(false);
        // txtcosto.setEnabled(false);
        // txtnombre.setEnabled(false);
//    txtiva.setEnabled(false);
        // txtprecioventa.setEnabled(false);
        //  diez.setEnabled(false);
        //  cinco.setEnabled(false);
        //  excenta.setEnabled(false);
    }

    private void hab_text() {
        // txtpreciomay.setEnabled(true);
        // barr_cod.setEnabled(true);
        // txtcodmarca.setEnabled(true);

        // txtcod2.setEnabled(true);
        // txtcod3.setEnabled(true);
        usuario.setEnabled(true);
        // txtprecioventa.setEnabled(true);

    }

    private void borrar_text() {
        txtcodigo.setText("");
        codfuncionario.setText("");
        nombre1.setText("");
        apellido.setText("");
        usuario.setText("");
        contraseña.setText("");
        usuario.setText("");
        nivel.setText("");
        chkActivo.setText("");

    }

    private void des_botones() //metodo para deshabilitar botones
    {
        bagregar.setEnabled(false);
        //   bborrar.setEnabled(false);
        beditar.setEnabled(false);
        bgrabar.setEnabled(false);
        bsalir.setEnabled(false);
        bcancelar.setEnabled(true);
    }

    private void hab_botones() // metodo para hab botones
    {
        bagregar.setEnabled(true);
        // bborrar.setEnabled(true);
        beditar.setEnabled(false);
        bgrabar.setEnabled(false);
        bsalir.setEnabled(true);
        bcancelar.setEnabled(false);
    }

    private void gencod() {
        try {
            //       Main.inicio = "no";
            ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT IFNULL(MAX(USU_COD),0)+ 1 AS xxx FROM usuario");
            conn.resultado.next();
            this.txtcodigo.setText(conn.resultado.getString("xxx"));
        } catch (SQLException ex) {
            Logger.getLogger(mercaderia.class.getName()).log(Level.SEVERE, null, ex);
            //   } catch (SQLException ex)
            {
                Logger.getLogger(mercaderia.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }

    private void grabar() {
        try {
            ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();

            if (bandera.equals("agregar")) {
                if (chkActivo.isSelected() == true) {
                    estado = 1;
                }
                gencod();// sirve para que no se dupliquen los codigos y no de error cuando se trabaja en redes///////////////////////////////////////////////////prd_cod,////////////////tip_prd_cod,/////////presen_cod,/////////////mar_cod,/////////////unid_cod,/////////////prd_nom,//////////////////prd_costo,/////////////iva,////matp_est,//////   grup_cod
                conn.sentencia.executeUpdate("INSERT INTO USUARIO(USU_COD,FUNC_COD,USU_NOMB,USU_PASS,USU_NIVEL,USU_ESTADO)VALUES"
                + "(" + txtcodigo.getText() + "," + codfuncionario.getText() + ",'" + usuario.getText() + "','" + contraseña.getText() + "'"
                        + "," + nivel.getText() + "," + estado + ")");
                //  gencodStock();
                //   conn.sentencia.executeUpdate("INSERT INTO stock_productos (ID,ID_PRODUCTO,PLU_PRODUCTO,DISPONIBLE,ESTADO)VALUES("+id_stock+","+txtcodigo.getText()+","+txtcodigo.getText()+",0,1)");
                cargar_grilla();
            }
            if (bandera.equals("editar")) {
                
                 if (chkActivo.isSelected() == true) {
                   estado = 1;
        }
                conn.sentencia.executeUpdate("UPDATE usuario SET FUNC_COD ='" + codfuncionario.getText() + "',USU_NOMB='" + usuario.getText() + "', USU_PASS='" + contraseña.getText() + "' ,usu_nivel='" + nivel.getText() + "',usu_estado='" + estado + "' WHERE usu_cod =" + txtcodigo.getText());
                cargar_grilla();
            }

            JOptionPane.showMessageDialog(null, "REGISTRO GRABADO", "CONFIRMACION", JOptionPane.INFORMATION_MESSAGE);

        } catch (SQLException ex) {
            Logger.getLogger(mercaderia.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void salir() {
        int respuesta = JOptionPane.showConfirmDialog(this, "DESEA SALIR", "CONFIRMAR", JOptionPane.YES_NO_OPTION);
        if (respuesta == JOptionPane.YES_OPTION) {
            dispose();

        }

    }

    public void genreporte() //throws JRException, Exception
    {
        try //throws JRException, Exception
        {
            ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT mer_cant,mer_nom FROM mercaderia"); //OJO LE PASO LA SENTENCIA
            JRResultSetDataSource jrRS = new JRResultSetDataSource(conn.resultado);

            HashMap parameters = new HashMap();
            URL urlMaestro = getClass().getClassLoader().getResource("reportes/mercaderia1.jasper");

            // Cargamos el reporte
            JasperReport masterReport = null;
            masterReport = (JasperReport) JRLoader.loadObject(urlMaestro);
            JasperPrint masterPrint = null;
            masterPrint = JasperFillManager.fillReport(masterReport, parameters, jrRS);
            JasperViewer ventana = new JasperViewer(masterPrint, false);
            ventana.setTitle("Vista Previa");
            ventana.setVisible(true);

        } catch (JRException ex) {
            Logger.getLogger(mercaderia.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(mercaderia.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void genreporte1() //throws JRException, Exception
    {
        try //throws JRException, Exception
        {
            ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT * FROM mercaderia"); //OJO LE PASO LA SENTENCIA
            JRResultSetDataSource jrRS = new JRResultSetDataSource(conn.resultado);

            HashMap parameters = new HashMap();
            URL urlMaestro = getClass().getClassLoader().getResource("reportes/mercaderia.jasper");

            // Cargamos el reporte
            JasperReport masterReport = null;
            masterReport = (JasperReport) JRLoader.loadObject(urlMaestro);
            JasperPrint masterPrint = null;
            masterPrint = JasperFillManager.fillReport(masterReport, parameters, jrRS);
            JasperViewer ventana = new JasperViewer(masterPrint, false);
            ventana.setTitle("Vista Previa");
            ventana.setVisible(true);

        } catch (JRException ex) {
            Logger.getLogger(mercaderia.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(mercaderia.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void cargar_grilla() {
        try {
            for (int i = grilla.getRowCount() - 1; i >= 0; i--) {
                cursor.removeRow(i);
            }

            ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT * from usuario");
            //,FUNC_COD,,,,
            while (conn.resultado.next()) {
                Object[] datos = {
                    conn.resultado.getString("USU_COD"),
                    conn.resultado.getString("USU_NOMB"),
                    conn.resultado.getString("USU_PASS"),
                    conn.resultado.getString("USU_NIVEL"),
                    conn.resultado.getString("USU_ESTADO"),};

                cursor.addRow(datos);
            }

        } catch (SQLException ex) {
            Logger.getLogger(mercaderia.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void buscar_funcionario() {

        try {
            ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT FUNC_COD,FUNC_NOM,FUNC_APE\n"
                    + "FROM funcionario\n"
                    + "WHERE FUNC_COD = " + this.codfuncionario.getText());

            if (conn.resultado.next())//si encontro
            {
                this.nombre1.setText(conn.resultado.getString("FUNC_NOM"));
                this.apellido.setText(conn.resultado.getString("FUNC_APE"));
                usuario.setEnabled(true);
                usuario.requestFocus();

            } else//no encontro
            {
                JOptionPane.showMessageDialog(null, "CODIGO DE PRODUCTO NO EXISTE", "MENSAJE", JOptionPane.INFORMATION_MESSAGE);
                this.codfuncionario.setEnabled(true);
                this.codfuncionario.requestFocus();
            }

        } catch (SQLException exceptionSql) {
        }
    }

    private void botonEditar() //metodo para deshabilitar botones
    {
        bagregar.setEnabled(false);
        beditar.setEnabled(false);

        bgrabar.setEnabled(true);
        bsalir.setEnabled(false);
        bcancelar.setEnabled(true);
        usuario.setEnabled(true);
        usuario.requestFocus();
    }

    private void buscar() {
        try {
            // Main.inicio = "no";
            ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT u.*,f.*\n"
                    + "FROM usuario u \n"
                    + "INNER JOIN funcionario f ON u.func_cod = f.func_cod\n"
                    + "WHERE u.usu_nomb = '" + usuario.getText() + "'");
            boolean encontro = conn.resultado.next();

            if (encontro == true && bandera.equals("agregar")) {
                JOptionPane.showMessageDialog(null, "EL USUARIO INGRESADO YA EXISTE");
                usuario.requestFocus();
                usuario.setEnabled(true);

            }
            if (encontro == true && bandera.equals("editar")) {
                codfuncionario.setEnabled(true);
                codfuncionario.requestFocus();
                nivel.setEnabled(true);
                contraseña.setEnabled(true);
                chkActivo.setEnabled(true);

                codfuncionario.setText(conn.resultado.getString("u.func_cod"));
                contraseña.setText(conn.resultado.getString("usu_pass"));
                nivel.setText(conn.resultado.getString("usu_nivel"));
                txtcodigo.setText(conn.resultado.getString("usu_cod"));
                usuario.setEnabled(false);

                this.valorBase = (Integer.parseInt(conn.resultado.getString("estado")));

                if (valorBase == 1) {
                    chkActivo.setSelected(true);
                }
                if (valorBase == 0) {
                    chkActivo.setSelected(false);
                }

            }
            if (encontro == false && bandera.equals("editar")) {

                JOptionPane.showMessageDialog(null, "EL CODIGO INGRESADO NO EXITE");

            }
            if (encontro == false && bandera.equals("agregar")) {
                contraseña.setEnabled(true);
                contraseña.requestFocus();
            }
        } catch (SQLException ex) {

        }

    }
}
