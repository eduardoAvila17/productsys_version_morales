
package formularios;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import programas.ver_conex;
import java.awt.event.KeyEvent;
import java.net.URL;
import java.sql.SQLException;
//import java.util.logging.Level;
//import java.util.logging.Logger;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author mi
 */
public class mercaderia extends javax.swing.JFrame {
//publicamos el cursor
     ver_conex conn = new ver_conex();
 javax.swing.table.DefaultTableModel cursor;
  private int posreg;
    private int band = 0;
       javax.swing.table.DefaultTableModel m;
   //  javax.swing.table.DefaultTableModel cursor;
    /** Creates new form mercaderia */
    public mercaderia() {
        initComponents();
          /////enlazamos la grilla con el cursor
        cursor = (javax.swing.table.DefaultTableModel)grilla.getModel();
       // des_text();
         this.setLocationRelativeTo(null);
        // hab_botones();
         // mardesc.setEnabled(false);
         // beditar.setEnabled(false);
       // tipdesc.setEnabled(false);
         cargar_grilla();
         //bmarcas.setEnabled(false);
         //bgrupos.setEnabled(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lcodmarca = new javax.swing.JLabel();
        lcodgrupo = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lcosto = new javax.swing.JLabel();
        txtcodigo = new javax.swing.JTextField();
        marcod = new javax.swing.JTextField();
        descripcion = new javax.swing.JTextField();
        costo = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        bcancelar = new javax.swing.JButton();
        bgrabar = new javax.swing.JButton();
        bsalir = new javax.swing.JButton();
        beditar = new javax.swing.JButton();
        bagregar = new javax.swing.JButton();
        lcodigo = new javax.swing.JLabel();
        mardesc = new javax.swing.JTextField();
        tipcod = new javax.swing.JTextField();
        tipdesc = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        grilla = new javax.swing.JTable();
        cinco = new javax.swing.JRadioButton();
        diez = new javax.swing.JRadioButton();
        excenta = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        unidcod = new javax.swing.JTextField();
        unidesc = new javax.swing.JTextField();
        lcodgrupo1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        prescod = new javax.swing.JTextField();
        presdesc = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        provee_cod = new javax.swing.JTextField();
        provee_desc = new javax.swing.JTextField();
        lcodigo1 = new javax.swing.JLabel();
        txtbarra = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        chkActivo = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Mercaderias");

        lcodmarca.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lcodmarca.setText("Marca:");

        lcodgrupo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lcodgrupo.setText("Tipo Producto:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Descripcion:");

        lcosto.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lcosto.setText("Costo :");

        txtcodigo.setEnabled(false);
        txtcodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcodigoActionPerformed(evt);
            }
        });
        txtcodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcodigoKeyPressed(evt);
            }
        });

        marcod.setEnabled(false);
        marcod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marcodActionPerformed(evt);
            }
        });
        marcod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                marcodKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                marcodKeyTyped(evt);
            }
        });

        descripcion.setEnabled(false);
        descripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descripcionActionPerformed(evt);
            }
        });
        descripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                descripcionKeyTyped(evt);
            }
        });

        costo.setEnabled(false);
        costo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                costoActionPerformed(evt);
            }
        });
        costo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                costoKeyTyped(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        bcancelar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bcancelar.setText("Cancelar");
        bcancelar.setEnabled(false);
        bcancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bcancelarActionPerformed(evt);
            }
        });

        bgrabar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bgrabar.setText("Grabar");
        bgrabar.setEnabled(false);
        bgrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bgrabarActionPerformed(evt);
            }
        });

        bsalir.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bsalir.setText("Salir");
        bsalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsalirActionPerformed(evt);
            }
        });

        beditar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        beditar.setText("Editar");
        beditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beditarActionPerformed(evt);
            }
        });

        bagregar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bagregar.setText("Agregar");
        bagregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bagregarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bgrabar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bsalir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(beditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bagregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bcancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addComponent(bagregar)
                .addGap(18, 18, 18)
                .addComponent(beditar)
                .addGap(30, 30, 30)
                .addComponent(bgrabar)
                .addGap(33, 33, 33)
                .addComponent(bcancelar)
                .addGap(18, 18, 18)
                .addComponent(bsalir)
                .addGap(41, 41, 41))
        );

        lcodigo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lcodigo.setText("Codigo :");

        mardesc.setEnabled(false);
        mardesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mardescActionPerformed(evt);
            }
        });

        tipcod.setEnabled(false);
        tipcod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipcodActionPerformed(evt);
            }
        });
        tipcod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tipcodKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tipcodKeyTyped(evt);
            }
        });

        tipdesc.setEnabled(false);
        tipdesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipdescActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Iva :");

        grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Grupo", "Nombre", "Costo", "iva", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grilla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grillaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(grilla);

        cinco.setText("5%");
        cinco.setEnabled(false);
        cinco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cincoActionPerformed(evt);
            }
        });

        diez.setText("10%");
        diez.setEnabled(false);
        diez.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diezActionPerformed(evt);
            }
        });

        excenta.setText("0%");
        excenta.setEnabled(false);
        excenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excentaActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel4.setText("Productos");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        unidcod.setEnabled(false);
        unidcod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unidcodActionPerformed(evt);
            }
        });
        unidcod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                unidcodKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                unidcodKeyTyped(evt);
            }
        });

        unidesc.setEnabled(false);
        unidesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unidescActionPerformed(evt);
            }
        });

        lcodgrupo1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lcodgrupo1.setText("Unidad Medida:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Presentacion:");

        prescod.setEnabled(false);
        prescod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prescodActionPerformed(evt);
            }
        });

        presdesc.setEnabled(false);
        presdesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                presdescActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Proveedor:");

        provee_cod.setEnabled(false);
        provee_cod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                provee_codActionPerformed(evt);
            }
        });

        provee_desc.setEnabled(false);

        lcodigo1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lcodigo1.setText("Codigo de Barras:");

        txtbarra.setEnabled(false);
        txtbarra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbarraActionPerformed(evt);
            }
        });
        txtbarra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtbarraKeyPressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Estado:");

        chkActivo.setText("Activo");
        chkActivo.setEnabled(false);
        chkActivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkActivoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lcodmarca)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(marcod, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(mardesc, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel8)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(provee_cod, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(provee_desc, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lcodigo)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(txtcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lcodgrupo)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(tipcod, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(tipdesc, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel7)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(prescod, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(presdesc, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lcodigo1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtbarra, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lcodgrupo1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(unidcod, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(unidesc, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lcosto)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(costo, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(30, 30, 30)
                                        .addComponent(excenta, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(41, 41, 41)
                                        .addComponent(cinco)
                                        .addGap(47, 47, 47)
                                        .addComponent(diez))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(chkActivo)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lcodigo)
                            .addComponent(txtcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lcodigo1)
                            .addComponent(txtbarra, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lcodmarca)
                            .addComponent(marcod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mardesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(prescod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(presdesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(provee_cod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(provee_desc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lcodgrupo)
                            .addComponent(tipcod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tipdesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(unidcod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(unidesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lcodgrupo1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lcosto)
                            .addComponent(costo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(excenta)
                            .addComponent(diez)
                            .addComponent(cinco))
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(chkActivo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bagregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bagregarActionPerformed
        // TODO add your handling code here:
        bandera="agregar";
        gencod();
        des_botones();
        txtbarra.setEnabled(true);
        txtbarra.requestFocus();
       
       // boton_agregar();
    }//GEN-LAST:event_bagregarActionPerformed

    private void bcancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bcancelarActionPerformed
        // TODO add your handling code here:

        
    }//GEN-LAST:event_bcancelarActionPerformed

    private void bgrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bgrabarActionPerformed
        // TODO add your handling code here:
        grabar();
        borrar_text();
        hab_botones();
        des_text();
        mardesc.setText("");
        tipdesc.setText("");
       // bmarcas.setEnabled(false);
       //  bgrupos.setEnabled(false);
        
    }//GEN-LAST:event_bgrabarActionPerformed

    private void bsalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsalirActionPerformed
        // TODO add your handling code here:
        salir();
    }//GEN-LAST:event_bsalirActionPerformed

    private void txtcodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcodigoActionPerformed
        // TODO add your handling code here:
       // buscar();
    }//GEN-LAST:event_txtcodigoActionPerformed

    private void beditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beditarActionPerformed
        // TODO add your handling code here:
        bandera="editar";
        des_botones();
        hab_text();
        txtcodigo.setEnabled(false);
        marcod.requestFocus();
        marcod.setEnabled(true);
        mardesc.setEnabled(false);
        tipdesc.setEnabled(false);
    }//GEN-LAST:event_beditarActionPerformed

    private void mardescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mardescActionPerformed
        // TODO add your handling code here:
        
}//GEN-LAST:event_mardescActionPerformed

    private void tipdescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipdescActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipdescActionPerformed

    private void marcodKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_marcodKeyPressed
           if (marcod.getText().equals("") && evt.getKeyChar() == KeyEvent.VK_ENTER)//no trae nada
        {
            JTextField[] tfParam = new JTextField[2];
            tfParam[0] = this.marcod;
            tfParam[1] = this.mardesc;

            VentanaBuscar buscador = new VentanaBuscar("select mar_cod,mar_descri from marcas where mar_descri like  ", new String[]{"CODIGO marca", "NOMBRE marca"}, 2, tfParam);
            buscador.setTitle("Buscar Marcas");
            buscador.setVisible(true);
    }//GEN-LAST:event_marcodKeyPressed
    }
           private void marcodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marcodActionPerformed
              buscarmarcas();
              prescod.setEnabled(true);
              prescod.requestFocus();
           }//GEN-LAST:event_marcodActionPerformed

           private void tipcodKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tipcodKeyPressed
               // TODO add your handling code here:
                 if (tipcod.getText().equals("") && evt.getKeyChar() == KeyEvent.VK_ENTER)//no trae nada
        {
            JTextField[] tfParam = new JTextField[2];
            tfParam[0] = this.tipcod;
            tfParam[1] = this.tipdesc;

            VentanaBuscar buscador = new VentanaBuscar("select gru_cod,gru_descri from grupos where gru_descri like  ", new String[]{"CODIGO grupos", "NOMBRE grupos"}, 2, tfParam);
            buscador.setTitle("Buscar Grupos");
            buscador.setVisible(true);
    }
           }//GEN-LAST:event_tipcodKeyPressed

           private void tipcodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipcodActionPerformed
               // TODO add your handling code here:
               descripcion.setEnabled(true);
               descripcion.requestFocus();

           }//GEN-LAST:event_tipcodActionPerformed

           private void txtcodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcodigoKeyPressed
               // TODO add your handling code here:
             //  buscar();
           }//GEN-LAST:event_txtcodigoKeyPressed

           private void costoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_costoKeyTyped
               // TODO add your handling code here:
                // TODO add your handling code here:
         char caracter = evt.getKeyChar();
        if(((caracter < '0') ||
        (caracter > '9')) &&
        (caracter != evt.VK_BACK_SPACE))
        {
            evt.consume();
        }
           }//GEN-LAST:event_costoKeyTyped

           private void descripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descripcionKeyTyped
               // TODO add your handling code here:
                 int letra = (int) evt.getKeyChar();
        if (letra > 47 && letra < 58)
        {
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            getToolkit().beep();///el sonido del error
            evt.consume();////mantiene el pulsor al presionar espacio
            JOptionPane.showMessageDialog(null,"No puede Ingresar Numeros");
            descripcion.requestFocus();
        }

        if (letra == 10) // enter
        {
            //transfiere el foco si presionas enter
           bgrabar.setEnabled(true);
           bgrabar.requestFocus();

        }
           }//GEN-LAST:event_descripcionKeyTyped

           private void marcodKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_marcodKeyTyped
               // TODO add your handling code here:
                char caracter = evt.getKeyChar();
        if(((caracter < '0') ||
        (caracter > '9')) &&
        (caracter != evt.VK_BACK_SPACE))
        {
            evt.consume();
           }//GEN-LAST:event_marcodKeyTyped
           }
                private void tipcodKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tipcodKeyTyped
                    // TODO add your handling code here:
                     char caracter = evt.getKeyChar();
        if(((caracter < '0') ||
        (caracter > '9')) &&
        (caracter != evt.VK_BACK_SPACE))
        {
            evt.consume();
                }//GEN-LAST:event_tipcodKeyTyped
                                  }
    private void unidcodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unidcodActionPerformed
        // TODO add your handling code here:
       
        costo.setEnabled(true);
        costo.requestFocus();
    }//GEN-LAST:event_unidcodActionPerformed

    private void unidcodKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_unidcodKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_unidcodKeyPressed

    private void unidcodKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_unidcodKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_unidcodKeyTyped

    private void unidescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unidescActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unidescActionPerformed

    private void excentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excentaActionPerformed
        // TODO add your handling code here:
        if(excenta.isSelected()==true)
        {
            cinco.setSelected(false);
            diez.setSelected(false);
            bgrabar.setEnabled(true);
            chkActivo.setEnabled(true);
            bgrabar.requestFocus();
            
            viva= "1";
        }
    }//GEN-LAST:event_excentaActionPerformed

    private void diezActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diezActionPerformed
        // TODO add your handling code here:
        if(diez.isSelected()==true)
        {
            cinco.setSelected(false);
            excenta.setSelected(false);
            bgrabar.setEnabled(true);
            chkActivo.setEnabled(true);
            bgrabar.requestFocus();
            viva= "3";
        }
    }//GEN-LAST:event_diezActionPerformed

    private void cincoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cincoActionPerformed
        // TODO add your handling code here:
        if(cinco.isSelected()==true)
        {
            excenta.setSelected(false);
            diez.setSelected(false);
            bgrabar.setEnabled(true);
            chkActivo.setEnabled(true);
            bgrabar.requestFocus();
            viva= "2";
        }
    }//GEN-LAST:event_cincoActionPerformed

    private void grillaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grillaMouseClicked
        // TODO add your handling code here:}
        eligio();
        this.bcancelar.setEnabled(true);
        this.beditar.setEnabled(true);
        this.bagregar.setEnabled(false);
    }//GEN-LAST:event_grillaMouseClicked

    private void prescodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prescodActionPerformed
        // TODO add your handling code here:
         
        provee_cod.setEnabled(true);
        provee_cod.requestFocus();
    }//GEN-LAST:event_prescodActionPerformed

    private void descripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descripcionActionPerformed
        // TODO add your handling code here:
        unidcod.setEnabled(true);
        unidcod.requestFocus();
    }//GEN-LAST:event_descripcionActionPerformed

    private void costoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_costoActionPerformed
        // TODO add your handling code here:
        excenta.setEnabled(true);
        cinco.setEnabled(true);
        diez.setEnabled(true);
    }//GEN-LAST:event_costoActionPerformed

    private void provee_codActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_provee_codActionPerformed
        // TODO add your handling code here:
    
         tipcod.setEnabled(true);
         tipcod.requestFocus();
    }//GEN-LAST:event_provee_codActionPerformed

    private void presdescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_presdescActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_presdescActionPerformed

    private void txtbarraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbarraActionPerformed
        // TODO add your handling code here:
        marcod.setEnabled(true);
        marcod.requestFocus();
    }//GEN-LAST:event_txtbarraActionPerformed

    private void txtbarraKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbarraKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbarraKeyPressed

    private void chkActivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkActivoActionPerformed
        // TODO add your handling code here:
          if(chkActivo.isSelected()==true)
        {

            estado = 1;
        }
    }//GEN-LAST:event_chkActivoActionPerformed
                     
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mercaderia().setVisible(true);
            }
        });
    }
public String bandera="";
public String viva="";
public int estado = 0;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bagregar;
    private javax.swing.JButton bcancelar;
    private javax.swing.JButton beditar;
    private javax.swing.JButton bgrabar;
    private javax.swing.JButton bsalir;
    private javax.swing.JCheckBox chkActivo;
    private javax.swing.JRadioButton cinco;
    private javax.swing.JTextField costo;
    private javax.swing.JTextField descripcion;
    private javax.swing.JRadioButton diez;
    private javax.swing.JRadioButton excenta;
    private javax.swing.JTable grilla;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lcodgrupo;
    private javax.swing.JLabel lcodgrupo1;
    private javax.swing.JLabel lcodigo;
    private javax.swing.JLabel lcodigo1;
    private javax.swing.JLabel lcodmarca;
    private javax.swing.JLabel lcosto;
    private javax.swing.JTextField marcod;
    private javax.swing.JTextField mardesc;
    private javax.swing.JTextField prescod;
    private javax.swing.JTextField presdesc;
    private javax.swing.JTextField provee_cod;
    private javax.swing.JTextField provee_desc;
    private javax.swing.JTextField tipcod;
    private javax.swing.JTextField tipdesc;
    private javax.swing.JTextField txtbarra;
    private javax.swing.JTextField txtcodigo;
    private javax.swing.JTextField unidcod;
    private javax.swing.JTextField unidesc;
    // End of variables declaration//GEN-END:variables
private void des_text(){
 //   txtpreciomay.setEnabled(false);
  //  barr_cod.setEnabled(true);
    marcod.setEnabled(true);
    marcod.setEnabled(true);
    prescod.setEnabled(true);
    tipcod.setEnabled(true);
    descripcion.setEnabled(true);
    unidcod.setEnabled(true);
   // txtcod2.setEnabled(true);
  //  txtcod3.setEnabled(true);
    costo.setEnabled(true);
   // txtprecioventa.setEnabled(true);
}
private void boton_agregar(){
 //   txtpreciomay.setEnabled(false);
  //  txtcod.setEnabled(false);
 //   txtcodigo.setEnabled(false);
 //   txtcodmarca.setEnabled(false);
   // txtcosto.setEnabled(false);
   // txtnombre.setEnabled(false);
//    txtiva.setEnabled(false);
   // txtprecioventa.setEnabled(false);
  //  diez.setEnabled(false);
  //  cinco.setEnabled(false);
  //  excenta.setEnabled(false);
}
private void hab_text(){
    // txtpreciomay.setEnabled(true);
   // barr_cod.setEnabled(true);
   // txtcodmarca.setEnabled(true);
    marcod.setEnabled(true);
    prescod.setEnabled(true);
    tipcod.setEnabled(true);
    descripcion.setEnabled(true);
    unidcod.setEnabled(true);
   // txtcod2.setEnabled(true);
   // txtcod3.setEnabled(true);
    costo.setEnabled(true);
   // txtprecioventa.setEnabled(true);
    diez.setEnabled(true);
    cinco.setEnabled(true);
    excenta.setEnabled(true);

}
private void borrar_text(){
    txtcodigo.setText("");
   // barr_cod.setText("");
    marcod.setText("");
    mardesc.setText("");
    prescod.setText("");
    presdesc.setText("");
    tipcod.setText("");
    tipdesc.setText("");
    descripcion.setText("");
    unidcod.setText("");
    provee_cod.setText("");
    provee_desc.setText("");
    unidesc.setText("");
    costo.setText("");
     diez.setSelected(false);
    cinco.setSelected(false);
    excenta.setSelected(false);

}
 private void des_botones() //metodo para deshabilitar botones
     {
         bagregar.setEnabled(false);
      //   bborrar.setEnabled(false);
         beditar.setEnabled(false);
         bgrabar.setEnabled(false);
         bsalir.setEnabled(false);
	 bcancelar.setEnabled(true);
     }

     private void hab_botones()	// metodo para hab botones
     {
         bagregar.setEnabled(true);
	// bborrar.setEnabled(true);
         beditar.setEnabled(false);
         bgrabar.setEnabled(false);
         bsalir.setEnabled(true);
	 bcancelar.setEnabled(false);
     }
      private void gencod()
    {
        try {
            //       Main.inicio = "no";
                   ver_conex conn = new ver_conex();
                   conn.sentencia = conn.conexion.createStatement();
                   conn.resultado = conn.sentencia.executeQuery("SELECT IFNULL(MAX(prd_cod),0)+ 1 AS xxx FROM producto");
                   conn.resultado.next();
                  this.txtcodigo.setText(conn.resultado.getString("xxx"));
        } catch (SQLException ex) {
            Logger.getLogger(mercaderia.class.getName()).log(Level.SEVERE, null, ex);
     //   } catch (SQLException ex)
        {
            Logger.getLogger(mercaderia.class.getName()).log(Level.SEVERE, null, ex);
        }



        }
      }
       private void grabar()
    {
        try {
            ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();

            if(bandera.equals("agregar"))
             {
                gencod();// sirve para que no se dupliquen los codigos y no de error cuando se trabaja en redes///////////////////////////////////////////////////prd_cod,////////////////tip_prd_cod,/////////presen_cod,/////////////mar_cod,/////////////unid_cod,/////////////prd_nom,//////////////////prd_costo,/////////////iva,////matp_est,//////   grup_cod
               conn.sentencia.executeUpdate("INSERT INTO producto(prd_cod,tip_prd_cod,presen_cod,mar_cod,unid_cod,descripcion,costo,iva,estado,barra)values("+txtcodigo.getText()+","+tipcod.getText()+","+prescod.getText()+","+marcod.getText()+","+unidcod.getText()+",'"+descripcion.getText()+"',"+costo.getText()+","+viva+","+estado+","+txtbarra.getText()+")");
            cargar_grilla();
             }
               if(bandera.equals("editar"))
             {
               //conn.sentencia.executeUpdate("UPDATE mercaderia SET mar_cod ='"+txtcod2txtcod2.getText()+"',gru_cod='"+txtcod.getText()+"', mer_nom='"+txtnombre.getText()+"' ,mer_cost='"+txtcosto.getText()+"',precioventa='"+txtprecioventa.getText()+"','"+viva+"' WHERE mer_cod ="+txtcodigo.getText());
              cargar_grilla();
             }

         JOptionPane.showMessageDialog(null, "REGISTRO GRABADO","CONFIRMACION",JOptionPane.INFORMATION_MESSAGE);

        } catch (SQLException ex) {
            Logger.getLogger(mercaderia.class.getName()).log(Level.SEVERE, null, ex);
        }



    }
       private void salir (){
     int respuesta = JOptionPane.showConfirmDialog
         (this,"DESEA SALIR","CONFIRMAR",JOptionPane.YES_NO_OPTION);
       if(respuesta == JOptionPane.YES_OPTION)
       {
	   dispose();

       }

}
 private void buscar()
    {
        try {
           // Main.inicio = "no";
            ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery
       ("SELECT * FROM mercaderia as m inner join marcas as mar on m.mar_cod=mar.mar_cod inner join grupos as g on m.gru_cod=g.gru_cod WHERE m.mer_cod = "+txtcodigo.getText());
            boolean encontro = conn.resultado.next();

            if(encontro == true)
            {
                 
                marcod.setText(conn.resultado.getString("mar_cod"));
                tipcod.setText(conn.resultado.getString("gru_cod"));
                descripcion.setText(conn.resultado.getString("mer_nom"));
             //   txtpreciomay.setText(conn.resultado.getString("preciomay"));
                costo.setText(conn.resultado.getString("mer_cost"));
               mardesc.setText(conn.resultado.getString("mar_descri"));
                tipdesc.setText(conn.resultado.getString("gru_descri"));
            //    txtprecioventa.setText(conn.resultado.getString("precioventa"));
               // txtiva.setText(conn.resultado.getString("mer_iva"));
                 viva=conn.resultado.getString("mer_iva");
                if (viva.equals("5")){
                    excenta.setSelected(false);
                    cinco.setSelected(true);
                    diez.setSelected(false);
                }else{
                    if (viva.equals("10")){
                        cinco.setSelected(false);
                    excenta.setSelected(false);
                    diez.setSelected(true);
                    }else{
                       // if(vestado.equals("bloqueado")){
                            diez.setSelected(false);
                             cinco.setSelected(false);
                    excenta.setSelected(true);
                    }
                }
                if(bandera.equals("borrar"))
                {
                    int mensaje = JOptionPane.showConfirmDialog(this,"Deseas Borrar-->"+descripcion.getText(),"Confirmar",JOptionPane.YES_NO_OPTION);
                     if(mensaje == JOptionPane.YES_OPTION)//si quiere borrar
                     {
                           conn.sentencia = conn.conexion.createStatement();
                           conn.sentencia.executeUpdate("UPDATE producto SET prd_est ='Borrado' Where prd_cod= "+txtcodigo.getText()+"");
                          JOptionPane.showMessageDialog(null, "El registro ha sido borrado satisfactoriamente.", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                      cargar_grilla();
                     }
                     else
                     {
                        JOptionPane.showMessageDialog(null, "Operacion Cancelada", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                     }
                     this.bcancelar.doClick();

                }
                 if(bandera.equals("editar"))
                 {
                     marcod.setEnabled(true);
                     marcod.requestFocus();
                     tipcod.setEnabled(true);
                     descripcion.setEnabled(true);
                    // txtpreciomay.setEnabled(true);
                     costo.setEnabled(true);
                   //  txtprecioventa.setEnabled(true);
                   //  txtiva.setEnabled(true);
                     cinco.setEnabled(true);
                    excenta.setEnabled(true);
                    diez.setEnabled(true);
                     mardesc.setEnabled(false);
                 }



       // catch (SQLException ex) {
         //   Logger.getLogger(personal.class.getName()).log(Level.SEVERE, null, ex);
        
            }
            else // no encontro
            {
              JOptionPane.showMessageDialog(null, "No existe un registro con este codigo!", "Atencion", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException ex) {
            Logger.getLogger(mercaderia.class.getName()).log(Level.SEVERE, null, ex);
        }

 }
  private void buscarmarcas()
    {
        try {
             ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT * FROM marcas WHERE mar_cod="+marcod.getText());
            boolean encontro = conn.resultado.next();

            if(encontro == true)
            {
                mardesc.setText(conn.resultado.getString("mar_desc"));
            }
            else // no encontro
            {
              JOptionPane.showMessageDialog(null, "No existe un registro con este codigo!", "Atencion", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException ex) {
            Logger.getLogger(marcas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
   private void buscargrupos()
    {
        try {
             ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT * FROM tipo_producto WHERE tip_prd_cod = "+tipcod.getText());
            boolean encontro = conn.resultado.next();

            if(encontro == true)
            {
                tipdesc.setText(conn.resultado.getString("tip_prd_dec"));
            }
            else // no encontro
            {
              JOptionPane.showMessageDialog(null, "No existe un registro con este codigo!", "Atencion", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException ex) {
           // Logger.getLogger(grupos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
 public void genreporte() //throws JRException, Exception
    {
        try //throws JRException, Exception
        {
            ver_conex conn = new ver_conex();    
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT mer_cant,mer_nom FROM mercaderia"); //OJO LE PASO LA SENTENCIA
            JRResultSetDataSource jrRS = new JRResultSetDataSource(conn.resultado);

            HashMap parameters = new HashMap();
            URL urlMaestro = getClass().getClassLoader().getResource("reportes/mercaderia1.jasper");

            // Cargamos el reporte
            JasperReport masterReport = null;
            masterReport = (JasperReport) JRLoader.loadObject(urlMaestro);
            JasperPrint masterPrint = null;
            masterPrint = JasperFillManager.fillReport(masterReport, parameters, jrRS);
            JasperViewer ventana = new JasperViewer(masterPrint, false);
            ventana.setTitle("Vista Previa");
            ventana.setVisible(true);

        } catch (JRException ex) {
            Logger.getLogger(mercaderia.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(mercaderia.class.getName()).log(Level.SEVERE, null, ex);
        }
    }   
  public void genreporte1() //throws JRException, Exception
    {
        try //throws JRException, Exception
        {
            ver_conex conn = new ver_conex();    
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT * FROM mercaderia"); //OJO LE PASO LA SENTENCIA
            JRResultSetDataSource jrRS = new JRResultSetDataSource(conn.resultado);

            HashMap parameters = new HashMap();
            URL urlMaestro = getClass().getClassLoader().getResource("reportes/mercaderia.jasper");

            // Cargamos el reporte
            JasperReport masterReport = null;
            masterReport = (JasperReport) JRLoader.loadObject(urlMaestro);
            JasperPrint masterPrint = null;
            masterPrint = JasperFillManager.fillReport(masterReport, parameters, jrRS);
            JasperViewer ventana = new JasperViewer(masterPrint, false);
            ventana.setTitle("Vista Previa");
            ventana.setVisible(true);

        } catch (JRException ex) {
            Logger.getLogger(mercaderia.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(mercaderia.class.getName()).log(Level.SEVERE, null, ex);
        }
    }   
  private void cargar_grilla()
  {
      try
      {
           for (int i = grilla.getRowCount()-1; i>=0; i--)
            {
                cursor.removeRow(i);
            }
 
          
          
            ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT * from producto");
           
            while(conn.resultado.next())
            {
                Object[] datos = {
                  conn.resultado.getString("prd_cod"),
                  conn.resultado.getString("barra"),
                  conn.resultado.getString("descripcion"),
                  conn.resultado.getString("costo"),
                  conn.resultado.getString("iva"),
                  conn.resultado.getString("estado"),
                };
               
               
                cursor.addRow(datos);  
            }

        } catch (SQLException ex) {
            Logger.getLogger(mercaderia.class.getName()).log(Level.SEVERE, null, ex);
        }
 
 
 
  }
   public void eligio()
     {
          if (band == 0)
          {
             
                 posreg = grilla.getSelectedRow();
                 txtcodigo.setText(String.valueOf(this.grilla.getValueAt(posreg,0)));
                 marcod.setText(String.valueOf(this.grilla.getValueAt(posreg,1)));
                 tipcod.setText(String.valueOf(this.grilla.getValueAt(posreg,2)));
                 descripcion.setText(String.valueOf(this.grilla.getValueAt(posreg,3)));
                 costo.setText(String.valueOf(this.grilla.getValueAt(posreg,4)));
                // txtprecioventa.setText(String.valueOf(this.grilla.getValueAt(posreg,5)));
              //   txtpreciomay.setText(String.valueOf(this.grilla.getValueAt(posreg,6)));
                  viva=(String.valueOf(this.grilla.getValueAt(posreg,7)));
                  if (viva.equals("2")){
                      excenta.setSelected(false);
                      cinco.setSelected(true);
                      diez.setSelected(false);
                  }else{
                      if (viva.equals("3")){
                          cinco.setSelected(false);
                      excenta.setSelected(false);
                      diez.setSelected(true);
                      }
                      else{
                         // if(vestado.equals("bloqueado")){
                              diez.setSelected(false);
                               cinco.setSelected(false);
                      excenta.setSelected(true);
                      }
                }      

          
     }
          }
   private void buscargrupos2()
    {
        try {
             ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT * FROM unidad_medida WHERE unid_cod = "+unidcod.getText());
            boolean encontro = conn.resultado.next();

            if(encontro == true)
            {
                unidesc.setText(conn.resultado.getString("unid_desc"));
            }
            else // no encontro
            {
              JOptionPane.showMessageDialog(null, "No existe un registro con este codigo!", "Atencion", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException ex) {
           // Logger.getLogger(grupos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
//    private void buscargrupos3()
//    {
//        try {
//             ver_conex conn = new ver_conex();
//            conn.sentencia = conn.conexion.createStatement();
//            conn.resultado = conn.sentencia.executeQuery("SELECT * FROM sector WHERE sector_cod = "+txtcod2.getText());
//            boolean encontro = conn.resultado.next();
//
//            if(encontro == true)
//            {
//                txtcodigo4.setText(conn.resultado.getString("sector_des"));
//            }
//            else // no encontro
//            {
//              JOptionPane.showMessageDialog(null, "No existe un registro con este codigo!", "Atencion", JOptionPane.ERROR_MESSAGE);
//            }
//
//        } catch (SQLException ex) {
//           // Logger.getLogger(grupos.class.getName()).log(Level.SEVERE, null, ex);
//        }
//    }
      private void buscarmarcas4()
    {
        try {
             ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT * FROM presentacion WHERE presen_cod = "+prescod.getText());
            boolean encontro = conn.resultado.next();

            if(encontro == true)
            {
                presdesc.setText(conn.resultado.getString("presen_des"));
            }
            else // no encontro
            {
              JOptionPane.showMessageDialog(null, "No existe un registro con este codigo!", "Atencion", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException ex) {
           // Logger.getLogger(grupos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
 private void buscargrupo()
    {
        try {
             ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT * FROM grupo WHERE grup_cod = "+provee_cod.getText());
            boolean encontro = conn.resultado.next();

            if(encontro == true)
            {
                provee_desc.setText(conn.resultado.getString("grup_desc"));
            }
            else // no encontro
            {
              JOptionPane.showMessageDialog(null, "No existe un registro con este codigo!", "Atencion", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException ex) {
           // Logger.getLogger(grupos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
