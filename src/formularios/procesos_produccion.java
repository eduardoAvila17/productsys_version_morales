/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * procesos_produccion.java
 *
 * Created on 18-nov-2015, 13:55:51
 */

package formularios;

import java.awt.Component;
import java.awt.event.KeyEvent;
import java.net.URL;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import programas.ver_conex;

/**
 *
 * @author CLAU LORE
 */
public class procesos_produccion extends javax.swing.JFrame {

    /** Creates new form procesos_produccion */

        ver_conex conn = new ver_conex();
        javax.swing.table.DefaultTableModel cursor;
        javax.swing.table.DefaultTableModel cursor2;
        javax.swing.table.DefaultTableModel cursor3;
    private int posreg;
    private int band = 0;
    String operacion="";
    int c;
   // private int band = 0;

    public procesos_produccion() {
        initComponents();
                this.setLocationRelativeTo(null);
        t_cod_sucursal.setText(acceso.ususucur);//codigo de sucursal
        t_sucursal.setText(acceso.sucurdescri); // sucursal
        t_cod_personal.setText(acceso.usucod);//codigo usuario
        t_nombre.setText(acceso.usunom);    //nombre de usuario
        
        cursor = (javax.swing.table.DefaultTableModel)tabla.getModel();
        cursor2 = (javax.swing.table.DefaultTableModel)grilla.getModel();
        cursor3 = (javax.swing.table.DefaultTableModel)tabla_receta.getModel();
        setResizable(false);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        t_cod_orden = new javax.swing.JTextField();
        t_cod_receta = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        t_receta = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabla_receta = new javax.swing.JTable();
        b_habilitar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        t_numero_proceso = new javax.swing.JTextField();
        t_fecha = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        t_hora_realizada = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        b_grabar = new javax.swing.JButton();
        b_salir = new javax.swing.JButton();
        b_nuevo = new javax.swing.JButton();
        b_cancelar = new javax.swing.JButton();
        b_anular = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        grilla = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        t_cocinero_nombre = new javax.swing.JTextField();
        t_ci_cocinero = new javax.swing.JTextField();
        t_cod_cocinero = new javax.swing.JTextField();
        t_cocinero_telefono = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        t_cocinero_sexo = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        t_cocinero_apellido = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        t_cocinero_cargo = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        t_cod_personal = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        t_nombre = new javax.swing.JLabel();
        t_cod_sucursal = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        t_sucursal = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "BUSCAR DATOS", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Nº RECETA:");

        t_cod_orden.setEnabled(false);
        t_cod_orden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_cod_ordenActionPerformed(evt);
            }
        });
        t_cod_orden.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_cod_ordenKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_cod_ordenKeyTyped(evt);
            }
        });

        t_cod_receta.setEnabled(false);
        t_cod_receta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_cod_recetaActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel16.setText("BUSCAR CON F12 ");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("MENU PEDIDO:");

        t_receta.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Nº DE ORDEN :");

        tabla_receta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nº ORDEN", "Nº RECETA", "MENU", "CHECK"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_receta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_recetaMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tabla_receta);

        b_habilitar.setText("volver a buscar");
        b_habilitar.setEnabled(false);
        b_habilitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_habilitarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(t_receta)
                        .addComponent(t_cod_receta)
                        .addComponent(t_cod_orden, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel16))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(b_habilitar)))
                .addGap(3, 3, 3))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(t_cod_orden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(t_cod_receta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(t_receta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(b_habilitar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "DATOS DEL PROCESO", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        t_numero_proceso.setEnabled(false);
        t_numero_proceso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_numero_procesoActionPerformed(evt);
            }
        });
        t_numero_proceso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_numero_procesoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_numero_procesoKeyTyped(evt);
            }
        });

        t_fecha.setEnabled(false);
        t_fecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_fechaActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("HORA REALIZADA:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("FECHA :");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("NUMERO:");

        t_hora_realizada.setEnabled(false);
        t_hora_realizada.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t_hora_realizadaMouseClicked(evt);
            }
        });
        t_hora_realizada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_hora_realizadaActionPerformed(evt);
            }
        });
        t_hora_realizada.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_hora_realizadaKeyTyped(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel15.setText("BUSCAR CON F12 ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(t_hora_realizada)
                        .addComponent(t_fecha)
                        .addComponent(t_numero_proceso, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t_numero_proceso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t_hora_realizada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "PROCESOS", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        b_grabar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        b_grabar.setText("GRABAR");
        b_grabar.setEnabled(false);
        b_grabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_grabarActionPerformed(evt);
            }
        });

        b_salir.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        b_salir.setText("SALIR");
        b_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_salirActionPerformed(evt);
            }
        });

        b_nuevo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        b_nuevo.setText("NUEVO");
        b_nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_nuevoActionPerformed(evt);
            }
        });

        b_cancelar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        b_cancelar.setText("CANCELAR");
        b_cancelar.setEnabled(false);
        b_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cancelarActionPerformed(evt);
            }
        });

        b_anular.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        b_anular.setText("ANULAR");
        b_anular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_anularActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(b_grabar, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                        .addComponent(b_cancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(b_salir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(b_nuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(b_anular, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)))
                .addGap(103, 103, 103))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(b_nuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(b_anular, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(b_grabar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(b_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(b_salir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "ORDEN DEL MENU PEDIDO", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ITEMS", "Nº ETAPA", "PROCESOS ETAPA", "Nº RECETA", "(SI) CULMINO", "(NO) CULMINO", "OBS"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);
        if (tabla.getColumnModel().getColumnCount() > 0) {
            tabla.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 926, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "INGREDIENTES", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ITEMS", "CODIGO", "PRODUCTO", "COD UNIDAD", "UNIDAD", "TIPO PRODUCTO", "PRESENTACION", "MARCA", "GRUPO", "CANTIDAD", "DEPOSITO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grilla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grillaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(grilla);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 921, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "DATOS DEL COCINERO", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel26.setText("COCINERO C.I:");

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel27.setText("NOMBRE:");

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel29.setText("TELEFONO:");

        t_cocinero_nombre.setEnabled(false);

        t_ci_cocinero.setEnabled(false);
        t_ci_cocinero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_ci_cocineroActionPerformed(evt);
            }
        });
        t_ci_cocinero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_ci_cocineroKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_ci_cocineroKeyTyped(evt);
            }
        });

        t_cod_cocinero.setEnabled(false);

        t_cocinero_telefono.setEnabled(false);

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel30.setText("SEXO:");

        t_cocinero_sexo.setEnabled(false);

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel31.setText("CARGO:");

        t_cocinero_apellido.setEnabled(false);

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel32.setText("APELLIDO:");

        t_cocinero_cargo.setEnabled(false);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel26)
                    .addComponent(jLabel27)
                    .addComponent(jLabel32))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(t_cocinero_apellido, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(t_ci_cocinero, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_cod_cocinero, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(t_cocinero_nombre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel30)
                    .addComponent(jLabel29)
                    .addComponent(jLabel31))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(t_cocinero_cargo, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(t_cocinero_sexo, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(t_cocinero_telefono, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(t_ci_cocinero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_cod_cocinero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(t_cocinero_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_cocinero_apellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel29)
                                    .addComponent(t_cocinero_telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel30)
                                    .addComponent(t_cocinero_sexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel26)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel27)))
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel32))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(t_cocinero_cargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(33, 33, 33))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true)));

        t_cod_personal.setEnabled(false);

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setText("FUNCIONARIO:");

        t_nombre.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        t_nombre.setText("NOMBRE");

        t_cod_sucursal.setEnabled(false);

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setText("SUCURSAL:");

        t_sucursal.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        t_sucursal.setText("NOMBRE");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel20.setText("Procesos de  Produccion");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(152, 152, 152)
                .addComponent(jLabel18)
                .addGap(18, 18, 18)
                .addComponent(t_cod_personal, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(t_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(117, 117, 117)
                .addComponent(jLabel19)
                .addGap(22, 22, 22)
                .addComponent(t_cod_sucursal, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(t_sucursal, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(197, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t_cod_personal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel20)
                    .addComponent(t_nombre)
                    .addComponent(t_cod_sucursal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(t_sucursal))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void t_numero_procesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_numero_procesoActionPerformed
       buscar_detalle_proceso();
}//GEN-LAST:event_t_numero_procesoActionPerformed

    private void t_numero_procesoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_numero_procesoKeyPressed
        if (t_numero_proceso.getText().equals("") &&evt.getKeyCode()==123) { // presiona F12
            JTextField[] tfParam = new JTextField[1];

            tfParam[0] = this.t_numero_proceso;


            String sql = "SELECT proces_cod,proces_fech,hora_terminada FROM procesos_produccion  WHERE proce_est='pendiente' AND proces_fech like";
            Buscador pp = new Buscador(sql , new String[]{"NUMERO", "FECHA","HORA"},3, tfParam);
            pp.setTitle("Buscar Procesos de Produccion");
            pp.setVisible(true);
        } else if (evt.getKeyCode() ==KeyEvent.VK_ENTER  &&   t_numero_proceso.getText().equals("") ){

            JOptionPane.showMessageDialog(null,"EL CAMPO NO PUEDE ESTAR VACIO","AVISO",JOptionPane.ERROR_MESSAGE);

            this.t_numero_proceso.setEnabled(true);
            this.t_numero_proceso.requestFocus();
        }
}//GEN-LAST:event_t_numero_procesoKeyPressed

    private void t_numero_procesoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_numero_procesoKeyTyped
        char caracter = evt.getKeyChar();
        if(((caracter < '0') ||
                (caracter > '9')) &&
                (caracter != evt.VK_BACK_SPACE)) {
            evt.consume();
        }
}//GEN-LAST:event_t_numero_procesoKeyTyped

    private void t_fechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_fechaActionPerformed
        // TODO add your handling code here:
        if(t_fecha.getText().equals("")||t_fecha.getText().trim().length()==0){
            JOptionPane.showMessageDialog(null,"EL CAMPO NO PUEDE ESTAR VACIO","AVISO",JOptionPane.ERROR_MESSAGE);
            this.t_hora_realizada.setEnabled(false);
            this.t_fecha.setEnabled(true);
            this.t_fecha.requestFocus();
        } else{
            Hora();
            this.t_fecha.setEnabled(false);
            this.t_hora_realizada.setEnabled(true);
            this.t_hora_realizada.requestFocus();
        }
}//GEN-LAST:event_t_fechaActionPerformed

    private void t_hora_realizadaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t_hora_realizadaMouseClicked

}//GEN-LAST:event_t_hora_realizadaMouseClicked

    private void t_hora_realizadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_hora_realizadaActionPerformed
        if(t_hora_realizada.getText().equals("") ||t_hora_realizada.getText().trim().length()==0 ){
            JOptionPane.showMessageDialog(null,"EL CAMPO NO PUEDE ESTAR VACIO","AVISO",JOptionPane.ERROR_MESSAGE);
            this.t_ci_cocinero.setEnabled(false);
            this.t_hora_realizada.setEnabled(true);
            this.t_hora_realizada.requestFocus();
        } else{
            this.t_hora_realizada.setEnabled(false);
            this.t_ci_cocinero.setEnabled(true);
            this.t_ci_cocinero.requestFocus();
        }
    }//GEN-LAST:event_t_hora_realizadaActionPerformed

    private void t_hora_realizadaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_hora_realizadaKeyTyped
        int letra = (int) evt.getKeyChar();
        if (letra > 47 && letra < 58) {
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            getToolkit().beep();///el sonido del error
            evt.consume();////mantiene el pulsor al presionar espacio
            JOptionPane.showMessageDialog(null,"NO PUEDES INGRESAR NUMEROS");
            t_hora_realizada.requestFocus();
        }
        if (letra == 10) // enter
        {
            //transfiere el foco si presionas enter
            t_cod_orden.setEnabled(true);
            t_cod_orden.requestFocus();
        }
}//GEN-LAST:event_t_hora_realizadaKeyTyped

    private void b_anularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_anularActionPerformed
        operacion="anular";
        this.t_numero_proceso.setEnabled(true);
        this.t_numero_proceso.requestFocus();
        des_botones();
          tabla.setEnabled(false);
}//GEN-LAST:event_b_anularActionPerformed

    private void b_grabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_grabarActionPerformed

//
//              int filaSeleccionada = 0;
//        filaSeleccionada = tabla.getSelectedRow();
//        if (filaSeleccionada == -1) {
//            JOptionPane.showMessageDialog(this, "Debe seleccionar todas las fila", "ATENCION",
//            JOptionPane.INFORMATION_MESSAGE);
//
//        } else {
        validarGrilla();
        limpiar_grilla();
        limpiar_grilla3();
        limpiar_grilla2();
        hab_botones();
        des_text();
        clear_text();
        this.t_numero_proceso.setEnabled(false);
        tabla_receta.setEnabled(true);
       tabla.setEnabled(true);

      //  }

}//GEN-LAST:event_b_grabarActionPerformed

    private void b_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_salirActionPerformed
        int mensaje = JOptionPane.showConfirmDialog(this, "¿DESEA SALIR?", "CONFIRMAR", JOptionPane.YES_NO_OPTION);
        if (mensaje == JOptionPane.YES_OPTION) {
            dispose();
        }
}//GEN-LAST:event_b_salirActionPerformed

    private void b_nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_nuevoActionPerformed
        // TODO add your handling code here:
        operacion = "nuevo";
        gencodigo();
        des_botones();
        hab_text();
        mostrar_fecha();
        tabla_receta.setEnabled(true);
        tabla.setEnabled(true);
}//GEN-LAST:event_b_nuevoActionPerformed

    private void b_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cancelarActionPerformed
        hab_botones();
        des_text();
        clear_text();
}//GEN-LAST:event_b_cancelarActionPerformed

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked

      if(operacion.equals("nuevo")){
          marcar();
      }

 else if (operacion.equals("anular")) {
           tabla.setEnabled(false);
      }


}//GEN-LAST:event_tablaMouseClicked

    private void t_cod_ordenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_cod_ordenKeyTyped
        char caracter = evt.getKeyChar();
        if(((caracter < '0') ||
                (caracter > '9')) &&
                (caracter != evt.VK_BACK_SPACE)) {
            evt.consume();
        }
}//GEN-LAST:event_t_cod_ordenKeyTyped

    private void t_cod_ordenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_cod_ordenKeyPressed
                if (t_cod_orden.getText().equals("") &&evt.getKeyCode()==123) { // presiona F12
                    JTextField[] tfParam = new JTextField[1];
        
                    tfParam[0] = this.t_cod_orden;

        
        
                    String sql = "SELECT o.or_pro_cod,o.fecha_inicio FROM orden_produccion o WHERE  o.ord_pro_est= 'pendiente' AND o.fecha_inicio LIKE ";
                    Buscador pp = new Buscador(sql , new String[]{"Codigo", "Fecha"},2, tfParam);
                    pp.setTitle("BUSCAR ORDEN");
                    pp.setVisible(true);
                } else if (evt.getKeyCode() ==KeyEvent.VK_ENTER  &&   t_cod_orden.getText().equals("") ){
        
                    JOptionPane.showMessageDialog(null,"EL CAMPO NO PUEDE ESTAR VACIO","AVISO",JOptionPane.ERROR_MESSAGE);
        
                    this.t_cod_orden.setEnabled(true);
                    this.t_cod_orden.requestFocus();
                }
}//GEN-LAST:event_t_cod_ordenKeyPressed

    private void t_cod_ordenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_cod_ordenActionPerformed
buscar_detalle_etapa();
}//GEN-LAST:event_t_cod_ordenActionPerformed

    private void grillaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grillaMouseClicked
        // TODO add your handling code here:
}//GEN-LAST:event_grillaMouseClicked

    private void tabla_recetaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_recetaMouseClicked


for(int a=0;a<tabla_receta.getRowCount();a++)
{

if(Boolean.parseBoolean(String.valueOf(this.tabla_receta.getValueAt(a,3)))==true) //si culmino
{
eligio();
tabla_receta.setEnabled(false);
this.b_habilitar.setEnabled(true);
}
}



    }//GEN-LAST:event_tabla_recetaMouseClicked

    private void b_habilitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_habilitarActionPerformed
      limpiar_grilla3();
      this.t_cod_receta.setText("");
      this.t_receta.setText("");
      this.t_cod_orden.setText("");
      this.t_cod_orden.setEnabled(true);
      this.t_cod_orden.requestFocus();
            this.b_habilitar.setEnabled(false);
        tabla_receta.setEnabled(true);
        tabla.setEnabled(true);
    }//GEN-LAST:event_b_habilitarActionPerformed

    private void t_cod_recetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_cod_recetaActionPerformed
      buscar_receta();
    }//GEN-LAST:event_t_cod_recetaActionPerformed

    private void t_ci_cocineroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_ci_cocineroActionPerformed

        buscar_cocinero();
}//GEN-LAST:event_t_ci_cocineroActionPerformed

    private void t_ci_cocineroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_ci_cocineroKeyPressed
        if (t_ci_cocinero.getText().equals("") &&evt.getKeyCode()==123) { // presiona F12
            JTextField[] tfParam = new JTextField[7];

            tfParam[0] = this.t_cod_cocinero;
            tfParam[1] = this.t_ci_cocinero;
            tfParam[2] = this.t_cocinero_cargo;
            tfParam[3] = this.t_cocinero_nombre;
            tfParam[4] = this.t_cocinero_apellido;
            tfParam[5] = this.t_cocinero_telefono;
            tfParam[6] = this.t_cocinero_sexo;


            String sql = "SELECT f.func_cod,f.func_ci,c.carg_desc,f.func_nom,f.func_ape,f.func_tel,f.func_sexo FROM funcionario f, cargo c WHERE c.carg_cod=f.carg_cod AND f.func_ci LIKE ";
            Buscador pp = new Buscador(sql , new String[]{"CODIGO","C.I.","CARGO","NOMBRE","APELLIDO","TELEFONO","SEXO"},7, tfParam);
            pp.setTitle("Buscar Cocineros");
            pp.setVisible(true);
        }  else if (evt.getKeyCode() ==KeyEvent.VK_ENTER  &&   t_ci_cocinero.getText().equals("") ){

            JOptionPane.showMessageDialog(null,"EL CAMPO NO PUEDE ESTAR VACIO","AVISO",JOptionPane.ERROR_MESSAGE);

            this.t_ci_cocinero.setEnabled(true);
            this.t_ci_cocinero.requestFocus();
        }
}//GEN-LAST:event_t_ci_cocineroKeyPressed

    private void t_ci_cocineroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_ci_cocineroKeyTyped
        char caracter = evt.getKeyChar();
        if(((caracter < '0') ||
                (caracter > '9')) &&
                (caracter != evt.VK_BACK_SPACE)) {
            evt.consume();
        }
}//GEN-LAST:event_t_ci_cocineroKeyTyped

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new procesos_produccion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_anular;
    private javax.swing.JButton b_cancelar;
    private javax.swing.JButton b_grabar;
    private javax.swing.JButton b_habilitar;
    private javax.swing.JButton b_nuevo;
    private javax.swing.JButton b_salir;
    private javax.swing.JTable grilla;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField t_ci_cocinero;
    private javax.swing.JTextField t_cocinero_apellido;
    private javax.swing.JTextField t_cocinero_cargo;
    private javax.swing.JTextField t_cocinero_nombre;
    private javax.swing.JTextField t_cocinero_sexo;
    private javax.swing.JTextField t_cocinero_telefono;
    private javax.swing.JTextField t_cod_cocinero;
    private javax.swing.JTextField t_cod_orden;
    private javax.swing.JTextField t_cod_personal;
    private javax.swing.JTextField t_cod_receta;
    private javax.swing.JTextField t_cod_sucursal;
    private javax.swing.JTextField t_fecha;
    private javax.swing.JTextField t_hora_realizada;
    private javax.swing.JLabel t_nombre;
    private javax.swing.JTextField t_numero_proceso;
    private javax.swing.JTextField t_receta;
    private javax.swing.JLabel t_sucursal;
    private javax.swing.JTable tabla;
    private javax.swing.JTable tabla_receta;
    // End of variables declaration//GEN-END:variables


     private void hab_text()
   {
      this.t_fecha.setEnabled(true);
      this.t_fecha.requestFocus();
      mostrar_fecha();
  }
       private void hab_botones()
   {
      this.b_nuevo.setEnabled(true);
      this.b_anular.setEnabled(true);
      this.b_salir.setEnabled(true);
      this.b_cancelar.setEnabled(false);
      this.b_grabar.setEnabled(false);
      this.b_habilitar.setEnabled(false);

   }
  private void des_botones()
   {
      this.b_nuevo.setEnabled(false);
      this.b_anular.setEnabled(false);
      this.b_salir.setEnabled(false);
      this.b_cancelar.setEnabled(true);
      this.b_grabar.setEnabled(false);
   }

private void des_text()
   {
     this.t_numero_proceso.setEnabled(false);
     this.t_fecha.setEnabled(false);
     this.t_hora_realizada.setEnabled(false);
     this.t_cod_orden.setEnabled(false);
     this.t_cod_receta.setEnabled(false);
     this.t_receta.setEnabled(false);
     this.t_ci_cocinero.setEnabled(false);
   }

    private void clear_text()
   {
       this.t_numero_proceso.setText("");
       this.t_fecha.setText("");
       this.t_hora_realizada.setText("");
       this.t_cod_orden.setText("");
       this.t_receta.setText("");
       this.t_cod_receta.setText("");
       this.t_ci_cocinero.setText("");
       this.t_cocinero_nombre.setText("");
       this.t_cocinero_apellido.setText("");
       this.t_cod_cocinero.setText("");
       this.t_cocinero_sexo.setText("");
       this.t_cocinero_telefono.setText("");
       this.t_cocinero_cargo.setText("");




       limpiar_grilla();
       limpiar_grilla2();
       limpiar_grilla3();
       tabla_receta.setEnabled(true);
   }
  private void limpiar_grilla()
   {
   DefaultTableModel dt;
   dt = (DefaultTableModel) tabla.getModel();
   while (tabla.getRowCount() > 0) {
   cursor.removeRow(0);
   }
   }
 private void limpiar_grilla3()
   {
   DefaultTableModel dt;
   dt = (DefaultTableModel) tabla_receta.getModel();
   while (tabla_receta.getRowCount() > 0) {
   cursor3.removeRow(0);
   }
   }
private void limpiar_grilla2()
   {
   DefaultTableModel dt;
   dt = (DefaultTableModel) grilla.getModel();
   while (grilla.getRowCount() > 0) {
   cursor2.removeRow(0);
   }
   }


   private void gencodigo(){
   try {
    conn.sentencia = conn.conexion.createStatement();
    conn.resultado = conn.sentencia.executeQuery("SELECT IFNULL(MAX(proces_cod),0)+1 AS newcod FROM procesos_produccion");
    conn.resultado.next();
    t_numero_proceso.setText(conn.resultado.getString("newcod"));
         } catch (SQLException ex) {
            Logger.getLogger(procesos_produccion.class.getName()).log(Level.SEVERE, null, ex);
         }
         }
         private void mostrar_fecha() {
        try {
        ver_conex c=new ver_conex();
        c.sentencia=c.conexion.createStatement();
        c.resultado=c.sentencia.executeQuery("select date_format(current_date(),'%d/%m/%Y') as fecha");
        while (c.resultado.next()) {
        t_fecha.setText(c.resultado.getString("fecha"));
            }
            } catch (Exception ex) {
            javax.swing.JOptionPane.showMessageDialog(null, ex.getMessage());
            }
            }

  private void Hora() {
        try {
            ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("select curtime() as hora");
            conn.resultado.next();
            t_hora_realizada.setText(conn.resultado.getString("hora"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e, "Aviso", JOptionPane.INFORMATION_MESSAGE);
        }
        }

private void buscar_cocinero() {
try
{
conn.sentencia = conn.conexion.createStatement();
conn.resultado = conn.sentencia.executeQuery("SELECT f.func_cod,c.carg_desc,f.func_ci,f.func_nom,f.func_ape,f.func_tel,f.func_sexo FROM funcionario f, cargo c WHERE c.carg_cod=f.carg_cod AND f.func_ci="+this.t_ci_cocinero.getText());

        if(conn.resultado.next())//si encontro
        {
          this.t_cod_cocinero.setText(conn.resultado.getString("func_cod"));
          this.t_cocinero_cargo.setText(conn.resultado.getString("carg_desc"));
          this.t_ci_cocinero.setText(conn.resultado.getString("func_ci"));
          this.t_cocinero_nombre.setText(conn.resultado.getString("func_nom"));
          this.t_cocinero_apellido.setText(conn.resultado.getString("func_ape"));
          this.t_cocinero_telefono.setText(conn.resultado.getString("func_tel"));
          this.t_cocinero_sexo.setText(conn.resultado.getString("func_sexo"));

          this.t_cod_orden.setEnabled(true);
          this.t_cod_orden.requestFocus();

      if(t_ci_cocinero.getText().equals("") ||t_ci_cocinero.getText().trim().length()==0 ){
        JOptionPane.showMessageDialog(null,"EL CAMPO NO PUEDE ESTAR VACIO","AVISO",JOptionPane.ERROR_MESSAGE);
         this.t_ci_cocinero.setEnabled(true);
         this.t_ci_cocinero.requestFocus();
        }
           }
       else//no encontro
        {
        JOptionPane.showMessageDialog(null,"NO EXISTE LA UNIDAD DE MEDIDA", "MENSAJE",
        JOptionPane.INFORMATION_MESSAGE);
        this.t_ci_cocinero.setEnabled(true);
        this.t_ci_cocinero.requestFocus();
        }
 	}
	catch (SQLException exceptionSql)
	{
//	JOptionPane.showMessageDialog(null, exceptionSql.getMessage(), "no debe esta vacio", JOptionPane.ERROR_MESSAGE);
	}
        }
private void buscar_receta(){

try{

     conn.sentencia = conn.conexion.createStatement();
     conn.resultado = conn.sentencia.executeQuery("SELECT e.item,e.etap_cod,e.etap_desc,e.rece_cod FROM control_etapas e,detalle_orden_produccion d,cabecera_recet r WHERE e.estado='pendiente' AND d.or_estado='pendiente' AND r.rece_cod=e.rece_cod AND d.rece_cod=r.rece_cod AND e.rece_cod=" + t_cod_receta.getText());
     boolean encontro = conn.resultado.next();
     if (encontro==true)//encontrog
            {
         this.t_cod_receta.setEnabled(false);

        this.b_grabar.setEnabled(true);
do{


   c++;
//        while(conn.resultado.next())
//           {
           conn.sentencia = conn.conexion.createStatement();
           String registro[] = new String[] {conn.resultado.getString("item"),conn.resultado.getString("etap_cod"),conn.resultado.getString("etap_desc"),conn.resultado.getString("rece_cod")};
           cursor.addRow(registro);
//           }
}while(conn.resultado.next());
//////////////////////////////////////////////////////////////////////////
ver_conex conn = new ver_conex();
conn.sentencia = conn.conexion.createStatement();
conn.resultado = conn.sentencia.executeQuery("SELECT r.rece_cod,d.depo_cod,r.rece_desc,r.rece_fecha,su.suc_desc,d.prd_cod,d.det_item,d.cantidad,po.prd_nom,d.unid_cod,u.unid_desc,ti.tip_prd_dec,pe.presen_des,ma.mar_desc,g.grup_descri FROM grupo g,sucursal su, detalle_recetas d,cabecera_recet r,producto po,presentacion pe,marcas ma,tipo_producto ti,unidad_medida u WHERE g.grup_cod=po.grup_cod and su.suc_cod=r.suc_cod AND d.rece_cod=r.rece_cod AND po.prd_cod=d.prd_cod AND d.unid_cod=u.unid_cod AND ti.tip_prd_cod=po.tip_prd_cod AND pe.presen_cod=po.presen_cod AND ma.mar_cod=po.mar_cod AND d.rece_cod="+t_cod_receta.getText()); //OJO LE PASO LA SENTENCIA=" + t_numero_receta.getText());
        while(conn.resultado.next())
         {
           conn.sentencia = conn.conexion.createStatement();
           String registro[] = new String[] {conn.resultado.getString("det_item"),conn.resultado.getString("prd_cod"),conn.resultado.getString("prd_nom"),conn.resultado.getString("unid_cod"),conn.resultado.getString("unid_desc"),conn.resultado.getString("tip_prd_dec"),conn.resultado.getString("presen_des"),conn.resultado.getString("mar_desc"),conn.resultado.getString("grup_descri"),conn.resultado.getString("cantidad"),conn.resultado.getString("depo_cod")};
           cursor2.addRow(registro);

          }

 if(t_cod_receta.getText().equals("") ||t_cod_receta.getText().trim().length()==0 ){
        JOptionPane.showMessageDialog(null,"EL CAMPO NO PUEDE ESTAR VACIO","AVISO",JOptionPane.ERROR_MESSAGE);

         this.t_cod_receta.setEnabled(true);
         this.t_cod_receta.requestFocus();
        }

           }
          else{
     JOptionPane.showMessageDialog(null, "NO HAY RECETAS CON ESTE NUMERO EN LA ORDEN", "ATENCION", JOptionPane.ERROR_MESSAGE);
     this.t_cod_receta.setEnabled(true);
     this.t_cod_receta.requestFocus();
         }

 } catch(SQLException e){
 }
 }


  private void buscar_detalle_proceso(){

try{

     conn.sentencia = conn.conexion.createStatement();
     conn.resultado = conn.sentencia.executeQuery("SELECT * FROM cabecera_recet r,detalle_procesos_prod d, procesos_produccion p WHERE r.rece_cod=d.rece_cod AND p.proce_est='pendiente' AND d.proces_cod=p.proces_cod AND p.proces_cod=" + t_numero_proceso.getText());
     boolean encontro = conn.resultado.next();
     if (encontro==true)//encontrog
            {
        this.t_cod_orden.setText(conn.resultado.getString("or_pro_cod"));
        this.t_cod_receta.setText(conn.resultado.getString("rece_cod"));
        this.t_numero_proceso.setText(conn.resultado.getString("proces_cod"));
        this.t_fecha.setText(conn.resultado.getString("proces_fech"));
        this.t_hora_realizada.setText(conn.resultado.getString("hora_terminada"));
        this.t_receta.setText(conn.resultado.getString("rece_desc"));

 trae_etapda_anular();
     this.b_grabar.setEnabled(true);
//////////////////////////////////////////////////////////////////////////
ver_conex conn = new ver_conex();
conn.sentencia = conn.conexion.createStatement();
conn.resultado = conn.sentencia.executeQuery("SELECT d.rece_cod,d.proces_cod,d.cantidad,d.prd_cod,d.item,d.depo_cod,po.prd_nom,po.unid_cod,u.unid_desc,ti.tip_prd_dec,pe.presen_des,ma.mar_desc,g.grup_descri  FROM grupo g, detalle_procesos_prod d,orden_produccion o,producto po,presentacion pe,marcas ma,tipo_producto ti,unidad_medida u  WHERE g.grup_cod=po.grup_cod AND po.unid_cod=u.unid_cod AND po.prd_cod=d.prd_cod AND ti.tip_prd_cod=po.tip_prd_cod AND pe.presen_cod=po.presen_cod AND ma.mar_cod=po.mar_cod AND d.proces_cod="+t_numero_proceso.getText()); //OJO LE PASO LA SENTENCIA=" + t_numero_receta.getText());
        while(conn.resultado.next())
         {
           conn.sentencia = conn.conexion.createStatement();
           String registro[] = new String[] {conn.resultado.getString("item"),conn.resultado.getString("prd_cod"),conn.resultado.getString("prd_nom"),conn.resultado.getString("unid_cod"),conn.resultado.getString("unid_desc"),conn.resultado.getString("tip_prd_dec"),conn.resultado.getString("presen_des"),conn.resultado.getString("mar_desc"),conn.resultado.getString("grup_descri"),conn.resultado.getString("cantidad"),conn.resultado.getString("depo_cod")};
           cursor2.addRow(registro);

          }

 if(t_numero_proceso.getText().equals("") ||t_numero_proceso.getText().trim().length()==0 ){
        JOptionPane.showMessageDialog(null,"EL CAMPO NO PUEDE ESTAR VACIO","AVISO",JOptionPane.ERROR_MESSAGE);

         this.t_numero_proceso.setEnabled(true);
         this.t_numero_proceso.requestFocus();
        }

           }
          else{
     JOptionPane.showMessageDialog(null, "YA SE REALIZO ESTA ORDEN", "ATENCION", JOptionPane.ERROR_MESSAGE);
     this.t_numero_proceso.setEnabled(true);
     this.t_numero_proceso.requestFocus();
         }

 } catch(SQLException e){
 }
 }


private void buscar_detalle_etapa(){

try{

     conn.sentencia = conn.conexion.createStatement();
     conn.resultado = conn.sentencia.executeQuery("SELECT * FROM detalle_orden_produccion d, orden_produccion o WHERE d.or_estado='pendiente' AND o.ord_pro_est= 'pendiente' AND o.or_pro_cod=d.or_pro_cod AND o.or_pro_cod=" + t_cod_orden.getText());
     boolean encontro = conn.resultado.next();
     if (encontro==true)//encontrog
            {

        this.t_cod_orden.setEnabled(false);

        ver_conex conn = new ver_conex();
        conn.sentencia = conn.conexion.createStatement();
        conn.resultado = conn.sentencia.executeQuery("SELECT d.rece_cod,d.or_pro_cod,r.rece_desc FROM cabecera_recet r, detalle_orden_produccion d, orden_produccion o WHERE r.rece_cod=d.rece_cod AND d.or_estado='pendiente' AND o.ord_pro_est= 'pendiente' AND o.or_pro_cod=d.or_pro_cod AND d.or_pro_cod=" + t_cod_orden.getText());
        while(conn.resultado.next())
         {
           conn.sentencia = conn.conexion.createStatement();
           String registro[] = new String[] {conn.resultado.getString("or_pro_cod"),conn.resultado.getString("rece_cod"),conn.resultado.getString("rece_desc")};
           cursor3.addRow(registro);            
        }

//////////////////////////////////////////////////////////////////////////

 if(t_cod_orden.getText().equals("") ||t_cod_orden.getText().trim().length()==0 ){
        JOptionPane.showMessageDialog(null,"EL CAMPO NO PUEDE ESTAR VACIO","AVISO",JOptionPane.ERROR_MESSAGE);

         this.t_cod_orden.setEnabled(true);
         this.t_cod_orden.requestFocus();
        }

           }
          else{
     JOptionPane.showMessageDialog(null, " NO EXISTE LA ORDEN/ REALIZAE UNO Y LUEGO VUELVA A INTENTARLO", "ATENCION", JOptionPane.ERROR_MESSAGE);
     this.t_cod_orden.setEnabled(true);
     this.t_cod_orden.requestFocus();
         }
         conn.sentencia = conn.conexion.createStatement();
     conn.resultado = conn.sentencia.executeQuery("SELECT * FROM detalle_orden_produccion d, orden_produccion o WHERE d.or_estado='Realizado' AND o.ord_pro_est= 'Realizado' AND o.or_pro_cod=d.or_pro_cod AND o.or_pro_cod=" + t_cod_orden.getText());
     boolean encontro2 = conn.resultado.next();
     if (encontro2==true)//encontrog
            {
          JOptionPane.showMessageDialog(null, "YA FUE CULMINADO LA ORDEN", "ATENCION", JOptionPane.ERROR_MESSAGE);
     this.t_cod_orden.setEnabled(true);
     this.t_cod_orden.requestFocus();
     }
             conn.sentencia = conn.conexion.createStatement();
     conn.resultado = conn.sentencia.executeQuery("SELECT * FROM orden_produccion o WHERE  o.ord_pro_est= 'Anulado' AND o.or_pro_cod=" + t_cod_orden.getText());
     boolean encontro3 = conn.resultado.next();
     if (encontro3==true)//encontrog
            {
          JOptionPane.showMessageDialog(null, "ESTA ORDEN ESTA ANULADO", "ATENCION", JOptionPane.ERROR_MESSAGE);
     this.t_cod_orden.setEnabled(true);
     this.t_cod_orden.requestFocus();
     }

 } catch(SQLException e){
 }
 }

int re=0;
private void marcar()
{


for(int a=0;a<tabla.getRowCount();a++)
{

if(Boolean.parseBoolean(String.valueOf(this.tabla.getValueAt(a,4)))==true) //si culmino
{
 re=tabla.getSelectedRow();
  this.tabla.setValueAt("hecho", re, 6);
}

else if(Boolean.parseBoolean(String.valueOf(this.tabla.getValueAt(a,5)))==true)//no culmino
{
   //click();
   re=tabla.getSelectedRow();
   this.tabla.setValueAt("", re, 6);

}
}
}


private void validarGrilla(){
    int tabla2= tabla.getRowCount();
    if(tabla2==0)
    {
       JOptionPane.showMessageDialog(null,"CARGAR GRILLA PARA CONTINUAR","AVISO",JOptionPane.INFORMATION_MESSAGE);
       t_numero_proceso.requestFocus();
    }
    else
    {
      grabar();
    }
    }
private void grabar()
{
    try
    {

String f=t_fecha.getText();
String dd=f.substring(0,2);
String mm=f.substring(3,5);
String aa=f.substring(6,10);
String fech=aa+"/"+mm+"/"+dd;
DateFormat df=new SimpleDateFormat(fech);

String SQL = null;

        if(operacion.equals("nuevo"))
      {
      {
      SQL = "INSERT INTO procesos_produccion VALUES ("+t_numero_proceso.getText()+","+t_cod_sucursal.getText()+","+t_cod_orden.getText()+","+t_cod_cocinero.getText()+",'pendiente','"+fech+"','"+t_hora_realizada.getText()+"')";
                                       
      }
        ver_conex c= new ver_conex();
        c.sentencia= c.conexion.createStatement();
        c.sentencia.executeUpdate(SQL);

        for (int fila = 0; fila < grilla.getRowCount(); fila++)
        {

        c.sentencia = c.conexion.createStatement();
        c.sentencia.executeUpdate("INSERT INTO detalle_procesos_prod(rece_cod,proces_cod,item,cantidad,prd_cod,depo_cod) VALUES ("+t_cod_receta.getText()+","+t_numero_proceso.getText()+","+grilla.getValueAt(fila,0)+","+grilla.getValueAt(fila,9)+","+grilla.getValueAt(fila,1)+","+grilla.getValueAt(fila,10)+")");
        }//HASTA AQUI GRABAB BIEN



        for (int a = 0; a < tabla.getRowCount(); a++)
        {
        if(Boolean.parseBoolean(String.valueOf(this.tabla.getValueAt(a,4)))==true)//marcado
        {
        c.sentencia = c.conexion.createStatement();
        c.sentencia.executeUpdate("INSERT INTO detalle_proceso_etapa(proces_cod,item,rece_cod,etap_cod,descripcion,estado,obs) VALUES ("+t_numero_proceso.getText()+","+tabla.getValueAt(a,0)+","+tabla.getValueAt(a,3)+","+tabla.getValueAt(a,1)+",'"+tabla.getValueAt(a,2)+"','culminado','"+tabla.getValueAt(a,6)+"')");
        }
        }                                                              
        for (int a = 0; a < tabla.getRowCount(); a++)
        {
        if(Boolean.parseBoolean(String.valueOf(this.tabla.getValueAt(a,5)))==true)//marcado
        {
        c.sentencia = c.conexion.createStatement();
        c.sentencia.executeUpdate("INSERT INTO detalle_proceso_etapa(proces_cod,item,rece_cod,etap_cod,descripcion,estado,obs) VALUES ("+t_numero_proceso.getText()+","+tabla.getValueAt(a,0)+","+tabla.getValueAt(a,3)+","+tabla.getValueAt(a,1)+",'"+tabla.getValueAt(a,2)+"','pendiente','"+tabla.getValueAt(a,6)+"')");
        }

        }//hasta aqui vamos bien


        for (int a = 0; a < tabla.getRowCount(); a++)
        {
        if(Boolean.parseBoolean(String.valueOf(this.tabla.getValueAt(a,4)))==true)//marcado
        {
    c.sentencia = c.conexion.createStatement();
    String insercionSQL="UPDATE control_etapas SET estado= 'Realizado' WHERE rece_cod= "+t_cod_receta.getText()+" and etap_cod= "+tabla.getValueAt(a,1) ;
    c.sentencia.executeUpdate(insercionSQL);
        }
        }//hasta aqui vamos bien



for (int a = 0; a < tabla.getRowCount(); a++)
        {
     if(Boolean.parseBoolean(String.valueOf(this.tabla.getValueAt(a,4)))==true)//marcado
        {
     ver_conex c2= new ver_conex();
     c2.sentencia = c2.conexion.createStatement();
     c2.resultado = c2.sentencia.executeQuery("SELECT * FROM control_etapas WHERE  estado = 'pendiente' AND rece_cod= "+t_cod_receta.getText()+" ");

     boolean encontro = c2.resultado.next();
     if (encontro==false){
         
        c2.sentencia = c2.conexion.createStatement();
        String insercionSQL="UPDATE detalle_orden_produccion SET or_estado= 'Realizado' WHERE rece_cod= "+t_cod_receta.getText()+"  and or_pro_cod= "+t_cod_orden.getText() ;
        c2.sentencia.executeUpdate(insercionSQL);


     }
     }
     }
  for (int a = 0; a < tabla.getRowCount(); a++)
        {
     if(Boolean.parseBoolean(String.valueOf(this.tabla.getValueAt(a,4)))==true)//marcado
        {
     ver_conex c2= new ver_conex();
     c2.sentencia = c2.conexion.createStatement();
     c2.resultado = c2.sentencia.executeQuery("SELECT * FROM detalle_orden_produccion WHERE  or_estado = 'pendiente' AND or_pro_cod= "+t_cod_orden.getText()+" ");



     boolean encontro = c2.resultado.next();
     if (encontro==false){

        c2.sentencia = c2.conexion.createStatement();
        String insercionSQL2="UPDATE orden_produccion SET ord_pro_est= 'Realizado' WHERE or_pro_cod= "+t_cod_orden.getText() ;
        c2.sentencia.executeUpdate(insercionSQL2);

     }
     }
     }      
JOptionPane.showMessageDialog(null,"SE HA GUARDADO SATISFACTORIAMENTE EL PROCESO","AVISO",JOptionPane.INFORMATION_MESSAGE);
resta_stock();
genreporte();
     }
     }
    catch(Exception e)
    {
    }
    try{
    if(operacion.equals("anular"))
    {
    anular();

    }
    }
    catch(Exception e)
    {
        JOptionPane.showMessageDialog(this,"ERROR DE CONEXION33"+e,"AVISO",JOptionPane.INFORMATION_MESSAGE);
    }
    }

public void eligio()
{
 if (band == 0)
  {
  posreg = tabla_receta.getSelectedRow();
  t_cod_receta.setText(String.valueOf(this.tabla_receta.getValueAt(posreg,1)));
  t_receta.setText(String.valueOf(this.tabla_receta.getValueAt(posreg,2)));
  this.t_cod_receta.setEnabled(true);
  this.t_cod_receta.requestFocus();
}
}

private void resta_stock(){
  int cantida=0;
  try {
       for(int fila=0;fila < grilla.getRowCount();fila++){
       ver_conex c= new ver_conex();
       c.sentencia= c.conexion.createStatement();
       c.resultado = c.sentencia.executeQuery("SELECT * FROM stock WHERE depo_cod="+grilla.getValueAt(fila,10)+" and prd_cod="+grilla.getValueAt(fila,1));
       if (c.resultado.next()){
       cantida=c.resultado.getInt("stock_cant");
       c.sentencia.executeUpdate("UPDATE stock SET stock_cant="+cantida+"-"+grilla.getValueAt(fila,9)+" WHERE depo_cod="+grilla.getValueAt(fila,10)+" and prd_cod="+grilla.getValueAt(fila,1));
     }
     }
     } catch (SQLException ex)
     {
     }
     }

private void suma_stock(){
  int cantida=0;
  try {
       for(int fila=0;fila < grilla.getRowCount();fila++){
       ver_conex c= new ver_conex();
       c.sentencia= c.conexion.createStatement();
       c.resultado = c.sentencia.executeQuery("SELECT * FROM stock WHERE depo_cod="+grilla.getValueAt(fila,10)+" and prd_cod="+grilla.getValueAt(fila,1));
       if (c.resultado.next()){
       cantida=c.resultado.getInt("stock_cant");
       c.sentencia.executeUpdate("UPDATE stock SET stock_cant="+cantida+"+"+grilla.getValueAt(fila,9)+" WHERE depo_cod="+grilla.getValueAt(fila,10)+" and prd_cod="+grilla.getValueAt(fila,1));
     }
     }
     } catch (SQLException ex)
     {
     }
     }




private void trae_etapda_anular(){

     try{
  // presiona ENTER
 ver_conex conn1 = new ver_conex ();
     conn1.sentencia = conn1.conexion.createStatement();
     conn1.resultado = conn1.sentencia.executeQuery("SELECT * FROM detalle_proceso_etapa d,procesos_produccion p WHERE p.proce_est='pendiente'  AND d.estado= 'se realizo este proceso' AND d.proces_cod=p.proces_cod AND d.proces_cod=" + t_numero_proceso.getText());
     boolean encontro = conn1.resultado.next();
     if (encontro==true){//encontro

     ver_conex conn2 = new ver_conex();
     conn2.sentencia = conn2.conexion.createStatement();
     conn2.resultado = conn2.sentencia.executeQuery("SELECT d.item,d.rece_cod,d.etap_cod,d.descripcion FROM detalle_proceso_etapa d,procesos_produccion p WHERE p.proce_est='pendiente' AND p.proces_cod=d.proces_cod AND  p.proces_cod="+t_numero_proceso.getText()); //OJO LE PASO LA SENTENCIA=" + t_numero_receta.getText());
     while(conn2.resultado.next())
     {
      conn2.sentencia = conn2.conexion.createStatement();
      String registro[] = new String[] {conn2.resultado.getString("item"),conn2.resultado.getString("etap_cod"),conn2.resultado.getString("descripcion"),conn2.resultado.getString("rece_cod")};
      cursor.addRow(registro);
     }
     marcargrilla();
     }
   else{
        JOptionPane.showMessageDialog(null, "YA SE REALIZARON TODAS LAS ETAPAS/ NO PUEDEN SER ANULADAS ", "Atencion", JOptionPane.ERROR_MESSAGE);
          this.t_numero_proceso.setEnabled(true);
          this.t_numero_proceso.requestFocus();
    }
    }
    catch(SQLException e){

    }
    }


private void marcargrilla()
   {
   for(int a=0;a<tabla.getRowCount();a++)
   {
   this.tabla.setValueAt(true,a,4);
   }
   }


private void anular()
{

         int res = javax.swing.JOptionPane.showOptionDialog(this,
        "Desea Anular el proceso de produccion?","Habilitara nuevamente las etapas",javax.swing.JOptionPane.OK_CANCEL_OPTION,
        javax.swing.JOptionPane.QUESTION_MESSAGE,null,
        new Object[] { "Si", "No"},"Si");

        if (res == javax.swing.JOptionPane.OK_OPTION)
        {
    try {

ver_conex     c= new ver_conex();
c.sentencia = c.conexion.createStatement();
c.sentencia.executeUpdate("UPDATE procesos_produccion SET proce_est='Anulado' WHERE proces_cod ="+t_numero_proceso.getText());

for (int a = 0; a < tabla.getRowCount(); a++)
{
if(Boolean.parseBoolean(String.valueOf(this.tabla.getValueAt(a,4)))==true)//marcado
{
c.sentencia = c.conexion.createStatement();
String insercionSQL="UPDATE control_etapas  SET estado='pendiente' WHERE etap_cod = "+tabla.getValueAt(a,1)+" AND rece_cod= "+t_cod_receta.getText();
c.sentencia.executeUpdate(insercionSQL);
}
}

c.sentencia.executeUpdate("UPDATE detalle_orden_produccion SET or_estado='pendiente' WHERE or_pro_cod ="+t_cod_orden.getText()+" AND rece_cod="+t_cod_receta.getText());

c.sentencia.executeUpdate("UPDATE orden_produccion SET ord_pro_est='pendiente' WHERE or_pro_cod="+t_cod_orden.getText());


JOptionPane.showMessageDialog(null, "EL PROCESO DE PRODUCCION FUE ANULADO.", "Confirmacion", JOptionPane.INFORMATION_MESSAGE);
suma_stock();
}catch (SQLException ex) {
           // Logger.getLogger(cobro.class.getName()).log(Level.SEVERE, null, ex);
}
} else
{
 JOptionPane.showMessageDialog(null, "Operacion Cancelada", "Atencion", JOptionPane.ERROR_MESSAGE);
}
}

public void genreporte() //throws JRException, Exception
    {
        try //throws JRException, Exception
        {
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT p.proces_cod,p.or_pro_cod,p.proces_fech,p.hora_terminada,su.suc_desc,de.etap_cod,de.descripcion,de.estado,de.obs FROM sucursal su, procesos_produccion  p, detalle_proceso_etapa  de WHERE su.suc_cod=p.suc_cod AND p.proces_cod=de.proces_cod AND p.proces_cod="+t_numero_proceso.getText()); //OJO LE PASO LA SENTENCIA
            JRResultSetDataSource jrRS = new JRResultSetDataSource(conn.resultado);

            HashMap parameters = new HashMap();
            URL urlMaestro = getClass().getClassLoader().getResource("impresion/proceso_produccion.jasper");

            // Cargamos el reporte
            JasperReport masterReport = null;
            masterReport = (JasperReport) JRLoader.loadObject(urlMaestro);
            JasperPrint masterPrint = null;
            masterPrint = JasperFillManager.fillReport(masterReport, parameters, jrRS);
            JasperViewer ventana = new JasperViewer(masterPrint, false);
            ventana.setTitle("VISTA PREVIA");
            ventana.setVisible(true);

        } catch (JRException ex) {
            Logger.getLogger(procesos_produccion.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(procesos_produccion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }




}
