/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import programas.ver_conex;

/**
 *
 * @author Eduardo
 */
public class recetas extends javax.swing.JFrame {
ver_conex conn = new ver_conex();
    //publicamos el cursor
    javax.swing.table.DefaultTableModel cursor;
    /**
     * Creates new form recetas
     */
    public recetas() {
        initComponents();
        cursor = (javax.swing.table.DefaultTableModel) grilla.getModel();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtcodigo = new javax.swing.JTextField();
        lcodigo2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lfecha = new javax.swing.JLabel();
        hora = new javax.swing.JLabel();
        descripcion = new javax.swing.JTextField();
        lcodigo3 = new javax.swing.JLabel();
        txtmercacod = new javax.swing.JTextField();
        txtdescri = new javax.swing.JTextField();
        unidesc = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtcantidad = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        grilla = new javax.swing.JTable();
        beditar = new javax.swing.JButton();
        bborrar = new javax.swing.JButton();
        bagregar = new javax.swing.JButton();
        bsalir = new javax.swing.JButton();
        bcancelar = new javax.swing.JButton();
        bgrabar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel7.setText("Registrar Recetas");

        txtcodigo.setEnabled(false);
        txtcodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcodigoActionPerformed(evt);
            }
        });

        lcodigo2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lcodigo2.setText("Codigo :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Fecha:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Hora :");

        lfecha.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lfecha.setText("Fechasistema");

        hora.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        hora.setText("Hora sistema");

        descripcion.setEnabled(false);
        descripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descripcionActionPerformed(evt);
            }
        });

        lcodigo3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lcodigo3.setText("Descripcion:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lcodigo3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lcodigo2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lfecha)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(hora)
                        .addContainerGap(74, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lcodigo2)
                            .addComponent(txtcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lcodigo3)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(lfecha)
                            .addComponent(jLabel5)
                            .addComponent(hora))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        txtmercacod.setEnabled(false);
        txtmercacod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmercacodActionPerformed(evt);
            }
        });
        txtmercacod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtmercacodKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtmercacodKeyTyped(evt);
            }
        });

        txtdescri.setEnabled(false);
        txtdescri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdescriActionPerformed(evt);
            }
        });

        unidesc.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        unidesc.setText("Unid/Med");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Cantidad :");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Unid/Med");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Producto:");

        txtcantidad.setEnabled(false);
        txtcantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcantidadActionPerformed(evt);
            }
        });
        txtcantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcantidadKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcantidadKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("********Descripcion*******");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setText("Carga de Materia prima e Insumos");

        grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Descripcion", "Unidad_Medida", "Cantidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grilla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grillaMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(grilla);

        beditar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        beditar.setText("Editar");
        beditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beditarActionPerformed(evt);
            }
        });

        bborrar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bborrar.setText("Borrar item");
        bborrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bborrarActionPerformed(evt);
            }
        });

        bagregar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bagregar.setText("Nuevo");
        bagregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bagregarActionPerformed(evt);
            }
        });

        bsalir.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bsalir.setText("Salir");
        bsalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsalirActionPerformed(evt);
            }
        });

        bcancelar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bcancelar.setText("Cancelar");
        bcancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bcancelarActionPerformed(evt);
            }
        });

        bgrabar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bgrabar.setText("Grabar");
        bgrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bgrabarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtmercacod)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtdescri, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(unidesc)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtcantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30))
                            .addComponent(jScrollPane3)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(209, 209, 209)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(bborrar)
                                .addGap(127, 127, 127)
                                .addComponent(bagregar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(beditar)
                                .addGap(18, 18, 18)
                                .addComponent(bgrabar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bcancelar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bsalir)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtmercacod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtdescri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtcantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(unidesc)
                    .addComponent(jLabel9)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bborrar)
                    .addComponent(bagregar)
                    .addComponent(beditar)
                    .addComponent(bgrabar)
                    .addComponent(bcancelar)
                    .addComponent(bsalir))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtcodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcodigoActionPerformed
        // TODO add your handling code here:
        // busca_detalle();
        //  baprobar.setVisible(true);
//        if (txtcodsucursal.getText().equals("1")) {
//            //  baprobar.setVisible(true);
//            //baprobar.setEnabled(true);
//            buscarfactura();
//            beditar.setEnabled(true);
//            bgrabar.setEnabled(false);
//
//            txtcantidad.setEnabled(false);
//            txtmercacod.setEnabled(true);
//            txtmercacod.requestFocus();
//            txtcodigo.setEnabled(false);
//        }else{
//            buscarfactura();
//            // baprobar.setVisible(false);
//            //  baprobar.setEnabled(false);
//            beditar.setEnabled(true);
//            bgrabar.setEnabled(false);
//
//            txtcantidad.setEnabled(false);
//            txtmercacod.setEnabled(true);
//            txtmercacod.requestFocus();
//            txtcodigo.setEnabled(false);
//        }
//
//        // sucursales();
//
//        ///baprobar.setEnabled(true);

    }//GEN-LAST:event_txtcodigoActionPerformed

    private void txtmercacodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmercacodActionPerformed
        // TODO add your handling code here:
         buscar_cod();
        txtdescri.setEnabled(true);
        txtdescri.requestFocus();

    }//GEN-LAST:event_txtmercacodActionPerformed

    private void txtmercacodKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmercacodKeyPressed
        // TODO add your handling code here:
        if (txtmercacod.getText().equals("") && evt.getKeyChar() == KeyEvent.VK_ENTER) {// presiona F12
            new bus_art(null, true).setVisible(true);// llama al buscador

            if (bus_art.vdes.isEmpty())//no trae nada
            {
                return;
            } else // trae datos
            {
                txtmercacod.setText(bus_art.vcod);
                txtdescri.setText((bus_art.vdes));
                //txtprecio.setText(bus_art.vprecio);
                txtcantidad.requestFocus();

            }
        }//fin F12

        if (evt.getKeyCode() == 35) { // presiona TECLA FIN
            bgrabar.setEnabled(true);
            bgrabar.requestFocus();
        }
        //                  if (txtmerca.getText().equals("") && evt.getKeyChar() == KeyEvent.VK_ENTER)//no trae nada

        //            //            JTextField[] tfParam = new JTextField[2];
        //            //            tfParam[0] = this.txtmerca;
        //            //            tfParam[1] = this.txtdescri;
        //            //            VentanaBuscar buscador = new VentanaBuscar("select mer_cod,mer_nom from mercaderia where mer_nom like  ", new String[]{"CODIGO marca", "NOMBRE marca"}, 2, tfParam);
        //            //            buscador.setTitle("Buscar Merca");
        //            //            buscador.setVisible(true);
        //            //    }
        //        if (txtmercacod.getText().equals("") && evt.getKeyChar() == KeyEvent.VK_ENTER)//no trae nada
        //        {
            //            JTextField[] tfParam = new JTextField[2];
            //            tfParam[0] = this.txtmercacod;
            //            tfParam[1] = this.txtdescri;
            //
            //            ventanabuscador buscador = new ventanabuscador("select mer_cod,mer_nom from mercaderia where mer_nom like  ", new String[]{"CODIGO mercaderia", "NOMBRE mercaderia"}, 2, tfParam);
            //            buscador.setTitle("Buscar mercaderia");
            //           // combodeposito.requestFocus();
            //           // combo_deposito();
            //            buscador.setVisible(true);
            //            //buscador.setFocusCycleRoot(rootPaneCheckingEnabled);
            //             // this.setLocationRelativeTo(null);
            //
            //           // txtmercacod.requestFocus();
            //        }
    }//GEN-LAST:event_txtmercacodKeyPressed

    private void txtmercacodKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmercacodKeyTyped
        // TODO add your handling code here:
        char caracter = evt.getKeyChar();
        if (((caracter < '0')
            || (caracter > '9'))
        && (caracter != evt.VK_BACK_SPACE)) {
        evt.consume();
        }
    }//GEN-LAST:event_txtmercacodKeyTyped

    private void txtdescriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdescriActionPerformed
        // TODO add your handling code here:
         buscarunidad();
        txtcantidad.requestFocus();
        txtcantidad.setEnabled(true);
        
    }//GEN-LAST:event_txtdescriActionPerformed

    private void txtcantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcantidadActionPerformed
        // TODO add your handling code here:
        try {
            String cant;
            cant = txtcantidad.getText();
            int multnum = 0;
            multnum = Integer.parseInt(cant);
            if (multnum <= 0) {
                JOptionPane.showMessageDialog(null, "TIENE QUE SER UN N° POSITIVO Y UN NUMERO MAYOR A CERO ");
                txtcantidad.requestFocus();
            } else {

                //this.bañadir.setEnabled(true);
                tirar_grillas();
                txtmercacod.requestFocus();
            }
        } catch (Exception e) {
            getToolkit().beep();
        }

    }//GEN-LAST:event_txtcantidadActionPerformed

    private void txtcantidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcantidadKeyPressed
        //  TODO add your handling code here:
        //        if(evt.getKeyCode()==10){ // presiona ENTER
            //            ////verifica si ya esta cargado
            //            boolean encontro = false;
            //            // int lugar = 0;
            //
            //            for(int a=0;a<grilla.getRowCount();a++) {
                //                // Object cod    =grilla.getValueAt(a,0);
                //                if(txtmercacod.getText().equals(grilla.getValueAt(a,0).toString())) {
                    //                    //lugar = a;
                    //                    encontro = true;
                    //                    cursor.removeRow(a);
                    //                }
                //            }
            //            ////fin verificacion
            //            if (txtcantidad.getText().equals("0") &&  evt.getKeyChar() == KeyEvent.VK_ENTER) {//no trae nada
                //
                //              //  JOptionPane.showMessageDialog(null, "Ingrese un numero positivo mayor a cero", "MENSAJE", JOptionPane.ERROR_MESSAGE);
                //                this.txtcantidad.setText("");
                //                this.txtcantidad.requestFocus();
                //
                //               }
            //             if (txtcantidad.getText().equals("") && evt.getKeyChar() == KeyEvent.VK_ENTER)
            //            {
                //               JOptionPane.showMessageDialog(null, "Ingrese un numero positivo mayor a cero", "MENSAJE", JOptionPane.ERROR_MESSAGE);
                //                this.txtcantidad.setText("");
                //                this.txtcantidad.requestFocus();
                //            }
            //            else{
                //             String registro[] = new String[] {txtmercacod.getText(),txtdescri.getText(),txtcantidad.getText()};
                //             cursor.addRow(registro);
                //              txtcantidad.setEnabled(false);
                //
                //            txtdescri.setText("");
                //            txtcantidad.setText("");
                //            txtmercacod.setText("");
                //            txtmercacod.setEnabled(true);
                //            txtmercacod.requestFocus();
                //            }
            ////          //  int subtotal;
            ////      //      subtotal =  Integer.parseInt(txtcantidad.getText()) * Integer.parseInt(txtprecio.getText());
            ////
            ////            //variable
            ////       //     total = total + subtotal;
            ////
            ////            //objeto cuadro de texto
            ////          //  txttotal.setText(String.valueOf(total));
            ////
            ////            //txtletras.setText(numero.nletra(total));
            ////
            ////            /////tira a la grilla
            ////
            //////            if(iva.equals("0")) // exenta
            //////            {
                //////                String registro[] = new String[] {txtmercacod.getText(),txtdescri.getText(),txtprecio.getText(),txtcantidad.getText(),String.valueOf(subtotal),"0","0"};
                //////                cursor.addRow(registro);
                //////            }
            //////
            //////            if(iva.equals("5"))//gravada 5%
            //////            {
                //////                String registro[] = new String[] {txtmercacod.getText(),txtdescri.getText(),txtprecio.getText(),txtcantidad.getText(),"0",String.valueOf(subtotal),"0"};
                //////                cursor.addRow(registro);
                //////                totaliva5 = totaliva5 + (subtotal/21);
                //////                this.txtiva5.setText(String.valueOf(totaliva5));
                //////
                //////            }
            //////
            //////            if(iva.equals("10")) // gravada 10 %
            //////            {
                //////                String registro[] = new String[] {txtmercacod.getText(),txtdescri.getText(),txtprecio.getText(),txtcantidad.getText(),"0","0",String.valueOf(subtotal)};
                //////                cursor.addRow(registro);
                //////                totaliva10 = totaliva10 + (subtotal /11);
                //////                this.txtiva10.setText(String.valueOf(totaliva10));
                //////
                //////            }
            //////
            //////            totaliva = totaliva5 + totaliva10;
            //////            this.txtivatot.setText(String.valueOf(totaliva));
            //////
            //////            /////
            //////            limpiartextgrilla();
            //////            txtcantidad.setEnabled(false);
            //////            txtmercacod.setEnabled(true);
            //////            txtmercacod.requestFocus();
            //// }
    }//GEN-LAST:event_txtcantidadKeyPressed

    private void txtcantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcantidadKeyTyped
        // TODO add your handling code here:

        char caracter = evt.getKeyChar();
        if (((caracter < '0')
            || (caracter > '9'))
        && (caracter != evt.VK_BACK_SPACE)) {
        evt.consume();
        }
    }//GEN-LAST:event_txtcantidadKeyTyped

    private void grillaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grillaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_grillaMouseClicked

    private void beditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beditarActionPerformed
        // TODO add your handling code here:
    //    anular();
        des_botones();
        borrar_text();
        hab_botones();
        limpiargrilla();
        //        bandera="borrar";
        //        des_botones();
        //        txtcodigo.setEnabled(true);
        //        txtcodigo.requestFocus();
        //        txtcodigo.setEnabled(true);
        //        txtcodigo.requestFocus();
    }//GEN-LAST:event_beditarActionPerformed

    private void bborrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bborrarActionPerformed
        // TODO add your handling code here:
        //        cursor.removeRow(grilla.getSelectedRow());
        cursor.removeRow(grilla.getSelectedRow());
        this.bborrar.setEnabled(false);
        txtmercacod.requestFocus();
        //        caltotales();
    }//GEN-LAST:event_bborrarActionPerformed

    private void bagregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bagregarActionPerformed
            gencod();
            hab_text();
            des_botones();
    }//GEN-LAST:event_bagregarActionPerformed

    private void bsalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsalirActionPerformed
        // TODO add your handling code here:
        //salir();
        dispose();
    }//GEN-LAST:event_bsalirActionPerformed

    private void bcancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bcancelarActionPerformed
        // TODO add your handling code here:
        limpiargrilla();
        this.txtcodigo.setEnabled(false);
        borrar_text();

        hab_botones();
        beditar.setEnabled(false);
        des_text();
        //combodeposito.removeAllItems();

        //        txtcodigo.setEnabled(false);
        //        txtclinom.setEnabled(false);
        //        txtclinom.setText("");
        // hab_botones();
        //  txtiva5.setText("0");
        //        txtiva10.setText("0");
        //   des_text();
    }//GEN-LAST:event_bcancelarActionPerformed

    private void bgrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bgrabarActionPerformed
        // TODO add your handling code here:
        grabar();
        borrar_text();
        //        limpiartextgrilla();
        limpiargrilla();
        /// bcancelar.doClick();
    }//GEN-LAST:event_bgrabarActionPerformed

    private void descripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descripcionActionPerformed
        // TODO add your handling code here:
        txtmercacod.setEnabled(true);        
        txtmercacod.requestFocus();
        
    }//GEN-LAST:event_descripcionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(recetas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(recetas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(recetas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(recetas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new recetas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bagregar;
    private javax.swing.JButton bborrar;
    private javax.swing.JButton bcancelar;
    private javax.swing.JButton beditar;
    private javax.swing.JButton bgrabar;
    private javax.swing.JButton bsalir;
    private javax.swing.JTextField descripcion;
    private javax.swing.JTable grilla;
    private javax.swing.JLabel hora;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lcodigo2;
    private javax.swing.JLabel lcodigo3;
    private javax.swing.JLabel lfecha;
    private javax.swing.JTextField txtcantidad;
    private javax.swing.JTextField txtcodigo;
    private javax.swing.JTextField txtdescri;
    private javax.swing.JTextField txtmercacod;
    private javax.swing.JLabel unidesc;
    // End of variables declaration//GEN-END:variables
 private void hab_text() {
        descripcion.setEnabled(true);
        txtmercacod.requestFocus();
    }

    private void des_text() {
        txtcodigo.setEnabled(false);
     //   txtprocod.setEnabled(false);
    //    depcod.setEnabled(false);
       // fecha.setEnabled(false);
        txtmercacod.setEnabled(false);
     //   txtprodescri.setEnabled(false);
        txtcantidad.setEnabled(false);
    //    fecha.setEnabled(false);
        txtdescri.setEnabled(false);
    }

    private void borrar_text() {

        txtcodigo.setText("");
    //    txtprocod.setText("");
        //combodeposito.removeAllItems();
        // txtcodper.setText("");
      //  fecha.setText("");
        txtmercacod.setText("");
        txtdescri.setText("");
        txtcantidad.setText("");
       // fecha.setText("");
      //txtprodescri.setText("");
        //txtcodsucursal.setText("");
        //txtsucurdescri.setText("");

    }

    private void des_botones() //metodo para deshabilitar botones
    {
        bagregar.setEnabled(false);
  //      bmercaderia.setEnabled(false);
  //      bproveedor.setEnabled(false);
        bgrabar.setEnabled(true);
        bsalir.setEnabled(false);
        bcancelar.setEnabled(true);
        beditar.setEnabled(false);
       // baprobar.setEnabled(false);
    }

    private void hab_botones() // metodo para hab botones
    {
        bagregar.setEnabled(true);
   //     bmercaderia.setEnabled(false);
   //     bproveedor.setEnabled(false);
        bgrabar.setEnabled(false);
        bsalir.setEnabled(true);
        bcancelar.setEnabled(false);
        beditar.setEnabled(false);
     //   boton.setEnabled(false);
        // baprobar.setEnabled(true);
    }

    private void gencod() {
        try {
            //       Main.inicio = "no";
            ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT IFNULL(MAX(rece_cod),0)+ 1 AS xxx FROM cabecera_recet");
            conn.resultado.next();
            this.txtcodigo.setText(conn.resultado.getString("xxx"));
        } catch (SQLException ex) {
            Logger.getLogger(recetas.class.getName()).log(Level.SEVERE, null, ex);
            //   } catch (SQLException ex)
            {
                Logger.getLogger(recetas.class.getName()).log(Level.SEVERE, null, ex);
            }



        }
    }
     private void tirar_grillas() {
        try {
            //ver_conexion co= new ver_conexion();
            //  co.sentencia= co.conexion.createStatement();
//int grilla2= t.getRowCount();

            //  if(grilla2==0)
            //{

            //  do{
            // c++;
            DefaultTableModel dt;
            dt = (DefaultTableModel) grilla.getModel();
            String campos[] = new String[]{txtmercacod.getText(), jLabel2.getText(), unidesc.getText(),txtcantidad.getText()};
            // dt.addRow(new campos[]{String.valueOf(c),tcodinsumo.getText(), insumo.getText(), canti.getText()};

            dt.addRow(campos);

            //// }while(conn.resultado.next());

            //            }
//                else{
//                    comparacion();
//                }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e, "Aviso", JOptionPane.INFORMATION_MESSAGE);
        }
        // bgrabar.setEnabled(true);
        txtdescri.setText("");
        txtcantidad.setText("");
        txtmercacod.setText("");
        txtmercacod.setEnabled(true);
        txtmercacod.requestFocus();
    }
      private void limpiargrilla() {
        for (int i = grilla.getRowCount() - 1; i >= 0; i--) {
            cursor.removeRow(i);
        }
    }
      private void grabar()
  {
         int res = javax.swing.JOptionPane.showOptionDialog(this,
        "Desea grabar la Factura?","Demosystem",javax.swing.JOptionPane.OK_CANCEL_OPTION,
        javax.swing.JOptionPane.QUESTION_MESSAGE,null,
        new Object[] { "Si", "No"},"Si");
        if (res == javax.swing.JOptionPane.OK_OPTION)
        {
          try
          {
         
             ver_conex conn1 = new ver_conex();
                conn1.sentencia = conn1.conexion.createStatement();
                //conn1.sentencia.executeUpdate("insert into cabecera_pedidos(pedi_cod,func_cod,provee_cod,fecha,ped_est,suc_cod,dep_cod)values("+txtcodigo.getText()+","+txtcodper.getText()+","+txtprocod.getText()+",'"+fech+"','Pendiente',"+txtcodsucursal.getText()+","+depcod.getText()+")");

            //graba en el detalle
            for(int fila=0;fila < grilla.getRowCount();fila++)
            {
                conn.sentencia.executeUpdate("insert into detalle_recetas(prd_cod,rece_cod,unid_cod,cantidad)values("+grilla.getValueAt(fila,0)+","+txtcodigo.getText()+","+grilla.getValueAt(fila,2)+","+grilla.getValueAt(fila,3)+")");
                 }//fin grabacion en detalle

                JOptionPane.showMessageDialog(null, "el Receta Ha sido Grabado satisfactoriamente.", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                //   genreporte2();
            } catch (Exception ex) {
                Logger.getLogger(recetas.class.getName()).log(Level.SEVERE, null, ex);
                //dispose();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Operacion Cancelada", "Atencion", JOptionPane.ERROR_MESSAGE);
        }
    }//fin grabar
      private void buscar_cod() {
        try {
            ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("select * from producto where prd_cod=" + this.txtmercacod.getText());

            if (conn.resultado.next())//si encontro
            {
                this.jLabel2.setText(conn.resultado.getString("prd_nom"));
                // this.txtcantidad.setText(conn.resultado.getString("p"));

                //    iva = conn.resultado.getString("mer_iva");

                this.txtmercacod.setEnabled(false);
                this.txtcantidad.setEnabled(true);
                this.txtcantidad.requestFocus();
            } else//no encontro
            {
                JOptionPane.showMessageDialog(null, "CODIGO DE PRODUCTO NO EXISTE", "MENSAJE",
                        JOptionPane.INFORMATION_MESSAGE);
            }

        } catch (SQLException exceptionSql) {
            JOptionPane.showMessageDialog(null, exceptionSql.getMessage(), "Error de Conexion con la Base de Datos", JOptionPane.ERROR_MESSAGE);
            System.exit(0);
        }
    }
      private void buscarunidad()
    {
        try {
             ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT * FROM unidad_medida WHERE unid_cod = "+txtdescri.getText());
            boolean encontro = conn.resultado.next();

            if(encontro == true)
            {
                unidesc.setText(conn.resultado.getString("unid_desc"));
                 //lapellido.setText(conn.resultado.getString("func_ape"));
            }
            else // no encontro
            {
              JOptionPane.showMessageDialog(null, "No existe un registro con este codigo!", "Atencion", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException ex) {
           // Logger.getLogger(grupos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

}
