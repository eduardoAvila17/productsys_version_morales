/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * nota_credito.java
 *
 * Created on 14-oct-2015, 21:49:06
 */

package formularios;



import java.net.URL;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import programas.ver_conex;
import programas.numero;

/**
 *
 * @author CLAU
 */
public class nota_credito extends javax.swing.JFrame {

    /** Creates new form nota_credito */
      ver_conex conn = new ver_conex();
  javax.swing.table.DefaultTableModel cursor;

  String operacion="";
  String op="";
    public nota_credito() {
        initComponents();
         this.setLocationRelativeTo(null);

         t_cod_personal.setText(acceso.usucod);//codigo de sucursal
         t_nombre.setText(acceso.usunom);    //nombre de usuario
        txtsucursal.setText(acceso.ususucur);
        sucurdesc.setText(acceso.sucurdescri);
        // t_apellido.setText(acceso.usuapell);  //apellido de usuario

     cursor = (javax.swing.table.DefaultTableModel)grilla.getModel();
//     this.anular_devolucion.setVisible(false);
//     this.anular_descuento.setVisible(false);
        

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtsucursal = new javax.swing.JLabel();
        t_nombre = new javax.swing.JLabel();
        t_cod_personal = new javax.swing.JTextField();
        t_numero_nota = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        sucurdesc = new javax.swing.JLabel();
        cifras_letras = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        totaliva = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        texenta = new javax.swing.JTextField();
        Total = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        tiva10 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        tiva5 = new javax.swing.JTextField();
        b_nuevo = new javax.swing.JButton();
        b_cancelar = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        t_fecha = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        t_cod_proveedor = new javax.swing.JTextField();
        t_dir_proveedor = new javax.swing.JTextField();
        t_tel_proveedor = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        t_proveedor = new javax.swing.JTextField();
        b_grabar = new javax.swing.JButton();
        b_anular = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        grilla = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        b_salir = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jr_devolucion = new javax.swing.JRadioButton();
        jr_descuento = new javax.swing.JRadioButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        t_numero_compras = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        saldo = new javax.swing.JTextField();
        total_real = new javax.swing.JTextField();
        b_borrar_items = new javax.swing.JButton();
        tcuota = new javax.swing.JTextField();
        tintervalo = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Datos"));

        jLabel1.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N
        jLabel1.setText("NÂ°:");

        jLabel5.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N
        jLabel5.setText("PERSONAL");

        txtsucursal.setBackground(new java.awt.Color(255, 255, 255));
        txtsucursal.setFont(new java.awt.Font("Cambria", 3, 14)); // NOI18N
        txtsucursal.setText("Sucurcod");

        t_nombre.setBackground(new java.awt.Color(255, 255, 255));
        t_nombre.setFont(new java.awt.Font("Cambria", 3, 14)); // NOI18N
        t_nombre.setText("nombre");

        t_cod_personal.setEnabled(false);

        t_numero_nota.setEnabled(false);
        t_numero_nota.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t_numero_notaMouseClicked(evt);
            }
        });
        t_numero_nota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_numero_notaActionPerformed(evt);
            }
        });
        t_numero_nota.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_numero_notaKeyPressed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel22.setText("* F12 (Buscador)");

        sucurdesc.setBackground(new java.awt.Color(255, 255, 255));
        sucurdesc.setFont(new java.awt.Font("Cambria", 3, 14)); // NOI18N
        sucurdesc.setText("Sucurdesc");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(t_numero_nota, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 308, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(t_cod_personal, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(t_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtsucursal, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sucurdesc, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(t_numero_nota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)
                    .addComponent(jLabel5)
                    .addComponent(t_cod_personal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtsucursal)
                    .addComponent(t_nombre)
                    .addComponent(sucurdesc))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        cifras_letras.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        cifras_letras.setText("total en letras ");
        cifras_letras.setEnabled(false);
        cifras_letras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cifras_letrasActionPerformed(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N
        jLabel24.setText("TOTAL EXENTA:");

        totaliva.setEnabled(false);

        jLabel23.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N
        jLabel23.setText("TOTAL IVA:");

        texenta.setEnabled(false);

        Total.setEnabled(false);

        jLabel20.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N
        jLabel20.setText("TOTAL:");

        tiva10.setEnabled(false);

        jLabel13.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N
        jLabel13.setText("TOTAL IVA  10%:");

        tiva5.setEnabled(false);

        b_nuevo.setText("NUEVO");
        b_nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_nuevoActionPerformed(evt);
            }
        });

        b_cancelar.setText("CANCELAR");
        b_cancelar.setEnabled(false);
        b_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cancelarActionPerformed(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Datos de proveedor"));

        jLabel15.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N
        jLabel15.setText("FECHA");

        t_fecha.setEnabled(false);

        jLabel17.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N
        jLabel17.setText("PROVEEDOR:");

        t_cod_proveedor.setEnabled(false);

        t_dir_proveedor.setEnabled(false);

        t_tel_proveedor.setEnabled(false);

        jLabel18.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N
        jLabel18.setText("TELEFONO:");

        jLabel19.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N
        jLabel19.setText("DIRECCION:");

        t_proveedor.setEnabled(false);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19)
                    .addComponent(jLabel15))
                .addGap(42, 42, 42)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(t_fecha)
                    .addComponent(t_dir_proveedor)
                    .addComponent(t_tel_proveedor)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(t_cod_proveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_proveedor)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(t_cod_proveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_proveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t_tel_proveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t_dir_proveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        b_grabar.setText("GRABAR");
        b_grabar.setEnabled(false);
        b_grabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_grabarActionPerformed(evt);
            }
        });

        b_anular.setText("ANULAR");
        b_anular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_anularActionPerformed(evt);
            }
        });
        b_anular.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                b_anularKeyPressed(evt);
            }
        });

        grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Producto", "Cod", "Marca", "Deposito", "Cantidad", "Precio", "Grav5%", "Grav10%", "excenta"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grilla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grillaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(grilla);

        jLabel16.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText(" NOTA DE CREDITO COMPRAS");
        jLabel16.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel12.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N
        jLabel12.setText("TOTAL IVA 5%:");

        b_salir.setText("SALIR");
        b_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_salirActionPerformed(evt);
            }
        });

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Operacion a realizar"));

        jr_devolucion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jr_devolucion.setText("Devolucion");
        jr_devolucion.setEnabled(false);
        jr_devolucion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jr_devolucionActionPerformed(evt);
            }
        });

        jr_descuento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jr_descuento.setText("Descuento");
        jr_descuento.setEnabled(false);
        jr_descuento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jr_descuentoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addComponent(jr_devolucion)
                .addGap(40, 40, 40)
                .addComponent(jr_descuento)
                .addGap(111, 111, 111))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jr_devolucion)
                    .addComponent(jr_descuento))
                .addContainerGap(14, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Buscador de compras"));

        jLabel21.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N
        jLabel21.setText("NÂº de compras:");

        t_numero_compras.setEnabled(false);
        t_numero_compras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_numero_comprasActionPerformed(evt);
            }
        });
        t_numero_compras.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_numero_comprasKeyPressed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel25.setText("* F12 (Buscador)");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel21)
                .addGap(18, 18, 18)
                .addComponent(t_numero_compras, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel25)
                .addGap(28, 28, 28))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jLabel25)
                    .addComponent(t_numero_compras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Por descuento"));

        jLabel11.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N
        jLabel11.setText("Total saldo               =            Diferencia de monto");

        saldo.setEnabled(false);
        saldo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saldoActionPerformed(evt);
            }
        });

        total_real.setEnabled(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(saldo, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(total_real, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel11)))
                .addGap(26, 26, 26))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(total_real, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        b_borrar_items.setText("BORRAR ITEMS");
        b_borrar_items.setEnabled(false);
        b_borrar_items.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_borrar_itemsActionPerformed(evt);
            }
        });

        tcuota.setText("Cuota");
        tcuota.setEnabled(false);

        tintervalo.setText("Intervalo");
        tintervalo.setEnabled(false);
        tintervalo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tintervaloActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(48, 48, 48)
                                        .addComponent(tcuota, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(41, 41, 41)
                                        .addComponent(tintervalo, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(45, 45, 45)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel12)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(tiva5, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel13)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(tiva10, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel24)
                                            .addComponent(jLabel23))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(texenta, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                                            .addComponent(totaliva)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel20)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(Total, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(b_borrar_items)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(jScrollPane1))
                                            .addComponent(cifras_letras, javax.swing.GroupLayout.PREFERRED_SIZE, 561, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(305, 305, 305)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(290, 290, 290)
                        .addComponent(b_nuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(b_anular, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(b_grabar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(b_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(b_salir, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(b_borrar_items, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tiva5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(texenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tintervalo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tcuota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(tiva10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totaliva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addComponent(jLabel20)
                    .addComponent(Total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cifras_letras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(b_salir)
                        .addComponent(b_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(b_grabar))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(b_nuevo)
                        .addComponent(b_anular)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void t_numero_notaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t_numero_notaMouseClicked
        // TODO add your handling code here:
}//GEN-LAST:event_t_numero_notaMouseClicked

    private void t_numero_notaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_numero_notaActionPerformed
//       //
//
//        if(operacion.equals("reponer")){
////           buscar_detalle_nota();
//             buscar_detalle_nota();
//
//             //buscar de devolucion
//        }
//
//        if(operacion.equals("anular")){
//         //           buscar_detalle_nota();
             buscar_detalle_nota();
//             //buscar devolucion y descuento tipo de nota
//
//
//        }




    }//GEN-LAST:event_t_numero_notaActionPerformed

    private void t_numero_notaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_numero_notaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode()==123)

        {
            if(operacion.equals("anular")){
             JTextField[] tfParam = new JTextField[7];
            tfParam[0] = this.t_numero_nota;
            tfParam[1] = this.t_numero_compras;
            tfParam[2] = this.t_fecha;
            tfParam[3] = this.t_cod_proveedor;
            tfParam[4] = this.t_proveedor;
            tfParam[5] = this.t_tel_proveedor;
            tfParam[6] = this.Total;
           // tfParam[7] = this.Total;

           ventanabuscador pp = new ventanabuscador("    SELECT cabecera_snc.snc_cod,cabecera_reg_fact.rg_fac_cod,cabecera_snc.fecha,proveedor.provee_cod,provee_nom,provee_tel,\n" +
"    cabecera_snc.total FROM cabecera_snc,cabecera_reg_fact,proveedor,cabecera_oc WHERE \n" +
"    cabecera_reg_fact.provee_cod=proveedor.provee_cod  AND cabecera_snc.fecha like  ", new String[]{"NUMERO", "NÂº COMPRAS","FECHA","CODIGO","PROVEEDOR","TELEFONO","TOTAL"}, 7, tfParam);
                    pp.setTitle("BUSCADOR DE SOLICITUDES");
                    pp.setVisible(true);

         } 

            if(operacion.equals("reponer")){

           JTextField[] tfParam = new JTextField[8];
            tfParam[0] = this.t_numero_nota;
            tfParam[1] = this.t_numero_compras;
            tfParam[2] = this.t_fecha;
            tfParam[3] = this.t_cod_proveedor;
            tfParam[4] = this.t_proveedor;
            tfParam[5] = this.t_tel_proveedor;
            tfParam[6] = this.t_dir_proveedor;
            tfParam[7] = this.Total;
            

            ventanabuscador pp = new ventanabuscador("SELECT reg_notacredi.reg_nro,compra.comp_nro,reg_notacredi.reg_fecha,\n" +
"proveedor.prov_cod,razon_soc,prov_tel,prov_dir,reg_notacredi.det_total FROM reg_notacredi,compra,proveedor,det_regnotc,\n" +
"orden_compra WHERE orden_compra.prov_cod=proveedor.prov_cod AND det_regnotc.reg_nro=reg_notacredi.reg_nro AND \n" +
"reg_notacredi.comp_nro=compra.comp_nro AND reg_notacredi.op_nota='Devolucion' AND reg_estado='P' and "
                    + "reg_notacredi.reg_fecha like  ", new String[]{"NUMERO", "NÂº COMPRAS","FECHA","CODIGO","PROVEEDOR","TELEFONO","DIRECCION","TOTAL"},8,tfParam);
            pp.setTitle("BUSCADOR DE NOTAS PENDIENTES - DEVOLUCION");
            pp.setVisible(true);

            }

        }
        t_numero_nota.setEnabled(true);
        t_numero_nota.requestFocus();
}//GEN-LAST:event_t_numero_notaKeyPressed

    private void cifras_letrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cifras_letrasActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_cifras_letrasActionPerformed

    private void b_nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_nuevoActionPerformed
        operacion = "nuevo";
        gencodigo();
        des_botones();
        hab_text();
        mostrar_fecha();
}//GEN-LAST:event_b_nuevoActionPerformed

    private void b_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cancelarActionPerformed

        hab_botones();
        des_text();
        clear_text();
        total=0;
       
       
//        this.t_numero_ordenes.setEnabled(false);
    }//GEN-LAST:event_b_cancelarActionPerformed

    private void b_grabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_grabarActionPerformed
//
        validarGrilla();
        limpiar_grilla();
        hab_botones();
        des_text();
        clear_text();
    this.t_numero_nota.setEnabled(false);
    }//GEN-LAST:event_b_grabarActionPerformed

    private void b_anularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_anularActionPerformed

        operacion="anular";
        des_botones();
     

         this.t_numero_nota.setEnabled(true);
        this.t_numero_nota.requestFocus();
JOptionPane.showMessageDialog(null, " Presione F12 para buscar lo que desea anular", "AVISO", JOptionPane.ERROR_MESSAGE);


}//GEN-LAST:event_b_anularActionPerformed








    private void b_anularKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_b_anularKeyPressed
        // TODO add your handling code here:
}//GEN-LAST:event_b_anularKeyPressed

    private void grillaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grillaMouseClicked
this.b_borrar_items.setEnabled(true);
}//GEN-LAST:event_grillaMouseClicked

    private void b_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_salirActionPerformed
        int mensaje = JOptionPane.showConfirmDialog(this, "Â¿DESEA SALIR?", "SALIDA DE LA VENTANA", JOptionPane.YES_NO_OPTION);
        if (mensaje == JOptionPane.YES_OPTION) {
            dispose();
        }
}//GEN-LAST:event_b_salirActionPerformed

    private void jr_devolucionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jr_devolucionActionPerformed
 op="jrdevolucion";
        jr_descuento.setSelected(false);
        this.t_numero_compras.setEnabled(true);
        this.t_numero_compras.requestFocus();
    }//GEN-LAST:event_jr_devolucionActionPerformed

    private void jr_descuentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jr_descuentoActionPerformed

        op="jrdescuento";
        jr_devolucion.setSelected(false);
        this.t_numero_compras.setEnabled(true);
        this.t_numero_compras.requestFocus();


    }//GEN-LAST:event_jr_descuentoActionPerformed

    private void t_numero_comprasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_numero_comprasActionPerformed
if(t_numero_compras.getText().equals("")){ 
   JOptionPane.showMessageDialog(this, "CAMPO VACIO \n INGRESE VALOR PARA BUSCAR");
} else{ 
       buscar_detalle_compra();
}
     

    }//GEN-LAST:event_t_numero_comprasActionPerformed

    private void b_borrar_itemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_borrar_itemsActionPerformed
        cursor.removeRow(grilla.getSelectedRow());
        this.b_borrar_items.setEnabled(false);
    }//GEN-LAST:event_b_borrar_itemsActionPerformed

    private void saldoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saldoActionPerformed
      igualdad();
    }//GEN-LAST:event_saldoActionPerformed

    private void t_numero_comprasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_numero_comprasKeyPressed

        if(evt.getKeyCode()==123) {
            try {
                ver_conex conn = new ver_conex();
                conn.sentencia = conn.conexion.createStatement();
                conn.resultado = conn.sentencia.executeQuery("SELECT * FROM cabecera_reg_fact");
                boolean encontro = conn.resultado.next();
                if(encontro==true){
                    JTextField[] tfParam = new JTextField[6];
                    tfParam[0] = this.t_numero_compras;
                    tfParam[1] = this.t_fecha;
                    tfParam[2] = this.t_cod_proveedor;
                    tfParam[3] = this.t_proveedor;
                    tfParam[4] = this.t_tel_proveedor;
                    tfParam[5] = this.Total;


                    //tfParam[2] = this.apellido;

                    ventanabuscador pp = new ventanabuscador("SELECT cabecera_reg_fact.rg_fac_cod,cabecera_reg_fact.fecha,"
                            + "proveedor.provee_cod,provee_nom,provee_tel,cabecera_oc.montotal FROM cabecera_reg_fact,"
                            + "proveedor,cabecera_oc WHERE cabecera_reg_fact.estado='PENDIENTE' AND "
                            + "cabecera_oc.provee_cod=proveedor.provee_cod AND cabecera_reg_fact.oc_cod=cabecera_oc.oc_cod and "
                            + "cabecera_reg_fact.fecha like  ", new String[]{"NUMERO","FECHA","CODIGO","RAZON SOCIAL","TELEFONO","TOTAL",},6, tfParam);
                    pp.setTitle("BUSCADOR DE COMPRA");
                    pp.setVisible(true);
                    if (evt.getKeyCode() ==10)//TECLA FIN
                    {
                        t_numero_compras.setEnabled(false);
                        //tprocanti.setText("");
                        total_real.setEnabled(true);
                        total_real.requestFocus();

                    }
                }else{
                    JOptionPane.showMessageDialog(this, "NO EXISTE NINGUN \n REGISTRADO");

                }
            } catch (SQLException ex) {
            }
}//fin

    }//GEN-LAST:event_t_numero_comprasKeyPressed

    private void tintervaloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tintervaloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tintervaloActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new nota_credito().setVisible(true);
            }
        });
    }
public String condicion = "";
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Total;
    private javax.swing.JButton b_anular;
    private javax.swing.JButton b_borrar_items;
    private javax.swing.JButton b_cancelar;
    private javax.swing.JButton b_grabar;
    private javax.swing.JButton b_nuevo;
    private javax.swing.JButton b_salir;
    private javax.swing.JTextField cifras_letras;
    private javax.swing.JTable grilla;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton jr_descuento;
    private javax.swing.JRadioButton jr_devolucion;
    private javax.swing.JTextField saldo;
    private javax.swing.JLabel sucurdesc;
    private javax.swing.JTextField t_cod_personal;
    private javax.swing.JTextField t_cod_proveedor;
    private javax.swing.JTextField t_dir_proveedor;
    private javax.swing.JTextField t_fecha;
    private javax.swing.JLabel t_nombre;
    private javax.swing.JTextField t_numero_compras;
    private javax.swing.JTextField t_numero_nota;
    private javax.swing.JTextField t_proveedor;
    private javax.swing.JTextField t_tel_proveedor;
    private javax.swing.JTextField tcuota;
    private javax.swing.JTextField texenta;
    private javax.swing.JTextField tintervalo;
    private javax.swing.JTextField tiva10;
    private javax.swing.JTextField tiva5;
    private javax.swing.JTextField total_real;
    private javax.swing.JTextField totaliva;
    private javax.swing.JLabel txtsucursal;
    // End of variables declaration//GEN-END:variables

   private void hab_text()
   {
    jr_descuento.setEnabled(true);
    jr_devolucion.setEnabled(true);
   }
   private void des_botones()
   {
      this.b_nuevo.setEnabled(false);
      this.b_anular.setEnabled(false);
      this.b_salir.setEnabled(false);
      this.b_cancelar.setEnabled(true);
      this.b_grabar.setEnabled(false);
      this.b_borrar_items.setEnabled(false);
      // this.b_reponer.setEnabled(false);


   }

   private void hab_botones()
   {
      this.b_nuevo.setEnabled(true);
      this.b_anular.setEnabled(true);
      this.b_salir.setEnabled(true);
      this.b_cancelar.setEnabled(false);
      this.b_grabar.setEnabled(false);
         this.b_borrar_items.setEnabled(false);
      //   this.b_reponer.setEnabled(true);
   }
private void des_text()
   {

     this.t_fecha.setEnabled(false);
     this.saldo.setEnabled(false);
     this.total_real.setEnabled(false);
     this.t_numero_compras.setEnabled(false);
     this.jr_descuento.setSelected(false);
     this.jr_devolucion.setSelected(false);



          this.jr_descuento.setEnabled(false);
     this.jr_devolucion.setEnabled(false);


   }
private void clear_text()
   {
       this.t_numero_compras.setText("");
       this.t_fecha.setText("");
       this.t_numero_nota.setText("");
       this.t_cod_proveedor.setText("");
       this.t_proveedor.setText("");
       this.t_tel_proveedor.setText("");
       this.t_dir_proveedor.setText("");
       this.saldo.setText("");
       this.total_real.setText("");
       this.totaliva.setText("");
       this.Total.setText("");
        this.texenta.setText("");
               this.tiva5.setText("");
       this.tiva10.setText("");
       this.cifras_letras.setText("Total en letras");


       limpiar_grilla();
   }
    private void limpiar_grilla() {
        DefaultTableModel dt;
        dt = (DefaultTableModel) grilla.getModel();
        while (grilla.getRowCount() > 0) {
            dt.removeRow(0);
        }
    }




private void gencodigo()
   {
        
     try {
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT IFNULL(MAX(snc_cod),0)+1 AS newcod FROM cabecera_snc");
            conn.resultado.next();
            t_numero_nota.setText(conn.resultado.getString("newcod"));
        } catch (SQLException ex) {
            Logger.getLogger(compras.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
private void mostrar_fecha() {
        try {
        ver_conex c=new ver_conex();
        c.sentencia=c.conexion.createStatement();
        c.resultado=c.sentencia.executeQuery("select date_format(current_date(),'%d/%m/%Y') as fecha");
            while (c.resultado.next()) {
             t_fecha.setText(c.resultado.getString("fecha"));
            }
            } catch (Exception ex) {
            javax.swing.JOptionPane.showMessageDialog(null, ex.getMessage());
        }
        }


private void buscar_detalle_compra(){
     try{

if(op.equals("jrdescuento")){


        conn.sentencia = conn.conexion.createStatement();
     conn.resultado = conn.sentencia.executeQuery("SELECT IFNULL(MAX(cuent_cod),0) AS newcod FROM cuentas_a_pagar,cabecera_reg_fact WHERE cuentas_a_pagar.rg_fac_cod=cabecera_reg_fact.rg_fac_cod AND \n" +
"cuentas_a_pagar.rg_fac_cod=" + t_numero_compras.getText());
     boolean encontro1 = conn.resultado.next();
     if (encontro1==true)//encontro
            {
         tcuota.setText(conn.resultado.getString("newcod"));
     } else{
         JOptionPane.showMessageDialog(this,"NO EXISTE CUENTA CON ESTA FACTURA","ATENCION",JOptionPane.INFORMATION_MESSAGE);
     }
     conn.sentencia = conn.conexion.createStatement();
     conn.resultado = conn.sentencia.executeQuery("SELECT * FROM cabecera_reg_fact cf, det_reg_fact dc, proveedor po, cabecera_oc oc WHERE cf.estado='PENDIENTE' AND dc.rg_fac_cod=cf.rg_fac_cod AND oc.provee_cod=po.provee_cod AND oc.oc_cod=cf.oc_cod AND dc.rg_fac_cod=" + t_numero_compras.getText());
     boolean encontro = conn.resultado.next();
     if (encontro==true)//encontro
            {
         if (conn.resultado.getString("estado").equals("ANULADO"))
                {
                JOptionPane.showMessageDialog(null, "La Factura ya ha sido Anulado", "Atencion", JOptionPane.ERROR_MESSAGE);
                t_numero_compras.setText("");
                t_numero_compras.requestFocus();
                dispose();
                               
                } else if (conn.resultado.getString("estado").equals("PROCESADO"))
                {
                JOptionPane.showMessageDialog(null, "Esta Factura ya ha sido Procesada", "Atencion", JOptionPane.ERROR_MESSAGE);
                t_numero_compras.setText("");
                t_numero_compras.requestFocus();
                dispose();
                               
                } else {
            
         
            t_cod_proveedor.setText(conn.resultado.getString("provee_cod"));
             t_proveedor.setText(conn.resultado.getString("provee_nom"));
              t_tel_proveedor.setText(conn.resultado.getString("provee_tel"));
               t_dir_proveedor.setText(conn.resultado.getString("provee_dir"));
                tintervalo.setText(conn.resultado.getString("intervalo"));
                tcuota.setText(conn.resultado.getString("cancuo"));

                ///mostrar datos del detalle
                ver_conex conn = new ver_conex();

                 conn.sentencia = conn.conexion.createStatement();
                 conn.resultado = conn.sentencia.executeQuery("SELECT cabecera_reg_fact.rg_fac_cod,producto.prd_cod,prd_nom,marcas.mar_cod,mar_desc,det_reg_fact.prd_costo,catidad,exenta,grava5,grava10,cabecera_reg_fact.montotal,deposito.depo_cod,depo_desc FROM cabecera_reg_fact,det_reg_fact,producto,marcas,deposito WHERE cabecera_reg_fact.rg_fac_cod=det_reg_fact.rg_fac_cod AND det_reg_fact.prd_cod=producto.prd_cod AND producto.mar_cod=marcas.mar_cod  AND cabecera_reg_fact.depo_cod=deposito.depo_cod  AND cabecera_reg_fact.rg_fac_cod= " + t_numero_compras.getText());

                 while(conn.resultado.next())
                 {
                    ////para la descricion
                   // ver_conexion conn = new ver_conexion();
                    conn.sentencia = conn.conexion.createStatement();

                        /////tira a la grilla
                        String registro[] = new String[] {conn.resultado.getString("prd_cod"),
                            conn.resultado.getString("prd_nom"),
                        conn.resultado.getString("mar_cod"),conn.resultado.getString("mar_desc"),
                        conn.resultado.getString("depo_cod"),conn.resultado.getString("catidad"),conn.resultado.getString("prd_costo"),conn.resultado.getString("grava5"),
                        conn.resultado.getString("grava10"),conn.resultado.getString("exenta")};
                        cursor.addRow(registro);

    }
     this.saldo.setEnabled(true);
     this.saldo.requestFocus();
}
       }
     else{
              JOptionPane.showMessageDialog(null, " No existe compra con este numero", "Atencion", JOptionPane.ERROR_MESSAGE);

           this.t_numero_compras.setEnabled(true);
          this.t_numero_compras.requestFocus();
     }
     }
    if(op.equals("jrdevolucion")){

     conn.sentencia = conn.conexion.createStatement();
     conn.resultado = conn.sentencia.executeQuery("SELECT * FROM cabecera_reg_fact cf, det_reg_fact df, proveedor po, cabecera_oc oc, producto pr WHERE cf.estado='PENDIENTE' AND df.rg_fac_cod=cf.rg_fac_cod AND oc.provee_cod=po.provee_cod AND oc.oc_cod=cf.oc_cod AND df.prd_cod=pr.prd_cod AND df.rg_fac_cod=" + t_numero_compras.getText());
     boolean encontro = conn.resultado.next();
     if (encontro==true)//encontro
            {
            t_cod_proveedor.setText(conn.resultado.getString("provee_cod"));
             t_proveedor.setText(conn.resultado.getString("provee_nom"));
              t_tel_proveedor.setText(conn.resultado.getString("provee_tel"));
               t_dir_proveedor.setText(conn.resultado.getString("provee_dir"));
              tintervalo.setText(conn.resultado.getString("intervalo"));
                tcuota.setText(conn.resultado.getString("cancuo"));


                ///mostrar datos del detalle
                ver_conex conn = new ver_conex();

                 conn.sentencia = conn.conexion.createStatement();
                 conn.resultado = conn.sentencia.executeQuery("SELECT cabecera_reg_fact.rg_fac_cod,producto.prd_cod,prd_nom,marcas.mar_cod,mar_desc,det_reg_fact.prd_costo,catidad,exenta,grava5,grava10,cabecera_reg_fact.montotal,deposito.depo_cod,depo_desc FROM cabecera_reg_fact,det_reg_fact,producto,marcas,deposito WHERE cabecera_reg_fact.rg_fac_cod=det_reg_fact.rg_fac_cod AND det_reg_fact.prd_cod=producto.prd_cod AND producto.mar_cod=marcas.mar_cod  AND cabecera_reg_fact.depo_cod=deposito.depo_cod  AND cabecera_reg_fact.rg_fac_cod=" + t_numero_compras.getText());

                 while(conn.resultado.next())
                 {
                    ////para la descricion
                   // ver_conexion conn = new ver_conexion();
                    conn.sentencia = conn.conexion.createStatement();

                        /////tira a la grilla
                        String registro[] = new String[] {
                            conn.resultado.getString("prd_cod"),
                            conn.resultado.getString("prd_nom"),
                            conn.resultado.getString("mar_cod"),
                            conn.resultado.getString("mar_desc"),
                            conn.resultado.getString("depo_cod"),
                            conn.resultado.getString("catidad"),
                            conn.resultado.getString("prd_costo"),
                            conn.resultado.getString("grava5"),
                            conn.resultado.getString("grava10"),
                            conn.resultado.getString("exenta")};
                        cursor.addRow(registro);

    }
     this.b_grabar.setEnabled(true);
     this.b_grabar.requestFocus();


       }
     else{
              JOptionPane.showMessageDialog(null, " No existe compra con este numero", "Atencion", JOptionPane.ERROR_MESSAGE);

           this.t_numero_compras.setEnabled(true);
          this.t_numero_compras.requestFocus();
     }

    }


    }


     catch(SQLException e){
        JOptionPane.showMessageDialog(null,e.getMessage(), "error de conexion", JOptionPane.ERROR_MESSAGE);
    }
     calcu_total();

}

public int exenta1=0,iva51=0,iva101=0;
  public int totalexenta=0,
         totaliva5 = 0,
         totaliva10 = 0,
         total=0,
          totiva=0,
          subtotal; 

    private void calcu_total()
    {


        for (int fila = 0; fila < grilla.getRowCount(); fila++) {


 String exenta,iva5,iva10,can1,pre1;

//        int re ;
int  can, pre;

//        re=t.getSelectedRow();
        exenta=(String.valueOf(this.grilla.getValueAt(fila,9 )));
        iva5=(String.valueOf(this.grilla.getValueAt(fila, 7)));
        iva10=(String.valueOf(this.grilla.getValueAt(fila, 8)));

         can1=(String.valueOf(this.grilla.getValueAt(fila, 5)));
          pre1=(String.valueOf(this.grilla.getValueAt(fila, 6)));

         exenta1 = Integer.parseInt(exenta);
         iva51= Integer.parseInt(iva5);
         iva101 = Integer.parseInt(iva10);

         can = Integer.parseInt(can1);
         pre = Integer.parseInt(pre1);
         subtotal=(can*pre);
         total=total+subtotal;


        totalexenta =totalexenta+exenta1;
        texenta.setText(String.valueOf(totalexenta));



        totaliva5 =totaliva5 +(iva51/21);
        tiva5.setText(String.valueOf(totaliva5));

        totaliva10 =totaliva10+(iva101/11);
        tiva10.setText(String.valueOf(totaliva10));

           totiva = totaliva5 + totaliva10;
            this.totaliva.setText(String.valueOf(totiva));



Total.setText(String.valueOf(total));
cifras_letras.setText(numero.nletra(total));
//  cifras_letras.setText(numero.nletra(total));//ver este


}

}
    private void igualdad() {
        if (Integer.parseInt(saldo.getText()) >= Integer.parseInt(Total.getText())) {
            JOptionPane.showMessageDialog(null, "El monto es mayor al del total, debe ser menor el saldo");
           saldo.setText("");
           saldo.requestFocus();
            //cant =  Integer.parseInt(cantidad.getText()) > Integer.parseInt(stock.getText());
        }
 else{

         int totalres = 0;
          String can,pre;
int sal = Integer.parseInt(saldo.getText());
//int tota = Integer.parseInt(total.getText());

 can=(String.valueOf(this.saldo.getText()));
 pre=(String.valueOf(this.Total.getText()));

       totalres = Integer.parseInt(Total.getText())-(sal);
       total_real.setText(String.valueOf(totalres));

       this.b_grabar.setEnabled(true);
       this.b_grabar.requestFocus();

 }

    }

private void validarGrilla()
{
    int tabla= grilla.getRowCount();

    if(tabla==0)
    {
        JOptionPane.showMessageDialog(null,"Debe aÃ±adir datos en la grilla antes de continuar","Aviso",JOptionPane.INFORMATION_MESSAGE);
        t_numero_compras.requestFocus();
    }
    else
    {
  grabar();

    }
    }



   private void grabar()
{
    try
    {
        String SQL = null;

        String f=t_fecha.getText();
String dd=f.substring(0,2);
String mm=f.substring(3,5);
String aa=f.substring(6,10);

String fech=aa+"/"+mm+"/"+dd;

DateFormat df=new SimpleDateFormat(fech);

              if(operacion.equals("nuevo"))
      {
          
      
 if(op.equals("jrdevolucion"))//snc_cod,motivo,rg_fac_cod,usu_cod,suc_cod,fecha,estado,total,totaliva
{                             //snc_cod,mot_cod,rg_fac_cod,usu_cod,suc_cod,fecha,estado
       SQL = "insert into cabecera_snc values("+t_numero_nota.getText()+","+t_cod_personal.getText()+",'Devolucion',"+t_numero_compras.getText()+","+txtsucursal.getText()+",'"+fech+"','PENDIENTE',"+Total.getText()+","+totaliva.getText()+")";

        ver_conex c= new ver_conex();
        c.sentencia= c.conexion.createStatement();
        c.sentencia.executeUpdate(SQL);

     for(int a=0;a<grilla.getRowCount();a++)//snc_cod,prd_cod,cant,prd_costo,grava5,grava10,exento
     {                                      //snc_cod,prd_cod,cant,
            SQL = "insert into detalle_snc values("+t_numero_nota.getText()+","+grilla.getValueAt(a,0)+","+grilla.getValueAt(a,5)+","+grilla.getValueAt(a,6)+","+grilla.getValueAt(a,7)+","+grilla.getValueAt(a,8)+","+grilla.getValueAt(a,9)+")";
            c.sentencia.executeUpdate(SQL);
                                                                                              

     }

      c.sentencia = c.conexion.createStatement();
      c.sentencia.executeUpdate("update cabecera_reg_fact set estado='PROCESADO' where rg_fac_cod = " + t_numero_compras.getText());
  
      for (int fila = 0; fila < grilla.getRowCount(); fila++) {
                   
                    conn.sentencia.executeUpdate("UPDATE stock SET stock_cant=stock_cant - "+ grilla.getValueAt(fila, 5)+" WHERE prd_cod="+grilla.getValueAt(fila, 0)+" AND depo_cod="+grilla.getValueAt(fila, 4));
 }

 JOptionPane.showMessageDialog(this,"Su grabacion fue exitosa","Operacion",JOptionPane.INFORMATION_MESSAGE);
genreporte();


}
 if(op.equals("jrdescuento"))
{
           
 SQL = "insert into cabecera_snc values("+t_numero_nota.getText()+","+t_cod_personal.getText()+",'Descuento',"+t_numero_compras.getText()+","+txtsucursal.getText()+",'"+fech+"','PENDIENTE',"+Total.getText()+","+totaliva.getText()+")";

         ver_conex c= new ver_conex();
        c.sentencia= c.conexion.createStatement();
        c.sentencia.executeUpdate(SQL);

     for(int a=0;a<grilla.getRowCount();a++)
     {

             SQL = "insert into detalle_snc values("+t_numero_nota.getText()+","+grilla.getValueAt(a,0)+","+grilla.getValueAt(a,5)+","+grilla.getValueAt(a,6)+","+grilla.getValueAt(a,7)+","+grilla.getValueAt(a,8)+","+grilla.getValueAt(a,9)+")";
            c.sentencia.executeUpdate(SQL);

     }
     conn.sentencia.executeUpdate("DELETE FROM cuentas_a_pagar WHERE rg_fac_cod="+t_numero_compras.getText());
     c.sentencia = c.conexion.createStatement();
       String tipo = "";
                int cuotas;
                int total1 = Integer.valueOf(total_real.getText());
                int plazo = Integer.valueOf(tintervalo.getText());
                int factura = Integer.valueOf(t_numero_compras.getText());
                if (condicion.equals("contado")) {
                    cuotas = 1;
                } else {
                    cuotas = Integer.valueOf(tcuota.getText());
                }
    String SQl=null;
//                String sqlProc = "CALL P_cuotas("+ factura + "," + cuotas + ", " + total + ", " + plazo + ")";
//                conn.sentencia.execute(sqlProc);
                conn.sentencia = conn.conexion.createStatement();
                 SQl = "CALL P_cuotas("+tcuota.getText()+","+t_numero_compras.getText()+","+total_real.getText()+","+tintervalo.getText()+",'"+fech+"')";
            conn.sentencia.executeUpdate(SQl);
          
      c.sentencia = c.conexion.createStatement();
       c.sentencia.executeUpdate("update cabecera_reg_fact set estado='PROCESADO' where rg_fac_cod = " + t_numero_compras.getText());
JOptionPane.showMessageDialog(this,"Su grabacion fue exitosa","Operacion",JOptionPane.INFORMATION_MESSAGE);  
}


  
        
        }
    }
    catch(Exception e)
    {
        JOptionPane.showMessageDialog(this,"Error"+e,"Aviso",JOptionPane.INFORMATION_MESSAGE);
    }

       if(operacion.equals("reponer")){
//    JOptionPane.showMessageDialog(null, "por reponer");

//reponer();


    }
        if(operacion.equals("anular")){

//        JOptionPane.showMessageDialog(null, "por anular");
  anular();

        }


}




   private void reponer()
{

      try {

            ver_conex c= new ver_conex();
            c.sentencia = c.conexion.createStatement();
            c.sentencia.executeUpdate("update reg_notacredi set reg_estado='Realizado' where reg_nro = " + t_numero_nota.getText());



  suma_stock();
                JOptionPane.showMessageDialog(null, "la reposicion del PRODUCTO  faltante en el stock fue exitosa.", "Confirmacion", JOptionPane.INFORMATION_MESSAGE);


            }catch (SQLException ex) {
            Logger.getLogger(nota_credito.class.getName()).log(Level.SEVERE, null, ex);
        }



}



private void restar_stock(){
     int cantida=0;
        try {
            for(int fila=0;fila < grilla.getRowCount();fila++){
               // conectar conn = new conectar();//instanciamos
                   ver_conex c= new ver_conex();
                 c.sentencia= c.conexion.createStatement();
                c.resultado = c.sentencia.executeQuery("SELECT * FROM stock WHERE prd_cod="+grilla.getValueAt(fila,0)+"and mar_cod="+grilla.getValueAt(fila,3)+" and depo_cod="+grilla.getValueAt(fila,4));

                if (c.resultado.next()){
                  cantida=c.resultado.getInt("cantidad");
                    c.sentencia.executeUpdate("UPDATE stock SET cantidad="+cantida+"-"+grilla.getValueAt(fila,5)+" WHERE prd_cod="+grilla.getValueAt(fila,0)+"and mar_cod="+grilla.getValueAt(fila,3)+" and depo_cod="+grilla.getValueAt(fila,4));
     }
            }

        } catch (SQLException ex) {

        }
    }
private void suma_stock(){
      int cantida=0;
        try {
            for(int fila=0;fila < grilla.getRowCount();fila++){
               // conectar conn = new conectar();//instanciamos
                   ver_conex c= new ver_conex();
                 c.sentencia= c.conexion.createStatement();
                c.resultado = c.sentencia.executeQuery("SELECT * FROM stock WHERE prd_cod="+grilla.getValueAt(fila,0)+"and mar_cod="+grilla.getValueAt(fila,3)+" and depo_cod="+grilla.getValueAt(fila,4));

                if (c.resultado.next()){
                  cantida=c.resultado.getInt("cantidad");
                    c.sentencia.executeUpdate("UPDATE stock SET cantidad="+cantida+"+"+grilla.getValueAt(fila,5)+" WHERE prd_cod="+grilla.getValueAt(fila,0)+"and mar_cod="+grilla.getValueAt(fila,3)+" and depo_cod="+grilla.getValueAt(fila,4));
     }

//            else{
//                insertar_stock();
//}
                 }
        } catch (SQLException ex) {

        }
    }


private void buscar_detalle_nota(){
     try{

if(operacion.equals("reponer")){


     conn.sentencia = conn.conexion.createStatement();
     conn.resultado = conn.sentencia.executeQuery("SELECT * FROM  reg_notacredi r,det_regnotc d WHERE r.reg_nro=d.reg_nro AND r.reg_estado='p' AND r.op_nota='Devolucion' AND r.reg_nro=" + t_numero_nota.getText());
     boolean encontro = conn.resultado.next();
     if (encontro==true)//encontro
            {
         if (conn.resultado.getString("estado").equals("ANULADO"))
                {
                JOptionPane.showMessageDialog(null, "Este pedido ya ha sido Anulado", "Atencion", JOptionPane.ERROR_MESSAGE);
                t_numero_nota.setText("");
                t_numero_nota.requestFocus();
                dispose();
                               
                } else    if (conn.resultado.getString("estado").equals("PROCESADO"))
                {
                JOptionPane.showMessageDialog(null, "Este pedido ya ha sido Procesado", "Atencion", JOptionPane.ERROR_MESSAGE);
                t_numero_nota.setText("");
                t_numero_nota.requestFocus();
                dispose();
                               
                } else  {
            
         
            t_numero_compras.setText(conn.resultado.getString("comp_nro"));
             Total.setText(conn.resultado.getString("det_total"));
              totaliva.setText(conn.resultado.getString("total_iva"));




                ///mostrar datos del detalle
                ver_conex conn = new ver_conex();

                 conn.sentencia = conn.conexion.createStatement();
                 conn.resultado = conn.sentencia.executeQuery("SELECT d.det_item,d.ar_cod,a.ar_descri,mo.mod_descri,ma.mar_descri,d.mod_cod,d.mar_cod ,d.precio,d.canti,d.det_exenta,d.det_grav5,d.det_grav10,r.det_total,d.dep_cod FROM det_rnota_credi d,reg_notacredi r, articulo a, modelo mo, marca ma WHERE d.mod_cod=mo.mod_cod AND d.mar_cod=ma.mar_cod AND d.reg_nro=r.reg_nro AND a.ar_cod=d.ar_cod AND d.reg_nro=" + t_numero_nota.getText());

                 while(conn.resultado.next())
                 {
                    ////para la descricion
                   // ver_conexion conn = new ver_conexion();
                    conn.sentencia = conn.conexion.createStatement();

                        /////tira a la grilla
                        String registro[] = new String[] {conn.resultado.getString("det_item"),conn.resultado.getString("ar_cod"),conn.resultado.getString("ar_descri"),conn.resultado.getString("mod_cod"),conn.resultado.getString("mod_descri"),conn.resultado.getString("mar_cod"),conn.resultado.getString("mar_descri"),conn.resultado.getString("dep_cod"),conn.resultado.getString("canti"),conn.resultado.getString("precio"),conn.resultado.getString("det_grav5"),conn.resultado.getString("det_grav10"),conn.resultado.getString("det_exenta")};
                        cursor.addRow(registro);

    }
     this.b_grabar.setEnabled(true);
     this.b_grabar.requestFocus();

       } }
     else{
              JOptionPane.showMessageDialog(null, " No existe nota pendiente con este numero", "Atencion", JOptionPane.ERROR_MESSAGE);

           this.t_numero_nota.setEnabled(true);
          this.t_numero_nota.requestFocus();
     }
}

   if(operacion.equals("anular")){


     conn.sentencia = conn.conexion.createStatement();
     conn.resultado = conn.sentencia.executeQuery("SELECT * FROM  cabecera_snc r,detalle_snc d,producto pr WHERE r.snc_cod=d.snc_cod AND r.estado='PENDIENTE' AND r.motivo IN ('Descuento','Devolucion') AND pr.prd_cod=d.prd_cod AND r.snc_cod=" + t_numero_nota.getText());
     boolean encontro = conn.resultado.next();
     if (encontro==true)//encontro
            {
         if (conn.resultado.getString("estado").equals("ANULADO"))
                {
                JOptionPane.showMessageDialog(null, "Esta Nota ya ha sido Anulado", "Atencion", JOptionPane.ERROR_MESSAGE);
                t_numero_nota.setText("");
                t_numero_nota.requestFocus();} 
         else if(conn.resultado.getString("estado").equals("PROCESADO"))
                {
                JOptionPane.showMessageDialog(null, "Esta Nota ya ha sido Anulado", "Atencion", JOptionPane.ERROR_MESSAGE);
                t_numero_nota.setText("");
                t_numero_nota.requestFocus();} 
         else{
                
            t_numero_compras.setText(conn.resultado.getString("rg_fac_cod"));
             Total.setText(conn.resultado.getString("total"));
              totaliva.setText(conn.resultado.getString("totaliva"));
              t_fecha.setText(conn.resultado.getString("fecha"));
             




                ///mostrar datos del detalle
                ver_conex conn = new ver_conex();

                 conn.sentencia = conn.conexion.createStatement();
                 conn.resultado = conn.sentencia.executeQuery("SELECT cabecera_reg_fact.rg_fac_cod,producto.prd_cod,prd_nom,marcas.mar_cod,mar_desc,det_reg_fact.prd_costo,catidad,exenta,grava5,grava10,cabecera_reg_fact.montotal,deposito.depo_cod,depo_desc FROM cabecera_reg_fact,det_reg_fact,producto,marcas,deposito WHERE cabecera_reg_fact.rg_fac_cod=det_reg_fact.rg_fac_cod AND det_reg_fact.prd_cod=producto.prd_cod AND producto.mar_cod=marcas.mar_cod  AND cabecera_reg_fact.depo_cod=deposito.depo_cod  AND cabecera_reg_fact.rg_fac_cod=" + t_numero_nota.getText());
                  while(conn.resultado.next())
                 {
                    ////para la descricion
                   // ver_conexion conn = new ver_conexion();
                    conn.sentencia = conn.conexion.createStatement();

                        /////tira a la grilla
                        String registro[] = new String[] {conn.resultado.getString("prd_cod"),
                            conn.resultado.getString("prd_nom"),
                        conn.resultado.getString("mar_cod"),conn.resultado.getString("mar_desc"),
                        conn.resultado.getString("depo_cod"),conn.resultado.getString("catidad"),conn.resultado.getString("prd_costo"),conn.resultado.getString("grava5"),
                        conn.resultado.getString("grava10"),conn.resultado.getString("exenta")};
                        cursor.addRow(registro);

    }

     this.b_grabar.setEnabled(true);
     this.b_grabar.requestFocus();
}
       }
     else{
              JOptionPane.showMessageDialog(null, " No existe nota con este numero", "Atencion", JOptionPane.ERROR_MESSAGE);

           this.t_numero_nota.setEnabled(true);
          this.t_numero_nota.requestFocus();
     }
}




     }

     



     catch(SQLException e){
        JOptionPane.showMessageDialog(null,e.getMessage(), "error de conexion", JOptionPane.ERROR_MESSAGE);
    }

}

private void anular()
{

         int res = javax.swing.JOptionPane.showOptionDialog(this,
        "Desea Anular la nota de credito?","REGISTRO DE NOTA",javax.swing.JOptionPane.OK_CANCEL_OPTION,
        javax.swing.JOptionPane.QUESTION_MESSAGE,null,
        new Object[] { "Si", "No"},"Si");

        if (res == javax.swing.JOptionPane.OK_OPTION)
        {

      try {

            ver_conex c= new ver_conex();
            c.sentencia = c.conexion.createStatement();
            c.sentencia.executeUpdate("UPDATE cabecera_snc SET estado='ANULADO' WHERE snc_cod="+t_numero_nota.getText());
            c.sentencia.executeUpdate("update cabecera_reg_fact set estado='PENDIENTE' where rg_fac_cod = " + t_numero_compras.getText());


//}
            
  JOptionPane.showMessageDialog(null, "El registro se ha Anulado satisfactoriamente.", "Confirmacion", JOptionPane.INFORMATION_MESSAGE);
             hab_botones();
            }catch (SQLException ex) {
           Logger.getLogger(nota_credito.class.getName()).log(Level.SEVERE, null, ex);
        }
  } else
       {

           JOptionPane.showMessageDialog(null, "Operacion Cancelada", "Atencion", JOptionPane.ERROR_MESSAGE);
       }


}

public void genreporte() //throws JRException, Exception
    {
        try //throws JRException, Exception
        {
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT * FROM cabecera_snc,detalle_snc,producto,funcionario,sucursal,cabecera_reg_fact,proveedor WHERE \n" +
"detalle_snc.snc_cod=cabecera_snc.snc_cod AND detalle_snc.prd_cod=producto.prd_cod AND \n" +
"cabecera_snc.func_cod=funcionario.func_cod AND cabecera_snc.rg_fac_cod=cabecera_reg_fact.rg_fac_cod AND \n" +
"cabecera_reg_fact.suc_cod=sucursal.suc_cod AND cabecera_reg_fact.provee_cod=proveedor.provee_cod AND cabecera_snc.snc_cod="+t_numero_nota.getText()); //OJO LE PASO LA SENTENCIA
            JRResultSetDataSource jrRS = new JRResultSetDataSource(conn.resultado);

            HashMap parameters = new HashMap();
            URL urlMaestro = getClass().getClassLoader().getResource("reportes/nota de credito.jasper");

            // Cargamos el reporte
            JasperReport masterReport = null;
            masterReport = (JasperReport) JRLoader.loadObject(urlMaestro);
            JasperPrint masterPrint = null;
            masterPrint = JasperFillManager.fillReport(masterReport, parameters, jrRS);
            JasperViewer ventana = new JasperViewer(masterPrint, false);
            ventana.setTitle("Vista Previa");
            ventana.setVisible(true);

        } catch (JRException ex) {
            Logger.getLogger(nota_credito.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(nota_credito.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


}

