/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.net.URL;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import programas.conexion;
import programas.ver_conex;

/**
 *
 * @author hp
 */
public class ajustes extends javax.swing.JFrame {
 ver_conex conn = new ver_conex();
    //publicamos el cursor
    javax.swing.table.DefaultTableModel cursor;
    /**
     * Creates new form ajustes
     */
    public ajustes() {
        initComponents();
        des_text();
          cursor = (javax.swing.table.DefaultTableModel) grilla.getModel();
        des_text();      
   //  lfecha.setText(acceso.fechasistema);
        fecha.setText(acceso.fechasistema);
        txtcodsucursal.setText(acceso.ususucur);
        txtsucurdescri.setText(acceso.sucurdescri);
        txtcodsucursal.setEnabled(false);
        txtsucurdescri.setEnabled(false);
        txtcodper.setEnabled(false);
        lfecha.setText(acceso.fechasistema);
         fecha.setText(acceso.fechasistema);
        lfecha.setText(acceso.fechasistema);        
      //  txtcodsucursal.setText(acceso.ususucur);
      //  txtsucurdescri.setText(acceso.sucurdescri);
        txtcodsucursal.setEnabled(false);
        txtsucurdescri.setEnabled(false);
        txtcodper.setEnabled(false);
        this.setLocationRelativeTo(null);
        hab_botones();
        Timer time = new Timer(250, new escucha());
            time.start();
            bagregar.requestFocus();
           // bmotivos.setEnabled(false);
          //  combomotivo.setEnabled(false);
         //   combodeposito.setEnabled(false);
    }

    class escucha implements ActionListener {

        public void actionPerformed(ActionEvent e) {
            Calendar ahora = Calendar.getInstance();
            int hor = ahora.get(Calendar.HOUR_OF_DAY);
            int min = ahora.get(Calendar.MINUTE);
            int seg = ahora.get(Calendar.SECOND);
            hora.setText(hor + ":" + min + ":" + seg);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        bbuscarajustes = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtcodigo = new javax.swing.JTextField();
        lcodigo2 = new javax.swing.JLabel();
        lcodigo3 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lfecha = new javax.swing.JLabel();
        hora = new javax.swing.JLabel();
        txtcodper = new javax.swing.JTextField();
        lnombre = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        grilla = new javax.swing.JTable();
        bborraritems = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        banular = new javax.swing.JButton();
        bsalir = new javax.swing.JButton();
        bagregar = new javax.swing.JButton();
        bcancelar = new javax.swing.JButton();
        bgrabar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lcodigo = new javax.swing.JLabel();
        txtcodsucursal = new javax.swing.JTextField();
        txtsucurdescri = new javax.swing.JTextField();
        lcodigo1 = new javax.swing.JLabel();
        depocod = new javax.swing.JTextField();
        depodesc = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        lcodigo5 = new javax.swing.JLabel();
        bmerca = new javax.swing.JButton();
        txtmercacod = new javax.swing.JTextField();
        txtcantidad = new javax.swing.JTextField();
        lcodigo6 = new javax.swing.JLabel();
        txtmerdescri = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        moticod = new javax.swing.JTextField();
        motidesc = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        fecha = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        bbuscarajustes.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        bbuscarajustes.setText("Buscar Ajustes ");
        bbuscarajustes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bbuscarajustesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(bbuscarajustes)
                .addContainerGap(87, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(bbuscarajustes)
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel7.setText("Registrar Ajustes");

        txtcodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcodigoActionPerformed(evt);
            }
        });

        lcodigo2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lcodigo2.setText("Codigo :");

        lcodigo3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lcodigo3.setText("Personal :");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Fecha:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setText("Hora :");

        lfecha.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lfecha.setText("Fechasistema");

        hora.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        hora.setText("Hora sistema");

        txtcodper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcodperActionPerformed(evt);
            }
        });
        txtcodper.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcodperKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcodperKeyTyped(evt);
            }
        });

        lnombre.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lnombre.setText("Nombre");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lcodigo2)
                        .addGap(8, 8, 8)
                        .addComponent(txtcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(lcodigo3)
                        .addGap(15, 15, 15)
                        .addComponent(txtcodper, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lnombre)
                        .addGap(29, 29, 29)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lfecha)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hora))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel7)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lcodigo2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lcodigo3)
                            .addComponent(jLabel3)
                            .addComponent(lfecha)
                            .addComponent(jLabel5)
                            .addComponent(hora)
                            .addComponent(lnombre))
                        .addComponent(txtcodigo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtcodper, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Producto", "Total_ajustar"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grilla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grillaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(grilla);

        bborraritems.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        bborraritems.setText("Borrar Items");
        bborraritems.setEnabled(false);
        bborraritems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bborraritemsActionPerformed(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        banular.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        banular.setText("Anular");
        banular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                banularActionPerformed(evt);
            }
        });

        bsalir.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        bsalir.setText("Salir");
        bsalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsalirActionPerformed(evt);
            }
        });

        bagregar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        bagregar.setText("Agregar");
        bagregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bagregarActionPerformed(evt);
            }
        });

        bcancelar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        bcancelar.setText("Cancelar");
        bcancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bcancelarActionPerformed(evt);
            }
        });

        bgrabar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        bgrabar.setText("Grabar");
        bgrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bgrabarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bagregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(banular)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bgrabar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bcancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bsalir, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bsalir)
                    .addComponent(bagregar)
                    .addComponent(banular)
                    .addComponent(bgrabar)
                    .addComponent(bcancelar))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bborraritems)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bborraritems, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lcodigo.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lcodigo.setText("Sucursal");

        txtcodsucursal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcodsucursalActionPerformed(evt);
            }
        });
        txtcodsucursal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcodsucursalKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcodsucursalKeyTyped(evt);
            }
        });

        lcodigo1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lcodigo1.setText("Deposito:");

        depocod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depocodActionPerformed(evt);
            }
        });

        depodesc.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(lcodigo)
                .addGap(20, 20, 20)
                .addComponent(txtcodsucursal, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtsucurdescri, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lcodigo1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(depocod, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(depodesc, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtsucurdescri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lcodigo1)
                        .addComponent(depocod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(depodesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lcodigo)
                        .addComponent(txtcodsucursal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lcodigo5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lcodigo5.setText("Producto:");

        bmerca.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bmerca.setText("Buscar");
        bmerca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bmercaActionPerformed(evt);
            }
        });

        txtmercacod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmercacodActionPerformed(evt);
            }
        });
        txtmercacod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtmercacodKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtmercacodKeyTyped(evt);
            }
        });

        txtcantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcantidadActionPerformed(evt);
            }
        });
        txtcantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcantidadKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcantidadKeyTyped(evt);
            }
        });

        lcodigo6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lcodigo6.setText("Cantidad de ajuste :");

        txtmerdescri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmerdescriActionPerformed(evt);
            }
        });
        txtmerdescri.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtmerdescriKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtmerdescriKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lcodigo5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bmerca))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(lcodigo6)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtcantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(txtmercacod, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtmerdescri, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(141, 141, 141))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bmerca, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lcodigo5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lcodigo6))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtmerdescri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtmercacod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(txtcantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 2, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel8.setText("Motivo : ");

        moticod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moticodActionPerformed(evt);
            }
        });
        moticod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                moticodKeyPressed(evt);
            }
        });

        motidesc.setEnabled(false);

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        fecha.setBackground(new java.awt.Color(231, 227, 233));
        fecha.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        fecha.setEnabled(false);
        fecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fechaActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel9.setText("Fecha :");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fecha, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(17, 17, 17)
                                    .addComponent(jLabel8)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(moticod, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(motidesc, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(8, 8, 8)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(moticod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(motidesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtcodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcodigoActionPerformed
        // TODO add your handling code here:
       buscarajustes();
        bgrabar.setEnabled(false);
        //buscarcompras();
        
        txtmercacod.setEnabled(false);
       
        txtcodigo.setEnabled(false);
    }//GEN-LAST:event_txtcodigoActionPerformed

    private void txtcodperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcodperActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcodperActionPerformed

    private void txtcodperKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcodperKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcodperKeyPressed

    private void txtcodperKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcodperKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcodperKeyTyped

    private void fechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fechaActionPerformed
       bmerca.setEnabled(true);
       bmerca.requestFocus();
       fecha.setEnabled(false);
    }//GEN-LAST:event_fechaActionPerformed

    private void banularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_banularActionPerformed
        // TODO add your handling code here:
        anularajuste();
       
        des_botones();
        borrar_text();
        hab_botones();
        bcancelar.doClick();
         limpiargrilla();
        //        bandera="borrar";
        //        des_botones();
        //        txtcodigo.setEnabtxtmercacod;
        //        txtcodigo.requestFocus();
        //        txtcodigo.setEnabled(true);
        //        txtcodigo.requestFocus();
    }//GEN-LAST:event_banularActionPerformed

    private void bsalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsalirActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_bsalirActionPerformed

    private void bagregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bagregarActionPerformed
           
            txtcodper.setText(acceso.usucod);//codigo usuario           
            lnombre.setText(acceso.usunom);
            lfecha.setText(acceso.fechasistema);        
            txtcodsucursal.setText(acceso.ususucur);
            txtsucurdescri.setText(acceso.sucurdescri);
            txtcodsucursal.setEnabled(false);
            txtsucurdescri.setEnabled(false);
            txtcodper.setEnabled(false);
            gencod();
           // bmotivos.setEnabled(true);                                
            des_botones();
            bbuscarajustes.setEnabled(false);
            bmerca.setEnabled(true);
            bmerca.requestFocus();
            mostrar_fecha();
            txtcodigo.setEnabled(false);
            depocod.setEnabled(true);
            depocod.requestFocus();
             // combodeposito.setEnabled(true);
            //        combodeposito.requestFocus();
           
    }//GEN-LAST:event_bagregarActionPerformed

    private void bcancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bcancelarActionPerformed
        // TODO add your handling code here:
        limpiargrilla();
        this.txtcodigo.setEnabled(false);
        
        
       // combodeposito.removeAllItems();
       // combomotivo.removeAllItems();
      //  bmotivos.setEnabled(false);
         borrar_text();
        hab_botones();        
        des_text();  
    }//GEN-LAST:event_bcancelarActionPerformed

    private void bgrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bgrabarActionPerformed
        validarGrilla();
     des_botones();
        borrar_text();
        hab_botones();
        bcancelar.doClick();
         limpiargrilla();
     //   bcancelar.doClick();
    }//GEN-LAST:event_bgrabarActionPerformed

    private void grillaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grillaMouseClicked
        this.bborraritems.setEnabled(true);
    }//GEN-LAST:event_grillaMouseClicked

    private void bborraritemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bborraritemsActionPerformed
        cursor.removeRow(grilla.getSelectedRow());
        this.bborraritems.setEnabled(false);
    }//GEN-LAST:event_bborraritemsActionPerformed

    private void txtcodsucursalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcodsucursalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcodsucursalActionPerformed

    private void txtcodsucursalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcodsucursalKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcodsucursalKeyPressed

    private void txtcodsucursalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcodsucursalKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcodsucursalKeyTyped

    private void bmercaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bmercaActionPerformed
        // TODO add your handling code here:
        {

JTextField[] tfParam = new JTextField[2];
tfParam[0] = this.txtmercacod;
tfParam[1] = this.txtmerdescri;


ventanabuscador pp = new ventanabuscador("select p.prd_cod,p.prd_nom,p.prd_costo from producto p where p.prd_nom like", new String[]{"CODIGO","DESCRIPCION","PRECIO"},3, tfParam);
pp.setTitle("BUSCADOR DE PRODUCTOS");
pp.setVisible(true);
txtmercacod.setEnabled(true);
txtmercacod.requestFocus();

}//fin
//if (evt.getKeyCode() ==KeyEvent.VK_ENTER)//TECLA FIN
    }//GEN-LAST:event_bmercaActionPerformed
private void buscar_cod()
    {
     try
	{

        conn.sentencia = conn.conexion.createStatement();
        conn.resultado = conn.sentencia.executeQuery("select * from producto where prd_cod="+this.txtmercacod.getText());

       if(conn.resultado.next())//si encontro
        {
          this.txtmerdescri.setText(conn.resultado.getString("prd_nom"));
         // this.precio.setText(conn.resultado.getString("in_precio"));

         //  iva = conn.resultado.getString("prd_iva");

         // this.entrega.setEnabled(false);
          this.txtmercacod.setEnabled(true);
          this.txtmercacod.requestFocus();
        }
       else//no encontro
        {
           JOptionPane.showMessageDialog(null,"CODIGO DE MERCADERIA NO EXISTE", "MENSAJE",
           JOptionPane.INFORMATION_MESSAGE);
       }

 	}
	catch (SQLException exceptionSql)
	{
		JOptionPane.showMessageDialog(null, exceptionSql.getMessage(), "Error de Conexion con la Base de Datos", JOptionPane.ERROR_MESSAGE);
		System.exit(0);
	}
    }
    private void txtmercacodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmercacodActionPerformed
        // TODO add your handling code here:
        buscar_cod();
                txtcantidad.setEnabled(true);
                txtcantidad.requestFocus();
    }//GEN-LAST:event_txtmercacodActionPerformed

    private void txtmercacodKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmercacodKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtmercacodKeyPressed

    private void txtmercacodKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmercacodKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmercacodKeyTyped

    private void txtcantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcantidadActionPerformed
        // TODO add your handling code here:
          try {
            String cant;
            cant = txtcantidad.getText();
            int multnum = 0;
            multnum = Integer.parseInt(cant);
            if (multnum <= 0) {
                JOptionPane.showMessageDialog(null, "TIENE QUE SER UN N° POSITIVO Y UN NUMERO MAYOR A CERO ");
                  txtcantidad.requestFocus();
            } else {


                 tirar_grilla();
            }
        } catch (Exception e) {
            getToolkit().beep();
        }
    }//GEN-LAST:event_txtcantidadActionPerformed

    private void txtcantidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcantidadKeyPressed
        // TODO add your handling code here:
       
                                      
    }//GEN-LAST:event_txtcantidadKeyPressed

    private void txtcantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcantidadKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcantidadKeyTyped

    private void txtmerdescriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmerdescriActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmerdescriActionPerformed

    private void txtmerdescriKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmerdescriKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmerdescriKeyPressed

    private void txtmerdescriKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmerdescriKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmerdescriKeyTyped

    private void bbuscarajustesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bbuscarajustesActionPerformed
        // TODO add your handling code here:
           {

                JTextField[] tfParam = new JTextField[2];
                tfParam[0] = this.txtcodigo;
                //                     //   tfParam[1] = this.txtprodescri;
                //
                ////JTextField[] tfParam = new JTextField[2];
                //  //                      tfParam[0] = this.txtcodigo;
                ventanabuscador buscador = new ventanabuscador("SELECT ca.ajus_cod,ca.ajus_fecha,fun.func_nom,s.suc_desc,d.depo_desc FROM \n" +
"cabec_ajustes ca, deposito d, sucursal s,funcionario fun WHERE s.suc_cod=ca.suc_cod AND \n" +
"d.depo_cod=ca.depo_cod AND ca.func_cod=fun.func_cod AND ca.estado='HABILITADO' AND ca.suc_cod= "+txtcodsucursal.getText()+" and ca.ajus_cod  like  "  , new String[]{"NUMERO","Fecha","Personal","Sucursal","Deposito"},5, tfParam);
                
                buscador.setTitle("Buscar Ajustes");
                buscador.setVisible(true);
                //                        combodeposito.requestFocus();
                //                       // combo_deposito();
                //                        buscador.setVisible(true);
                //              VentanaBuscar buscador = new VentanaBuscar ("SELECT ped_cod,ped_fech,per_nom,suc_nom,dep_descri,suc_cod from pedido as p inner join personal as per on p.per_cod=per.per_cod inner join deposito as d on d.dep_cod=p.dep_cod inner join sucursal as s on s.suc_cod=p.suc_cod WHERE  p.ped_est='habilitado' AND p.suc_cod="+txtcodsucursal.getText()+"  like "  , new String[]{"NUMERO","Fecha","Personal","Sucursal","Deposito","sucursalcod"},6, tfParam);
                //           buscador.setTitle("Buscar proveedor");
                //                      //  combodeposito.requestFocus();
                //  
        
                bagregar.setEnabled(false);
                txtcodigo.setEnabled(true);
                txtcodigo.requestFocus();
           
        }
            //    boton.setEnabled(true);
                bgrabar.setEnabled(false);
                

                //

                //
    }//GEN-LAST:event_bbuscarajustesActionPerformed

    private void depocodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depocodActionPerformed
        // TODO add your handling code here:
         buscardepo();
         moticod.setEnabled(true);
         moticod.requestFocus();
        // buscarmotivos.setEnabled(true);
    }//GEN-LAST:event_depocodActionPerformed

    private void moticodKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_moticodKeyPressed
        // TODO add your handling code here:
              if (moticod.getText().equals("") && evt.getKeyChar() == KeyEvent.VK_ENTER)//no trae nada
        {
            JTextField[] tfParam = new JTextField[2];
            tfParam[0] = this.moticod;
            tfParam[1] = this.motidesc;

            VentanaBuscar buscador = new VentanaBuscar("SELECT motivos.mot_cod,motivos.mot_desc FROM motivos WHERE motivos.mot_est= 'ACTIVO' AND motivos.mot_tipo= 'AJUSTE' and mot_desc like  ", new String[]{"Codigo motivos", "Descripcion motivos"}, 2, tfParam);
            buscador.setTitle("Buscar Motivos");
            buscador.setVisible(true);
    }                                
    }//GEN-LAST:event_moticodKeyPressed

    private void moticodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moticodActionPerformed
       buscarmotivoss();
        // TODO add your handling code here:
        //bmerca.setEnabled(true);
       // bmerca.requestFocus();
    }//GEN-LAST:event_moticodActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ajustes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ajustes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ajustes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ajustes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ajustes().setVisible(true);
            }
        });
    }
      public void genreporte() //throws JRException, Exception
    {
        try //throws JRException, Exception
        {
            ver_conex conn = new ver_conex();    
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT * FROM cabec_ajustes,detalle_ajustes,producto,funcionario,motivos,deposito,sucursal WHERE \n" +
"detalle_ajustes.ajus_cod=cabec_ajustes.ajus_cod AND detalle_ajustes.prd_cod=producto.prd_cod AND \n" +
"cabec_ajustes.func_cod=funcionario.func_cod AND cabec_ajustes.mot_cod=motivos.mot_cod AND \n" +
"cabec_ajustes.depo_cod=deposito.depo_cod AND cabec_ajustes.suc_cod=sucursal.suc_cod AND cabec_ajustes.ajus_cod= "+txtcodigo.getText());
            JRResultSetDataSource jrRS = new JRResultSetDataSource(conn.resultado);

            HashMap parameters = new HashMap();
            URL urlMaestro = getClass().getClassLoader().getResource("reportes/ajustes.jasper");

            // Cargamos el reporte
            JasperReport masterReport = null;
            masterReport = (JasperReport) JRLoader.loadObject(urlMaestro);
            JasperPrint masterPrint = null;
            masterPrint = JasperFillManager.fillReport(masterReport, parameters, jrRS);
            JasperViewer ventana = new JasperViewer(masterPrint, false);
            ventana.setTitle("Vista Previa");
            ventana.setVisible(true);

        } catch (JRException ex) {
            Logger.getLogger(pedidos_compra.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(pedidos_compra.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public String deposito=""; 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bagregar;
    private javax.swing.JButton banular;
    private javax.swing.JButton bborraritems;
    private javax.swing.JButton bbuscarajustes;
    private javax.swing.JButton bcancelar;
    private javax.swing.JButton bgrabar;
    private javax.swing.JButton bmerca;
    private javax.swing.JButton bsalir;
    private javax.swing.JTextField depocod;
    private javax.swing.JTextField depodesc;
    private javax.swing.JTextField fecha;
    private javax.swing.JTable grilla;
    private javax.swing.JLabel hora;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lcodigo;
    private javax.swing.JLabel lcodigo1;
    private javax.swing.JLabel lcodigo2;
    private javax.swing.JLabel lcodigo3;
    private javax.swing.JLabel lcodigo5;
    private javax.swing.JLabel lcodigo6;
    private javax.swing.JLabel lfecha;
    private javax.swing.JLabel lnombre;
    private javax.swing.JTextField moticod;
    private javax.swing.JTextField motidesc;
    private javax.swing.JTextField txtcantidad;
    private javax.swing.JTextField txtcodigo;
    private javax.swing.JTextField txtcodper;
    private javax.swing.JTextField txtcodsucursal;
    private javax.swing.JTextField txtmercacod;
    private javax.swing.JTextField txtmerdescri;
    private javax.swing.JTextField txtsucurdescri;
    // End of variables declaration//GEN-END:variables
private void borrar_text() {
       txtmercacod.setText("");
        txtcantidad.setText("");
   //    this.combomotivo.setEnabled(false);
    //   this.combodeposito.setEnabled(false);
        txtcodigo.setText("");       
        fecha.setText("");
        txtmercacod.setText("");                     
        txtmercacod.setText(""); 
      

    }
    private void des_text() {
       
        txtcodigo.setEnabled(false);
     //   combomotivo.setEnabled(false);
        fecha.setEnabled(false);
        txtmercacod.setEnabled(false);
        txtmerdescri.setEnabled(false);
        fecha.setEnabled(false);
       //combodeposito.setEnabled(false);      
        txtcantidad.setEnabled(false);
        txtcantidad.setEnabled(false);
       
    }
    private void buscardepo()
    {
        try {
             ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT * FROM deposito WHERE depo_cod="+depocod.getText());
            boolean encontro = conn.resultado.next();

            if(encontro == true)
            {
                depodesc.setText(conn.resultado.getString("depo_desc"));
            }
            else // no encontro
            {
              JOptionPane.showMessageDialog(null, "No existe un registro con este codigo!", "Atencion", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException ex) {
            Logger.getLogger(ajustes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void hab_botones() // metodo para hab botones
    {
        bagregar.setEnabled(true);
        bbuscarajustes.setEnabled(true);
        bgrabar.setEnabled(false);
         bsalir.setEnabled(true);
        bcancelar.setEnabled(false);
        banular.setEnabled(false);
       // boton.setEnabled(false);
        bmerca.setEnabled(false);
       
    }
    private void des_botones() //metodo para deshabilitar botones
     {
         bagregar.setEnabled(false);
	// bmercaderia.setEnabled(false);
        // bproveedor.setEnabled(false);
         bgrabar.setEnabled(false);
         bsalir.setEnabled(false);
	 bcancelar.setEnabled(true);
         banular.setEnabled(false);
       //  baprobar.setEnabled(false);
     }
     private void gencod() {
        try {
            //       Main.inicio = "no";
            ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT IFNULL(MAX(ajus_cod),0)+ 1 AS xxx FROM cabec_ajustes");
            conn.resultado.next();
            this.txtcodigo.setText(conn.resultado.getString("xxx"));
        } catch (SQLException ex) {
            Logger.getLogger(ajustes.class.getName()).log(Level.SEVERE, null, ex);
            //   } catch (SQLException ex)
            {
                Logger.getLogger(ajustes.class.getName()).log(Level.SEVERE, null, ex);
            }



        }
    }
      private void tirar_grilla() {
        try {

           
                   // c++;
            DefaultTableModel dt;
            dt = (DefaultTableModel) grilla.getModel();
            String campos[] = new String[]{txtmercacod.getText(), txtmerdescri.getText(), txtcantidad.getText()};
           // dt.addRow(new campos[]{String.valueOf(c),tcodinsumo.getText(), insumo.getText(), canti.getText()};

            dt.addRow(campos);
           

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e, "Aviso", JOptionPane.INFORMATION_MESSAGE);
        }
          bgrabar.setEnabled(true);
          txtcantidad.setEnabled(false);
          txtcantidad.setText("");
          txtmerdescri.setText("");
          txtmercacod.setText("");
          bmerca.setEnabled(true);
          txtmercacod.requestFocus();

    }


     
//      private void combo_deposito() {
//        try {
//            ver_conex c = new ver_conex();
//            c.sentencia = c.conexion.createStatement();
//            c.resultado = c.sentencia.executeQuery("SELECT CONCAT(CONCAT(d.dep_cod,'-'),d.dep_descri)  AS a FROM deposito d WHERE d.suc_cod= " + txtcodsucursal.getText() + " ORDER BY d.dep_cod;");
//            //combodeposito.removeAllItems();
//            while (c.resultado.next() == true) {
//                combodeposito.addItem(c.resultado.getString("a"));
//                this.combodeposito.setEnabled(true);
//            }
//        } catch (Exception e) {
//        }
//    }
//      private void combo_motivo() {
//        try {
//            ver_conex c = new ver_conex();
//            c.sentencia = c.conexion.createStatement();
//            c.resultado = c.sentencia.executeQuery("SELECT CONCAT(CONCAT(mot_cod,'-'),mot_descri)  AS a FROM motivo");
//            //combodeposito.removeAllItems();
//            while (c.resultado.next() == true) {
//                combomotivo.addItem(c.resultado.getString("a"));
//                this.combomotivo.setEnabled(true);
//            }
//        } catch (Exception e) {
//        }
//    }
      private void mostrar_fecha() {
      
        try {
        ver_conex c=new
                ver_conex();
        c.sentencia=c.conexion.createStatement();
        c.resultado=c.sentencia.executeQuery("select date_format(current_date(),'%d/%m/%Y') as fecha");
            while (c.resultado.next()) {
               fecha.setText(c.resultado.getString("fecha"));
            }
        } catch (Exception ex) {
            javax.swing.JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }
          
          
           private void limpiargrilla()
 {
      for (int i = grilla.getRowCount()-1; i>=0; i--) {
            cursor.removeRow(i);
        }
 }
           
           private void grabar()
  {
         int res = javax.swing.JOptionPane.showOptionDialog(this,
        "Desea grabar EL AJUSTE?","PRODUCSYS",javax.swing.JOptionPane.OK_CANCEL_OPTION,
        javax.swing.JOptionPane.QUESTION_MESSAGE,null,
        new Object[] { "Si", "No"},"Si");
        if (res == javax.swing.JOptionPane.OK_OPTION)
        {
             String f=fecha.getText();
String dd=f.substring(0,2);
String mm=f.substring(3,5);
String aa=f.substring(6,10);

String fecha=aa+"/"+mm+"/"+dd;

DateFormat df=new SimpleDateFormat(fecha);

        String SQL = null;
          try
          {
          //  String fecha = new SimpleDateFormat("yyyy-MM-dd").format(jdatetext.getDate());
                gencod();// sirve para que no se dupliquen los codigos y no de error cuando se trabaja en redes
            //System.out.println(fecha);
 ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.sentencia = conn.conexion.createStatement();
            
            //graba en la cabecera
          conn.sentencia.executeUpdate("INSERT INTO cabec_ajustes(ajus_cod,func_cod,mot_cod,depo_cod,suc_cod,ajus_fecha,estado)values("+txtcodigo.getText()+","+txtcodper.getText()+","+moticod.getText()+","+depocod.getText()+","+txtcodsucursal.getText()+",'"+fecha+"','HABILITADO')");

            //graba en el detalle
//////            for(int fila=0;fila < grilla.getRowCount();fila++)
//////            {
//////          conn.sentencia.executeUpdate("insert into detalle_ajustes(ajus_cod,prd_cod,cantidad) values("+txtcodigo.getText()+","+grilla.getValueAt(fila,0)+","+grilla.getValueAt(fila,2)+")");

             for (int fila = 0; fila < grilla.getRowCount(); fila++) {
                   conn.sentencia.executeUpdate("insert into detalle_ajustes(ajus_cod,prd_cod,cantidad) values("+txtcodigo.getText()+","+grilla.getValueAt(fila,0)+","+grilla.getValueAt(fila,2)+")");
                   conn.sentencia.executeUpdate("UPDATE stock SET stock_cant=stock_cant - "+ grilla.getValueAt(fila, 2)+" WHERE prd_cod="+grilla.getValueAt(fila, 0)+" AND depo_cod="+depocod.getText());
                }//
                JOptionPane.showMessageDialog(null, "El ajuste fue realizado Exitosamente.", "Confirmacion", JOptionPane.INFORMATION_MESSAGE);
genreporte();
            

} catch (SQLException ex) {
                Logger.getLogger(compras.class  

.getName()).log(Level.SEVERE, null, ex);
            }
        } else {

            JOptionPane.showMessageDialog(null, "Operacion Cancelada", "Atencion", JOptionPane.ERROR_MESSAGE);
        }

    }
       
       private void actualizar_stock(){
     int cantida=0;
        try {
            for(int fila=0;fila < grilla.getRowCount();fila++){
             
            ver_conex c= new ver_conex();
                c.sentencia= c.conexion.createStatement();
                c.resultado = c.sentencia.executeQuery("SELECT * FROM stock WHERE prd_cod="+grilla.getValueAt(fila,0)+" and suc_cod="+ txtcodsucursal.getText()+" and depo_cod= "+depocod.getText()+")");
                
                if (c.resultado.next()){
                  cantida=c.resultado.getInt("stock_cant");
                 

                   c.sentencia.executeUpdate("UPDATE stock SET stock_cant="+cantida+"-"+grilla.getValueAt(fila,2)+" WHERE prd_cod="+grilla.getValueAt(fila,0)+" and suc_cod="+ txtcodsucursal.getText()+" and depo_cod='"+depocod.getText()+")");
     }

                else{
                  //  c.sentencia = c.conexion.createStatement();
                   //c.sentencia.executeUpdate("INSERT INTO stock(mer_cod,suc_cod,dep_cod,cantidad) VALUES("+grilla.getValueAt(fila,0)+","+ txtcodsucursal.getText()+","+ txtdepcod.getText()+","+grilla.getValueAt(fila,3)+")");
              // insertar_stock();
}
                 }
        } catch (SQLException ex) {
           // Logger.getLogger(FrmCompra.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

         private void validarGrilla()
{
    int grilla2= grilla.getRowCount();

    if(grilla2==0)
    {
        mensajeValidarGrilla(this,"Grilla");
        bmerca.requestFocus();
    }
    else
    {
      grabar();

    }
}
         
          private static void mensajeValidarGrilla(JFrame x, String campo)
{
    JOptionPane.showMessageDialog(x,"Debe añadir datos en la "+campo+" antes de continuar","Aviso",JOptionPane.INFORMATION_MESSAGE);
}
          
          
           private void buscarajustes()
    {
        try {
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT * FROM cabec_ajustes INNER JOIN detalle_ajustes ON cabec_ajustes.ajus_cod=detalle_ajustes.ajus_cod INNER JOIN producto ON producto.prd_cod=detalle_ajustes.prd_cod INNER JOIN deposito ON deposito.depo_cod=cabec_ajustes.depo_cod WHERE cabec_ajustes.ajus_cod =" + txtcodigo.getText());
            boolean encontro = conn.resultado.next();
            // combo_depositoajuste();
            if (encontro==true)//encontro
            {
                if (conn.resultado.getString("estado").equals("ANULADO"))
                {
                JOptionPane.showMessageDialog(null, "Este pedido ya ha sido Anulado", "Atencion", JOptionPane.ERROR_MESSAGE);
                txtcodigo.setText("");
                txtcodigo.requestFocus();} 
                else{
                 ver_conex conn4 = new ver_conex();
                conn4.sentencia = conn4.conexion.createStatement();
               conn4.resultado = conn4.sentencia.executeQuery  ("SELECT motivos.mot_cod,motivos.mot_desc FROM motivos INNER JOIN cabec_ajustes ON motivos.mot_cod=cabec_ajustes.mot_cod WHERE cabec_ajustes.ajus_cod = "+txtcodigo.getText());
               boolean encontr = conn4.resultado.next();
               if(encontr==true){
               // buscar_depositoorden();
                 moticod.setText(conn4.resultado.getString("mot_cod"));
                 motidesc.setText(conn4.resultado.getString("mot_desc"));
                 depocod.setText(conn.resultado.getString("depo_cod"));
//        //  tirar_grilla();
//                ///mostrar datos del detalle
            //  ver_conex conn2 = new ver_conex();
               }
               ver_conex conn2 =new ver_conex();//instanciamos
                 conn2.sentencia = conn2.conexion.createStatement();
                 conn2.resultado = conn2.sentencia.executeQuery("select * from detalle_ajustes  where ajus_cod =" + txtcodigo.getText());

                 while(conn2.resultado.next())
                 {
                    ////para la descricion
                    ver_conex conn3 =new ver_conex();//instanciamos
                    conn3.sentencia = conn3.conexion.createStatement();
                    conn3.resultado = conn3.sentencia.executeQuery("select * from producto  where prd_cod =" + conn2.resultado.getString("prd_cod"));
                    conn3.resultado.next();//ubica en el primer registro
                    String registro[] = new String[] {conn2.resultado.getString("prd_cod"),conn3.resultado.getString("prd_nom"),conn2.resultado.getString("cantidad")};
                    ////
                    cursor.addRow(registro);
//                    txtcantidad.setEnabled(false);
//                    txtmercacod.setEnabled(true);
//                    txtmercacod.requestFocus();
                     banular.setEnabled(true);
                }
                 
                     }
            
                ///mostrar datos del detalle
                
                   } else{
              JOptionPane.showMessageDialog(null, " No existe pedido con este numero", "Atencion", JOptionPane.ERROR_MESSAGE);

           this.txtcodigo.setEnabled(true);
          this.txtcodigo.requestFocus();
        //  banular.setEnabled(true);
     }
 //    }
    } catch(SQLException e){
        JOptionPane.showMessageDialog(null,e.getMessage(), "error de conexion", JOptionPane.ERROR_MESSAGE);
    }
    // this.beditar.setEnabled(true);
    // this.beditar.requestFocus();
}//fin de recorrido
             
//                 private void combo_depositoajuste() {
//        try {
//            ver_conex c = new ver_conex();
//            c.sentencia = c.conexion.createStatement();
//            c.resultado = c.sentencia.executeQuery("SELECT CONCAT(CONCAT(d.dep_cod,'-'),d.dep_descri) as dep FROM deposito d INNER JOIN ajustes ON ajustes.dep_cod=d.dep_cod WHERE ajustes.a_cod = "+txtcodigo.getText());
//            combodeposito.removeAllItems();
//            while (c.resultado.next() == true) {
//                combodeposito.addItem(c.resultado.getString("dep"));
//                this.combodeposito.setEnabled(false);
//            }
//        } catch (Exception e) {
//        }
//    }
                 
                  private void anularajuste()
{

         int res = javax.swing.JOptionPane.showOptionDialog(this,
        "Desea Anular el ajuste de Produtos?","REGISTRO PEDIDO",javax.swing.JOptionPane.OK_CANCEL_OPTION,
        javax.swing.JOptionPane.QUESTION_MESSAGE,null,
        new Object[] { "Si", "No"},"Si");

        if (res == javax.swing.JOptionPane.OK_OPTION)
        {


      try {
           //  validarCampos3();

    
            
                    conn.sentencia = conn.conexion.createStatement();
                    conn.sentencia.executeUpdate("update cabec_ajustes set estado='ANULADO' where ajus_cod = " + txtcodigo.getText());
                    
                     for (int fila = 0; fila < grilla.getRowCount(); fila++) {
                   
                    conn.sentencia.executeUpdate("UPDATE stock SET stock_cant=stock_cant + "+ grilla.getValueAt(fila, 2)+" WHERE prd_cod="+grilla.getValueAt(fila, 0)+" AND depo_cod="+depocod.getText()+"");
                }//
                JOptionPane.showMessageDialog(null, "La compras se ha Anulado satisfactoriamente.", "Confirmacion", JOptionPane.INFORMATION_MESSAGE);




            }catch (SQLException ex) {
            Logger.getLogger(ajustes.class.getName()).log(Level.SEVERE, null, ex);
        }
  } else
       {

           JOptionPane.showMessageDialog(null, "Operacion Cancelada", "Atencion", JOptionPane.ERROR_MESSAGE);
       }



}
private void buscarmotivoss() {
        try {
            ver_conex con = new ver_conex();
            con.sentencia = con.conexion.createStatement();
            con.resultado = con.sentencia.executeQuery("SELECT motivos.mot_cod,motivos.mot_desc FROM motivos WHERE motivos.mot_est= 'ACTIVO' AND "
                    + "motivos.mot_tipo= 'AJUSTE' and mot_cod = " + moticod.getText());
            boolean encontro = con.resultado.next();

            if (encontro == true) {
                motidesc.setText(con.resultado.getString("mot_desc"));
            } else // no encontro
            {
                JOptionPane.showMessageDialog(null, "No existe un registro con este codigo!", "Atencion", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException ex) {
            Logger.getLogger(pedidos_compra.class.getName()).log(Level.SEVERE, null, ex);
        }
        
         
        
        
        
        
        
        
    }
                  
//                   private void anular_stock(){
//     int cantida=0;
//        try {
//            for(int fila=0;fila < grilla.getRowCount();fila++){
//             
//            ver_conex c= new ver_conex();
//                c.sentencia= c.conexion.createStatement();
//                c.resultado = c.sentencia.executeQuery("SELECT * FROM stock WHERE mer_cod="+grilla.getValueAt(fila,0)+" and suc_cod="+ txtcodsucursal.getText()+" ");//and dep_cod = ('"+combomotivo.getSelectedItem()+"','-',1)");
//                
//                if (c.resultado.next()){
//                  cantida=c.resultado.getInt("cantidad");
//                   deposito=c.resultado.getString("dep_cod");
//
//                   c.sentencia.executeUpdate("UPDATE stock SET cantidad="+cantida+"+"+grilla.getValueAt(fila,2)+" WHERE mer_cod="+grilla.getValueAt(fila,0)+" and suc_cod="+ txtcodsucursal.getText()+" and dep_cod='"+deposito+"' ");//and dep_cod=('"+combomotivo.getSelectedItem()+"','-',1)");
//     }
//
//               
//                 }
//        } catch (SQLException ex) {
//           // Logger.getLogger(FrmCompra.class.getName()).log(Level.SEVERE, null, ex);
//        }
//    }

}
//   private void buscarorden()
//    {
//        try {
//            conn.sentencia = conn.conexion.createStatement();
//            conn.resultado = conn.sentencia.executeQuery("SELECT * FROM cabecera_oc INNER JOIN detalle_oc ON cabecera_oc.oc_cod=detalle_oc.oc_cod INNER JOIN producto ON producto.prd_cod=detalle_oc.prd_cod INNER JOIN proveedor ON proveedor.provee_cod=cabecera_oc.provee_cod WHERE cabecera_oc.oc_cod =" + txtcodigo.getText());
//            boolean encontro = conn.resultado.next();
//             
//            if (encontro==true)//encontro
//            {
//                ver_conex conn4 = new ver_conex();
//                conn4.sentencia = conn4.conexion.createStatement();
//               conn4.resultado = conn4.sentencia.executeQuery  ("SELECT proveedor.provee_cod,proveedor.provee_nom FROM proveedor INNER JOIN cabecera_oc ON proveedor.provee_cod=cabecera_oc.provee_cod WHERE cabecera_oc.oc_cod = "+txtcodigo.getText());
//               boolean encontr = conn4.resultado.next();
//               if(encontr==true){
//                buscar_depositoorden();
//                 txtprocod.setText(conn4.resultado.getString("provee_cod"));
//                  txtprodescri.setText(conn4.resultado.getString("provee_nom"));
//        //  tirar_grilla();
//                ///mostrar datos del detalle
//            //  ver_conex conn2 = new ver_conex();
//               }
//               ver_conex conn2 =new ver_conex();//instanciamos
//                 conn2.sentencia = conn2.conexion.createStatement();
//                 conn2.resultado = conn2.sentencia.executeQuery("select * from detalle_oc  where oc_cod =" + txtcodigo.getText());
//
//                 while(conn2.resultado.next())
//                 {
//                    ////para la descricion
//                    ver_conex conn3 =new ver_conex();//instanciamos
//                    conn3.sentencia = conn3.conexion.createStatement();
//                    conn3.resultado = conn3.sentencia.executeQuery("select * from producto  where prd_cod =" + conn2.resultado.getString("prd_cod"));
//                    conn3.resultado.next();//ubica en el primer registro
//                    String registro[] = new String[] {conn2.resultado.getString("prd_cod"),conn3.resultado.getString("prd_nom"),conn2.resultado.getString("cantid"),conn2.resultado.getString("prd_costo")};
//                    ////
//                    cursor.addRow(registro);
//                    txtcantidad.setEnabled(false);
//                    txtmercacod.setEnabled(true);
//                    txtmercacod.requestFocus();
//                     banular.setEnabled(true);
//                }
//                 
//                ///mostrar datos del detalle
//                
//                   } else{
//              JOptionPane.showMessageDialog(null, " No existe pedido con este numero", "Atencion", JOptionPane.ERROR_MESSAGE);
//
//           this.txtcodigo.setEnabled(true);
//          this.txtcodigo.requestFocus();
//        //  banular.setEnabled(true);
//     }
// //    }
//    } catch(SQLException e){
//        JOptionPane.showMessageDialog(null,e.getMessage(), "error de conexion", JOptionPane.ERROR_MESSAGE);
//    }
//    // this.beditar.setEnabled(true);
//    // this.beditar.requestFocus();
//}//fin de recorrido
//             
//                
//                   private void buscar_depositoorden()
//    {
//     try
//	{
//
//        conn.sentencia = conn.conexion.createStatement();
//        conn.resultado = conn.sentencia.executeQuery("SELECT d.depo_cod, d.depo_desc FROM deposito d, cabecera_oc c WHERE  d.depo_cod=c.depo_cod AND c.depo_cod="+this.txtcodigo.getText());
//
//       if(conn.resultado.next())//si encontro
//        {
//          this.txtdepcod.setText(conn.resultado.getString("depo_cod"));
//          this.txtdepdescri.setText(conn.resultado.getString("depo_desc"));
//
//        }
//       else//no encontro
//        {
//           JOptionPane.showMessageDialog(null,"No hay pedido para este deposito", "MENSAJE",
//           JOptionPane.INFORMATION_MESSAGE);
//       }
//
// 	}
//	catch (SQLException exceptionSql)
//	{
//		JOptionPane.showMessageDialog(null, exceptionSql.getMessage(), "Error de Conexion con la Base de Datos", JOptionPane.ERROR_MESSAGE);
//		System.exit(0);
//	}
//    }
