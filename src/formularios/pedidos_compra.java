package formularios;

import formularios.VentanaBuscar;
import formularios.proveedor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.net.URL;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import programas.ver_conex;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author hp
 */
public final class pedidos_compra extends javax.swing.JFrame {

    ver_conex conn = new ver_conex();
    //publicamos el cursor
    javax.swing.table.DefaultTableModel cursor;

    /**
     * Creates new form pedidos_compra
     */
    public pedidos_compra() {

        initComponents();
        cursor = (javax.swing.table.DefaultTableModel) grilla.getModel();
        des_text();
        //   tcodsuc.setText(acceso.pasarsuccod());//codigo de sucursal
        //      sucursal.setText(acceso_sis.pasarsucur()); // sucursal
        txtcodper.setText(acceso.usucod);//codigo usuario

        lnombre.setText(acceso.usunom);
        lfecha.setText(acceso.fechasistema);
        //   fecha.setText(acceso.fechasistema);

//            if (txtcodsucursal.getText().equals("1")){
//                  baprobar.setVisible(true);
//            }
        txtsucurdescri.setText(acceso.sucurdescri);
        txtcodsucursal.setEnabled(false);
        txtsucurdescri.setEnabled(false);
        txtcodper.setEnabled(false);
        this.setLocationRelativeTo(null);
        hab_botones();
        // baprobar.setEnabled(false);
        beditar.setEnabled(true);
        txtcodsucursal.setText(acceso.ususucur);
        //   sucursales();

        // baprobar.setVisible(false);
        Timer time = new Timer(250, new escucha());
        time.start();

    }

    class escucha implements ActionListener {

        public void actionPerformed(ActionEvent e) {
            Calendar ahora = Calendar.getInstance();
            int hor = ahora.get(Calendar.HOUR_OF_DAY);
            int min = ahora.get(Calendar.MINUTE);
            int seg = ahora.get(Calendar.SECOND);
            hora.setText(hor + ":" + min + ":" + seg);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        lcodigo = new javax.swing.JLabel();
        txtcodigo = new javax.swing.JTextField();
        lcodigo2 = new javax.swing.JLabel();
        lnombre = new javax.swing.JLabel();
        lcodigo3 = new javax.swing.JLabel();
        txtcodsucursal = new javax.swing.JTextField();
        txtsucurdescri = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lfecha = new javax.swing.JLabel();
        hora = new javax.swing.JLabel();
        txtcodper = new javax.swing.JTextField();
        bborrar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        grilla = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        bgrabar = new javax.swing.JButton();
        beditar = new javax.swing.JButton();
        bagregar = new javax.swing.JButton();
        bcancelar = new javax.swing.JButton();
        bsalir = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        banular = new javax.swing.JButton();
        bbuscarped = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        bproveedor = new javax.swing.JButton();
        bmercaderia = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lcodigo1 = new javax.swing.JLabel();
        txtprodescri = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        fecha1 = new javax.swing.JTextField();
        txtdescri = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtprocod = new javax.swing.JTextField();
        lcodclientes = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        txtmercacod = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        depocod = new javax.swing.JTextField();
        txtcantidad = new javax.swing.JTextField();
        depodesc = new javax.swing.JTextField();

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFocusTraversalPolicyProvider(true);
        setLocationByPlatform(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel7.setText("Pedidos");

        lcodigo.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lcodigo.setText("Sucursal");

        txtcodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcodigoActionPerformed(evt);
            }
        });

        lcodigo2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lcodigo2.setText("Codigo :");

        lnombre.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lnombre.setText("Nombre");

        lcodigo3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lcodigo3.setText("Personal :");

        txtcodsucursal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcodsucursalActionPerformed(evt);
            }
        });
        txtcodsucursal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcodsucursalKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcodsucursalKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Fecha:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setText("Hora :");

        lfecha.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lfecha.setText("Fechasistema");

        hora.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        hora.setText("Hora sistema");

        txtcodper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcodperActionPerformed(evt);
            }
        });
        txtcodper.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcodperKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcodperKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addGap(14, 14, 14)
                        .addComponent(lfecha)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(hora)
                        .addGap(306, 306, 306))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lcodigo2)
                        .addGap(8, 8, 8)
                        .addComponent(txtcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(lcodigo3)
                        .addGap(7, 7, 7)
                        .addComponent(txtcodper, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lnombre)
                        .addGap(18, 18, 18)
                        .addComponent(lcodigo)
                        .addGap(18, 18, 18)
                        .addComponent(txtcodsucursal, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtsucurdescri, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(lfecha)
                        .addComponent(jLabel5)
                        .addComponent(hora))
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lcodigo2))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lcodigo)
                        .addComponent(lnombre)
                        .addComponent(lcodigo3)
                        .addComponent(txtcodsucursal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtsucurdescri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtcodper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        bborrar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        bborrar.setText("Borrar item");
        bborrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bborrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 921, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Descripcion", "Cantidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grilla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grillaMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(grilla);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        bgrabar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        bgrabar.setText("Grabar");
        bgrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bgrabarActionPerformed(evt);
            }
        });

        beditar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        beditar.setText("Editar");
        beditar.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        beditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beditarActionPerformed(evt);
            }
        });

        bagregar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        bagregar.setText("Agregar");
        bagregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bagregarActionPerformed(evt);
            }
        });

        bcancelar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        bcancelar.setText("Cancelar");
        bcancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bcancelarActionPerformed(evt);
            }
        });

        bsalir.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        bsalir.setText("Salir");
        bsalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(180, Short.MAX_VALUE)
                .addComponent(beditar, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bagregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bgrabar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bcancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bsalir)
                .addGap(132, 132, 132))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bagregar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(beditar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 11, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(bsalir, javax.swing.GroupLayout.PREFERRED_SIZE, 20, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(bcancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, Short.MAX_VALUE)
                                .addComponent(bgrabar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Utilice estos Botones Para anular un Pedido"));

        banular.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        banular.setText("Anular");
        banular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                banularActionPerformed(evt);
            }
        });

        bbuscarped.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        bbuscarped.setText("Buscar pedidos ");
        bbuscarped.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bbuscarpedActionPerformed(evt);
            }
        });
        bbuscarped.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                bbuscarpedKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addComponent(bbuscarped)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(banular)
                .addGap(28, 28, 28))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bbuscarped)
                    .addComponent(banular))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Pulse los botones si desea Cargar algun dato Nuevo"));

        bproveedor.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        bproveedor.setText("Proveedor");
        bproveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bproveedorActionPerformed(evt);
            }
        });

        bmercaderia.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        bmercaderia.setText("Mercaderias");
        bmercaderia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bmercaderiaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(bproveedor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bmercaderia)
                .addContainerGap(48, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bmercaderia)
                    .addComponent(bproveedor))
                .addGap(22, 22, 22))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del Pedido"));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Descripcion :");

        lcodigo1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lcodigo1.setText("Deposito :");

        txtprodescri.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setText("Fecha :");

        fecha1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fecha1ActionPerformed(evt);
            }
        });
        fecha1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fecha1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fecha1KeyTyped(evt);
            }
        });

        txtdescri.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setText("Cantidad :");

        txtprocod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtprocodActionPerformed(evt);
            }
        });
        txtprocod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtprocodKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtprocodKeyTyped(evt);
            }
        });

        lcodclientes.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lcodclientes.setText("Cod proveeedor :");

        jToolBar1.setRollover(true);

        txtmercacod.setEnabled(false);
        txtmercacod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmercacodActionPerformed(evt);
            }
        });
        txtmercacod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtmercacodKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtmercacodKeyTyped(evt);
            }
        });
        jToolBar1.add(txtmercacod);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("Producto:");

        depocod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depocodActionPerformed(evt);
            }
        });

        txtcantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcantidadActionPerformed(evt);
            }
        });
        txtcantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcantidadKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcantidadKeyTyped(evt);
            }
        });

        depodesc.setEnabled(false);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(lcodclientes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtprocod, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtprodescri, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lcodigo1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(depocod, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(depodesc, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fecha1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txtdescri, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtcantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 51, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lcodclientes)
                            .addComponent(txtprocod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtprodescri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lcodigo1))
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(fecha1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(depocod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(depodesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(txtdescri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(txtcantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(135, 135, 135)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 801, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bborrar)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 847, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bborrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtprocodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtprocodActionPerformed
        // TODO add your handling code here:
        buscarproveedor();
        depocod.setEnabled(true);
        depocod.requestFocus();
    }//GEN-LAST:event_txtprocodActionPerformed

    private void txtprocodKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtprocodKeyPressed
        // TODO add your handling code here:
        if (txtprocod.getText().equals("") && evt.getKeyChar() == KeyEvent.VK_ENTER)//no trae nada
        {
            JTextField[] tfParam = new JTextField[2];
            tfParam[0] = this.txtprocod;
            tfParam[1] = this.txtprodescri;

            ventanabuscador buscador = new ventanabuscador("select pro_cod,pro_nom from proveedor where pro_nom like  ", new String[]{"CODIGO proveedor", "NOMBRE proveedor"}, 2, tfParam);
            buscador.setTitle("Buscar proveedor");
            // combodeposito.requestFocus();
            // combo_deposito();
            buscador.setVisible(true);
            //buscador.setFocusCycleRoot(rootPaneCheckingEnabled);
            // this.setLocationRelativeTo(null);

            // txtmercacod.requestFocus();
        }

    }//GEN-LAST:event_txtprocodKeyPressed

    private void txtprocodKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtprocodKeyTyped
        // TODO add your handling code here:
        char caracter = evt.getKeyChar();
        if (((caracter < '0')
                || (caracter > '9'))
                && (caracter != evt.VK_BACK_SPACE)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtprocodKeyTyped

    private void txtmercacodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmercacodActionPerformed
        // TODO add your handling code here:
        buscar_cod();
        txtcantidad.setEnabled(true);
        txtcantidad.requestFocus();

    }//GEN-LAST:event_txtmercacodActionPerformed

    private void txtmercacodKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmercacodKeyPressed
        // TODO add your handling code here:
        if (txtmercacod.getText().equals("") && evt.getKeyChar() == KeyEvent.VK_ENTER) {// presiona F12
            new bus_art(null, true).setVisible(true);// llama al buscador

            if (bus_art.vdes.isEmpty())//no trae nada
            {
                return;
            } else // trae datos
            {
                txtmercacod.setText(bus_art.vcod);
                txtdescri.setText((bus_art.vdes));
                //txtprecio.setText(bus_art.vprecio);
                txtcantidad.requestFocus();

            }
        }//fin F12

        if (evt.getKeyCode() == 35) { // presiona TECLA FIN
            bgrabar.setEnabled(true);
            bgrabar.requestFocus();
        }
//                  if (txtmerca.getText().equals("") && evt.getKeyChar() == KeyEvent.VK_ENTER)//no trae nada

//            //            JTextField[] tfParam = new JTextField[2];
//            //            tfParam[0] = this.txtmerca;
//            //            tfParam[1] = this.txtdescri;
//            //            VentanaBuscar buscador = new VentanaBuscar("select mer_cod,mer_nom from mercaderia where mer_nom like  ", new String[]{"CODIGO marca", "NOMBRE marca"}, 2, tfParam);
//            //            buscador.setTitle("Buscar Merca");
//            //            buscador.setVisible(true);
//            //    }
//        if (txtmercacod.getText().equals("") && evt.getKeyChar() == KeyEvent.VK_ENTER)//no trae nada
//        {
//            JTextField[] tfParam = new JTextField[2];
//            tfParam[0] = this.txtmercacod;
//            tfParam[1] = this.txtdescri;
//
//            ventanabuscador buscador = new ventanabuscador("select mer_cod,mer_nom from mercaderia where mer_nom like  ", new String[]{"CODIGO mercaderia", "NOMBRE mercaderia"}, 2, tfParam);
//            buscador.setTitle("Buscar mercaderia");
//           // combodeposito.requestFocus();
//           // combo_deposito();
//            buscador.setVisible(true);
//            //buscador.setFocusCycleRoot(rootPaneCheckingEnabled);
//             // this.setLocationRelativeTo(null);
//
//           // txtmercacod.requestFocus();
//        }
    }//GEN-LAST:event_txtmercacodKeyPressed

    private void txtmercacodKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmercacodKeyTyped
        // TODO add your handling code here:
        char caracter = evt.getKeyChar();
        if (((caracter < '0')
                || (caracter > '9'))
                && (caracter != evt.VK_BACK_SPACE)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtmercacodKeyTyped

    private void txtcodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcodigoActionPerformed

        buscarfactura();
        //beditar.setEnabled(true);
        bgrabar.setEnabled(true);
        txtcantidad.setEnabled(true);
        txtmercacod.setEnabled(true);
        txtmercacod.requestFocus();
        txtcodigo.setEnabled(false);
    }//GEN-LAST:event_txtcodigoActionPerformed

    private void txtcantidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcantidadKeyPressed

    }//GEN-LAST:event_txtcantidadKeyPressed
//}
    private void txtcantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcantidadKeyTyped
        // TODO add your handling code here:

        char caracter = evt.getKeyChar();
        if (((caracter < '0')
                || (caracter > '9'))
                && (caracter != evt.VK_BACK_SPACE)) {
            evt.consume();
        }

    }//GEN-LAST:event_txtcantidadKeyTyped

    private void bsalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsalirActionPerformed
        // TODO add your handling code here:
        //salir();
        dispose();
    }//GEN-LAST:event_bsalirActionPerformed

    private void bcancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bcancelarActionPerformed
        // TODO add your handling code here:
        limpiargrilla();
        this.txtcodigo.setEnabled(false);
        borrar_text();

        hab_botones();
        beditar.setEnabled(true);
        des_text();
        //combodeposito.removeAllItems();

        //        txtcodigo.setEnabled(false);
        //        txtclinom.setEnabled(false);
        //        txtclinom.setText("");
        // hab_botones();
        //  txtiva5.setText("0");
//        txtiva10.setText("0");
        //   des_text();
    }//GEN-LAST:event_bcancelarActionPerformed

    private void bgrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bgrabarActionPerformed
        // TODO add your handling code here:
        grabar();
        borrar_text();
        hab_botones();
        limpiargrilla();
        //  bcancelar.doClick();
    }//GEN-LAST:event_bgrabarActionPerformed

    private void banularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_banularActionPerformed
        // TODO add your handling code here:
        anular();
        des_botones();
        borrar_text();
        hab_botones();
        limpiargrilla();
        //        bandera="borrar";
        //        des_botones();
        //        txtcodigo.setEnabled(true);
        //        txtcodigo.requestFocus();
//        txtcodigo.setEnabled(true);
//        txtcodigo.requestFocus();
        this.bsalir.setEnabled(true);
        this.bcancelar.setEnabled(true);
    }//GEN-LAST:event_banularActionPerformed

    private void bborrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bborrarActionPerformed
        // TODO add your handling code here:
//        cursor.removeRow(grilla.getSelectedRow());
        cursor.removeRow(grilla.getSelectedRow());
        this.bborrar.setEnabled(false);
        txtmercacod.requestFocus();
//        caltotales();
    }//GEN-LAST:event_bborrarActionPerformed

    private void bagregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bagregarActionPerformed
        bandera = "agregar";
        lfecha.setText(acceso.fechasistema);
        fecha1.setText(acceso.fechasistema);
        txtcodsucursal.setText(acceso.ususucur);
        txtsucurdescri.setText(acceso.sucurdescri);
        txtcodsucursal.setEnabled(false);
        txtsucurdescri.setEnabled(false);
        txtcodper.setEnabled(false);

        gencod();
        hab_text();
        des_botones();
        txtprocod.requestFocus();
        bmercaderia.setEnabled(true);
        bproveedor.setEnabled(true);
        mostrar_fecha();
        //combo_deposito();
        // combodeposito.addItem(c.resultado.getString("a"));
        //   combodeposito.addItemListener(null);
        // TODO add your handling code here:

    }//GEN-LAST:event_bagregarActionPerformed

    private void bproveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bproveedorActionPerformed
        // TODO add your handling code here:
        new proveedor().setVisible(true);
    }//GEN-LAST:event_bproveedorActionPerformed

    private void bmercaderiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bmercaderiaActionPerformed
        // TODO add your handling code here:
        // new mercaderia().setVisible(true);
    }//GEN-LAST:event_bmercaderiaActionPerformed

    private void txtcodsucursalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcodsucursalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcodsucursalActionPerformed

    private void txtcodsucursalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcodsucursalKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcodsucursalKeyPressed

    private void txtcodsucursalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcodsucursalKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcodsucursalKeyTyped

    private void fecha1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fecha1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_fecha1KeyPressed

    private void fecha1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fecha1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_fecha1KeyTyped

    private void bbuscarpedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bbuscarpedActionPerformed
        try {

            JTextField[] tfParam = new JTextField[1];
            tfParam[0] = this.txtcodigo;
            VentanaBuscar buscador = new VentanaBuscar("SELECT pedi_cod,fecha FROM cabecera_pedidos WHERE pedi_est='PENDIENTE' AND pedi_cod like ", new String[]{"NUMERO", "Fecha"}, 2, tfParam);
            buscador.setTitle("Buscar pedidos");
            // banular.setEnabled(true);
            // beditar.setEnabled(true);
            // boton.setEnabled(true);
            bgrabar.setEnabled(false);
            buscador.setVisible(true);
            bagregar.setEnabled(false);
            txtcodigo.setEnabled(true);
            txtcodigo.requestFocus();

//            } else {
//                JTextField[] tfParam = new JTextField[1];
//                tfParam[0] = this.txtcodigo;
//                ventanabuscador buscador1 = new ventanabuscador("SELECT p.ped_cod,p.ped_fech,per.per_nom,s.suc_cod,d.dep_descri FROM pedido as p,personal as per, sucursal as s,deposito as d WHERE s.suc_cod=p.suc_cod AND p.per_cod=per.per_cod AND d.dep_cod=p.dep_cod  AND  p.ped_est='pendiente' and p.suc_cod="+ acceso.ususucur + "   like ", new String[]{"NUMERO", "Fecha", "Personal", "Sucursal", "Deposito"}, 5, tfParam);
//                buscador1.setTitle("Buscar pedidos");
//                buscador1.setVisible(true);
//            }
        } catch (Exception e) {
            Logger.getLogger(pedidos_compra.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_bbuscarpedActionPerformed

    private void txtcantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcantidadActionPerformed
        // TODO add your handling code here:
        try {
            String cant;
            cant = txtcantidad.getText();
            int multnum = 0;
            multnum = Integer.parseInt(cant);
            if (multnum <= 0) {
                JOptionPane.showMessageDialog(null, "TIENE QUE SER UN N° POSITIVO Y UN NUMERO MAYOR A CERO ");
                txtcantidad.requestFocus();
            } else {

                //this.bañadir.setEnabled(true);
                tirar_grillas();
                txtdescri.setText("");
                txtcantidad.setText("");
                txtmercacod.setText("");

                //   txtmercacod.requestFocus();
            }
        } catch (Exception e) {
            getToolkit().beep();
        }

//busca_detalle();
//         try {
//            String cant;
//            cant = txtcantidad.getText();
//            int multnum = 0;
//            multnum = Integer.parseInt(cant);
//            if (multnum <= 0) {
//                JOptionPane.showMessageDialog(null, "TIENE QUE SER UN N° POSITIVO Y UN NUMERO MAYOR A CERO ");
//                  txtcantidad.requestFocus();
//            } else {
        //this.bañadir.setEnabled(true);
        // tirar_grilla();
//            }
//        } catch (Exception e) {
//            //getToolkit().beep();
//        }
    }//GEN-LAST:event_txtcantidadActionPerformed

    private void grillaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grillaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_grillaMouseClicked

    private void txtcodperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcodperActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcodperActionPerformed

    private void txtcodperKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcodperKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcodperKeyPressed

    private void txtcodperKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcodperKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcodperKeyTyped

    private void fecha1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fecha1ActionPerformed
        // TODO add your handling code here:
        txtmercacod.requestFocus();
    }//GEN-LAST:event_fecha1ActionPerformed

    private void bbuscarpedKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bbuscarpedKeyPressed
        // TODO add your handling code here:
        //    buscarpedis();
    }//GEN-LAST:event_bbuscarpedKeyPressed

    private void beditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beditarActionPerformed
        bandera = "editar";
        txtcodigo.setEnabled(true);
        txtcodigo.requestFocus();

        bbuscarped.setEnabled(false);
        banular.setEnabled(false);

// bandera="editar";
        // modificar1();
        //  bcancelar.doClick();
    }//GEN-LAST:event_beditarActionPerformed

    private void depocodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depocodActionPerformed
        // TODO add your handling code here:
        buscardepo();
        txtmercacod.setEnabled(true);
        txtmercacod.requestFocus();
    }//GEN-LAST:event_depocodActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pedidos_compra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pedidos_compra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pedidos_compra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pedidos_compra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pedidos_compra().setVisible(true);
            }
        });
    }
    public String bandera = "";
    int c;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bagregar;
    private javax.swing.JButton banular;
    private javax.swing.JButton bborrar;
    private javax.swing.JButton bbuscarped;
    private javax.swing.JButton bcancelar;
    private javax.swing.JButton beditar;
    private javax.swing.JButton bgrabar;
    private javax.swing.JButton bmercaderia;
    private javax.swing.JButton bproveedor;
    private javax.swing.JButton bsalir;
    private javax.swing.JTextField depocod;
    private javax.swing.JTextField depodesc;
    private javax.swing.JTextField fecha1;
    private javax.swing.JTable grilla;
    private javax.swing.JLabel hora;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lcodclientes;
    private javax.swing.JLabel lcodigo;
    private javax.swing.JLabel lcodigo1;
    private javax.swing.JLabel lcodigo2;
    private javax.swing.JLabel lcodigo3;
    private javax.swing.JLabel lfecha;
    private javax.swing.JLabel lnombre;
    private javax.swing.JTextField txtcantidad;
    private javax.swing.JTextField txtcodigo;
    private javax.swing.JTextField txtcodper;
    private javax.swing.JTextField txtcodsucursal;
    private javax.swing.JTextField txtdescri;
    private javax.swing.JTextField txtmercacod;
    private javax.swing.JTextField txtprocod;
    private javax.swing.JTextField txtprodescri;
    private javax.swing.JTextField txtsucurdescri;
    // End of variables declaration//GEN-END:variables

    private void hab_text() {
        txtcodigo.setEnabled(true);
        txtprocod.setEnabled(true);
        //  combodeposito.setEnabled(true);
        fecha1.setEnabled(true);
        txtmercacod.setEnabled(true);
    }

    private void des_text() {
        txtcodigo.setEnabled(false);
        txtprocod.setEnabled(false);
        // combodeposito.setEnabled(false);
        fecha1.setEnabled(false);
        txtmercacod.setEnabled(false);
        txtprodescri.setEnabled(false);
        txtcantidad.setEnabled(false);
        fecha1.setEnabled(false);
        txtdescri.setEnabled(false);
    }

    private void borrar_text() {

        txtcodigo.setText("");
        txtprocod.setText("");
        //combodeposito.removeAllItems();
        // txtcodper.setText("");
        fecha1.setText("");
        txtmercacod.setText("");
        txtdescri.setText("");
        txtcantidad.setText("");
        fecha1.setText("");
        txtprodescri.setText("");
        depocod.setText("");
        depodesc.setText("");
        //txtcodsucursal.setText("");
        //txtsucurdescri.setText("");

    }

    private void des_botones() //metodo para deshabilitar botones
    {
        bagregar.setEnabled(false);
        bmercaderia.setEnabled(false);
        bproveedor.setEnabled(false);
        bgrabar.setEnabled(true);
        bsalir.setEnabled(false);
        bcancelar.setEnabled(true);
        banular.setEnabled(false);
        //   baprobar.setEnabled(false);
    }

    private void hab_botones() // metodo para hab botones
    {
        bagregar.setEnabled(true);
        bmercaderia.setEnabled(false);
        bproveedor.setEnabled(false);
        bgrabar.setEnabled(false);
        bsalir.setEnabled(true);
        bcancelar.setEnabled(false);
        banular.setEnabled(true);
        beditar.setEnabled(true);
        // baprobar.setEnabled(true);
    }

    private void gencod() {
        try {
            //       Main.inicio = "no";
            ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT IFNULL(MAX(pedi_cod),0)+ 1 AS xxx FROM cabecera_pedidos");
            conn.resultado.next();
            this.txtcodigo.setText(conn.resultado.getString("xxx"));
        } catch (SQLException ex) {
            Logger.getLogger(pedidos_compra.class.getName()).log(Level.SEVERE, null, ex);
            //   } catch (SQLException ex)
            {
                Logger.getLogger(pedidos_compra.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }

    private void grabar() {
        int res = javax.swing.JOptionPane.showOptionDialog(this,
                "Desea grabar el pedido?", "Demosystem", javax.swing.JOptionPane.OK_CANCEL_OPTION,
                javax.swing.JOptionPane.QUESTION_MESSAGE, null,
                new Object[]{"Si", "No"}, "Si");
        {

            if (res == javax.swing.JOptionPane.OK_OPTION) {
                try {
                    String f = fecha1.getText();
                    String dd = f.substring(0, 2);
                    String mm = f.substring(3, 5);
                    String aa = f.substring(6, 10);
                    String fecha = aa + "/" + mm + "/" + dd;

                    DateFormat df = new SimpleDateFormat(fecha);
                    conn.sentencia = conn.conexion.createStatement();
                    if (bandera.equals("agregar")) {
                        conn.sentencia.executeUpdate("INSERT INTO cabecera_pedidos(pedi_cod,func_cod,suc_cod,fecha,pedi_est,provee_cod)values(" + txtcodigo.getText() + "," + txtcodper.getText() + "," + txtcodsucursal.getText() + ",'" + fecha + "','PENDIENTE'," + txtprocod.getText() + ")");

                        //graba en el detalle
                        for (int fila = 0; fila < grilla.getRowCount(); fila++) {
                            conn.sentencia.executeUpdate("INSERT into detalle_pedido(pedi_cod,prd_cod,depo_cod,canti)values(" + txtcodigo.getText() + "," + grilla.getValueAt(fila, 0) + "," + depocod.getText() + "," + grilla.getValueAt(fila, 2) + ")");
                        }

                    }
                    if (bandera.equals("editar")) {
                        conn.sentencia = conn.conexion.createStatement();
                        conn.sentencia.executeUpdate("DELETE FROM detalle_pedido WHERE pedi_cod=" + txtcodigo.getText());
                        conn.sentencia.executeUpdate("DELETE FROM cabecera_pedidos WHERE pedi_cod=" + txtcodigo.getText());
                        //graba en la cabecera
                        conn.sentencia.executeUpdate("INSERT INTO cabecera_pedidos(pedi_cod,func_cod,suc_cod,fecha,pedi_est,provee_cod)values(" + txtcodigo.getText() + "," + txtcodper.getText() + "," + txtcodsucursal.getText() + ",'" + fecha1.getText() + "','PENDIENTE'," + txtprocod.getText() + ")");
                        for (int fila = 0; fila < grilla.getRowCount(); fila++) {
                            conn.sentencia.executeUpdate("INSERT into detalle_pedido(pedi_cod,prd_cod,canti,depo_cod)values(" + txtcodigo.getText() + "," + grilla.getValueAt(fila, 0) + "," + grilla.getValueAt(fila, 2) + "," + depocod.getText() + ")");
//conn.sentencia.executeUpdate("UPDATE stock SET cantidad = cantidad - "+grilla.getValueAt(fila,3)+" "
//+ "where pro_cod="+grilla.getValueAt(fila,1));

                        }
                    }

                    JOptionPane.showMessageDialog(null, "EL PEDIDO SE HA GRABADO..!!\nSATISFACTORIAMENTE", "Confirmacion", JOptionPane.INFORMATION_MESSAGE);
                    genreporte();
                } catch (SQLException ex) {
                    Logger.getLogger(pedidos_compra.class.getName()).log(Level.SEVERE, null, ex);
                }

            } else {
                JOptionPane.showMessageDialog(null, "Operacion Cancelada", "Atencion", JOptionPane.ERROR_MESSAGE);
            }

        }

    }

    private void buscar_cod() {
        try {
            ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("select * from producto where prd_cod=" + this.txtmercacod.getText());

            if (conn.resultado.next())//si encontro
            {
                this.txtdescri.setText(conn.resultado.getString("prd_nom"));
                // this.txtcantidad.setText(conn.resultado.getString("p"));

                //    iva = conn.resultado.getString("mer_iva");
                this.txtmercacod.setEnabled(false);
                this.txtcantidad.setEnabled(true);
                this.txtcantidad.requestFocus();
            } else//no encontro
            {
                JOptionPane.showMessageDialog(null, "CODIGO DE PRODUCTO NO EXISTE", "MENSAJE",
                        JOptionPane.INFORMATION_MESSAGE);
            }

        } catch (SQLException exceptionSql) {
            JOptionPane.showMessageDialog(null, exceptionSql.getMessage(), "Error de Conexion con la Base de Datos", JOptionPane.ERROR_MESSAGE);
            System.exit(0);
        }
    }

    private void tirar_grilla() {
        try {

            do {
                // c++;
                DefaultTableModel dt;
                dt = (DefaultTableModel) grilla.getModel();
                String registro[] = new String[]{txtmercacod.getText(), txtdescri.getText(), txtcantidad.getText()};
                cursor.addRow(registro);

            } while (conn.resultado.next());

            //            }
//                else{
//                    comparacion();
//                }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e, "Aviso", JOptionPane.INFORMATION_MESSAGE);
        }
        // bgrabar.setEnabled(true);
        txtcantidad.setEnabled(false);
        txtcantidad.setText("");
        txtdescri.setText("");
        //  precio.setText("");
        txtmercacod.setEnabled(true);

    }

//   } private void buscar_deposito() {
//        try {
//            ver_conex c = new ver_conex();
//            c.sentencia = c.conexion.createStatement();
//            c.resultado = c.sentencia.executeQuery("SELECT CONCAT(CONCAT(d.depo_cod,'-'),de.depo_desc) AS a FROM detalle_pedido d,deposito de WHERE d.depo_cod=de.depo_cod AND d.suc_cod= " + txtcodsucursal.getText() + " ORDER BY d.depo_cod");
//            combodeposito.removeAllItems();
//            while (c.resultado.next() == true) {
//                combodeposito.addItem(c.resultado.getString("a"));
//                this.combodeposito.setEnabled(true);
//            }
//        } catch (Exception e) {
//        }
//    }
//    private void combo_deposito() {
//        try {
//            ver_conex c = new ver_conex();
//            c.sentencia = c.conexion.createStatement();
//            c.resultado = c.sentencia.executeQuery("SELECT CONCAT(CONCAT(d.depo_cod,'-'),d.depo_desc)  AS a FROM deposito d WHERE d.suc_cod= " + txtcodsucursal.getText() + " ORDER BY d.depo_cod;");
//            //combodeposito.removeAllItems();
//            while (c.resultado.next() == true) {
//                combodeposito.addItem(c.resultado.getString("a"));
//                this.combodeposito.setEnabled(true);
//            }
//        } catch (Exception e) {
//        }
//    }
//          private void buscarproveedor()
//    {
//        try {
//             ver_conex conn = new ver_conex();
//            conn.sentencia = conn.conexion.createStatement();
//            conn.resultado = conn.sentencia.executeQuery("SELECT pro_cod,pro_nom FROM proveedor WHERE pro_cod = '"+txtprocod.getText());
//            boolean encontro = conn.resultado.next();
//
//            if(encontro == true)
//            {
//                txtprodescri.setText(conn.resultado.getString("pro_nom"));
//            }
//            else // no encontro
//            {
//              JOptionPane.showMessageDialog(null, "No existe un registro con este codigo!", "Atencion", JOptionPane.ERROR_MESSAGE);
//            }
//
//        } catch (SQLException ex) {
//            Logger.getLogger(proveedor.class.getName()).log(Level.SEVERE, null, ex);
//        }
//    }
//
    private void mostrar_fecha() {
        try {
            ver_conex c = new ver_conex();
            c.sentencia = c.conexion.createStatement();
            c.resultado = c.sentencia.executeQuery("select date_format(current_date(),'%d/%m/%Y') as fecha");
            while (c.resultado.next()) {
                fecha1.setText(c.resultado.getString("fecha"));
            }
        } catch (Exception ex) {
            javax.swing.JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }

    private void limpiargrilla() {
        for (int i = grilla.getRowCount() - 1; i >= 0; i--) {
            cursor.removeRow(i);
        }
    }

    private void buscarproveedor() {
        try {
            ver_conex con = new ver_conex();
            con.sentencia = con.conexion.createStatement();
            con.resultado = con.sentencia.executeQuery("SELECT provee_cod,provee_nom FROM proveedor WHERE provee_cod = " + txtprocod.getText());
            boolean encontro = con.resultado.next();

            if (encontro == true) {
                txtprodescri.setText(con.resultado.getString("provee_nom"));
            } else // no encontro
            {
                JOptionPane.showMessageDialog(null, "No existe un registro con este codigo!", "Atencion", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException ex) {
            Logger.getLogger(pedidos_compra.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void buscarpedis() {

        try {
            //  txtcodper.setText(acceso.usucod);//codigo usuario
            //                  //   nombre.setText(acceso_sis.pasarusu());    //nombre de usuario
            //                    //   apellido.setText(acceso_sis.usuape());  //apellido de usuario
            //                        lnombre.setText(acceso.usunom);
            //        lfecha.setText(acceso.fechasistema);
            //      //   fecha.setText(acceso.fechasistema);
            //         txtcodsucursal.setText(acceso.ususucur);
            //         txtsucurdescri.setText(acceso.sucurdescri);
            //         txtcodsucursal.setEnabled(false);
            //         txtsucurdescri.setEnabled(false);
            //         txtcodper.setEnabled(false);        // TODO add your handling code here:
            //   if (txtprocod.getText().equals("") && evt.getKeyChar() == KeyEvent.VK_ENTER)//no trae nada
            //{
            ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("select * from pedidos where ped_est= ('habilitado')");
            // conn.resultado = conn.sentencia.executeQuery ("select * from aper_caja where ap_est=('activo')");
            boolean encontro = conn.resultado.next();

            if (encontro == true) {
                JTextField[] tfParam = new JTextField[2];
                tfParam[0] = this.txtcodigo;
                //   tfParam[1] = this.txtprodescri;

//JTextField[] tfParam = new JTextField[2];
                //                      tfParam[0] = this.txtcodigo;
                VentanaBuscar buscador = new VentanaBuscar("SELECT p.ped_cod,p.ped_fech,per.per_nom,s.suc_nom,d.dep_descri FROM pedido as p,personal as per, sucursal as s,deposito as d WHERE s.suc_cod=p.suc_cod AND p.per_cod=per.per_cod AND d.dep_cod=p.dep_cod  AND p.suc_cod=" + txtcodsucursal.getText() + "  like  ", new String[]{"NUMERO", "Fecha", "Personal", "Sucursal", "Deposito"}, 5, tfParam);
                buscador.setTitle("Buscar proveedor");
                //  combodeposito.requestFocus();
                // combo_deposito();
                buscador.setVisible(true);
                // VentanaBuscar buscador = new VentanaBuscar ("SELECT ped_cod,ped_fech,per_nom,suc_nom,dep_descri,suc_cod from pedido as p inner join personal as per on p.per_cod=per.per_cod inner join deposito as d on d.dep_cod=p.dep_cod inner join sucursal as s on s.suc_cod=p.suc_cod WHERE  p.ped_est='habilitado' AND p.suc_cod="+txtcodsucursal.getText()+"  like "  , new String[]{"NUMERO","Fecha","Personal","Sucursal","Deposito","sucursalcod"},6, tfParam);
                //buscador.setTitle("Buscar proveedor");
                //  combodeposito.requestFocus();
                // combo_deposito();
                //   buscador.setVisible(true);
            }

        } catch (SQLException ex) {
            Logger.getLogger(pedidos_compra.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void busca_detalle() {
//        ver_conexion conn =new ver_conexion();
//     cursor.setRowCount(0);
        try {
            // presiona ENTER
            //  ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("Select * from pedido as p inner join det_pedido as d inner join mercaderia as m on d.ped_cod=p.ped_cod AND m.mer_cod=d.mer_cod  WHERE p.ped_est='habilitado' AND  d.ped_cod=" + txtcodigo.getText());
            boolean encontro = conn.resultado.next();
            if (encontro == true)//encontro
            {
//          if(op.equals("modificar"))
//            {
                // buscar_deposito();
                //  tirar_grilla();
                ///mostrar datos del detalle
                ver_conex conn2 = new ver_conex();

                conn2.sentencia = conn2.conexion.createStatement();
                conn2.resultado = conn2.sentencia.executeQuery("SELECT mer_cod,mer_nom ,det_cant FROM det_pedido as d inner join mercaderia as m inner join pedido as ped WHERE m.mer_cod=d.mer_cod AND d.ped_cod=ped.ped_cod  AND d.ped_cod=" + txtcodigo.getText());

                while (conn2.resultado.next()) {
                    ////para la descricion
                    // ver_conexion conn = new ver_conexion();
                    conn2.sentencia = conn2.conexion.createStatement();

                    /////tira a la grilla
                    String registro[] = new String[]{conn2.resultado.getString("mer_cod"), conn2.resultado.getString("mer_nom"), conn2.resultado.getString("det_cant")};
                    cursor.addRow(registro);

                }
            } else {
                JOptionPane.showMessageDialog(null, " No existe pedido con este numero", "Atencion", JOptionPane.ERROR_MESSAGE);

                this.txtcodigo.setEnabled(true);
                this.txtcodigo.requestFocus();
            }
            //    }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "error de conexion", JOptionPane.ERROR_MESSAGE);
        }
        this.beditar.setEnabled(true);
        this.beditar.requestFocus();
    }

    private void buscarfactura() {
        try {

            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT * FROM cabecera_pedidos INNER JOIN detalle_pedido ON cabecera_pedidos.pedi_cod=detalle_pedido.pedi_cod INNER JOIN producto ON producto.prd_cod=detalle_pedido.prd_cod INNER JOIN proveedor ON proveedor.provee_cod=cabecera_pedidos.provee_cod WHERE cabecera_pedidos.pedi_cod=" + txtcodigo.getText());
            boolean encontro = conn.resultado.next();

            if (encontro == true)//encontro
            {
                if (conn.resultado.getString("pedi_est").equals("ANULADO")) {
                    JOptionPane.showMessageDialog(null, "Este pedido ya ha sido Anulado", "Atencion", JOptionPane.ERROR_MESSAGE);
                    txtcodigo.setText("");
                    txtcodigo.requestFocus();

                } else if (conn.resultado.getString("pedi_est").equals("PROCESADO")) {

                    JOptionPane.showMessageDialog(null, "Este pedido ya ha sido Utilizado", "Atencion", JOptionPane.ERROR_MESSAGE);
                    txtcodigo.setText("");
                    txtcodigo.requestFocus();

                } else {
                    // conn.sentencia = conn.conexion.createStatement();
                    //conn.resultado = conn.sentencia.executeQuery("select * from sucursal where suc_cod=" + txtcodsucursal.getText());

                    //   buscar_deposito();
                    txtprocod.setText(conn.resultado.getString("provee_cod"));
                    txtprodescri.setText(conn.resultado.getString("provee_nom"));
                    fecha1.setText(conn.resultado.getString("fecha"));
                    depocod.setText(conn.resultado.getString("depo_cod"));
                    //  tirar_grilla();
                    ///mostrar datos del detalle
                    //  ver_conex conn2 = new ver_conex();

                    ver_conex conn2 = new ver_conex();//instanciamos
                    conn2.sentencia = conn2.conexion.createStatement();
                    conn2.resultado = conn2.sentencia.executeQuery("select * from detalle_pedido  where pedi_cod =" + txtcodigo.getText());

                    while (conn2.resultado.next()) {
                        ////para la descricion
                        ver_conex conn3 = new ver_conex();//instanciamos
                        conn3.sentencia = conn3.conexion.createStatement();
                        conn3.resultado = conn3.sentencia.executeQuery("select * from producto  where prd_cod =" + conn2.resultado.getString("prd_cod"));
                        conn3.resultado.next();//ubica en el primer registro
                        String registro[] = new String[]{conn2.resultado.getString("prd_cod"), conn3.resultado.getString("prd_nom"), conn2.resultado.getString("canti")};
                        ////
                        cursor.addRow(registro);
                        txtcantidad.setEnabled(false);
                        txtmercacod.setEnabled(true);
                        txtmercacod.requestFocus();
                    }
                }

                ///mostrar datos del detalle
            } else {
                JOptionPane.showMessageDialog(null, " No existe pedido con este numero", "Atencion", JOptionPane.ERROR_MESSAGE);

                this.txtcodigo.setEnabled(true);
                this.txtcodigo.requestFocus();
            }
            //    }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "error de conexion", JOptionPane.ERROR_MESSAGE);
        }
        //this.beditar.setEnabled(true);
        //  this.beditar.requestFocus();
    }//fin de recorrido
    //si es anular
//                 int mensaje = JOptionPane.showConfirmDialog(this,"Deseas Anular la Factura-->"+txtcodigo.getText(),"Confirmar",JOptionPane.YES_NO_OPTION);
//                     if(mensaje == JOptionPane.YES_OPTION)//si quiere borrar
//                     {
////                          ver_conex conn =new ver_conex();//instanciamos
//                    conn.sentencia = conn.conexion.createStatement();
//                    conn.sentencia.executeUpdate("UPDATE ventas SET ven_estado = 'anulado' WHERE ven_cod = '" +txtcodigo.getText()+ "'");
//                     for(int fila=0;fila < grilla.getRowCount();fila++){
//                     conn.sentencia = conn.conexion.createStatement();
//                conn.sentencia.executeUpdate("update mercaderia set mer_cant = mer_cant + "+grilla.getValueAt(fila,3)+" where mer_cod = "+grilla.getValueAt(fila,0));
//
//                     }
//                      JOptionPane.showMessageDialog(null, "La Factura Ha sido Anulada satisfactoriamente.", "Aviso", JOptionPane.INFORMATION_MESSAGE);
//                     }else{
//                         JOptionPane.showMessageDialog(null, "La operacion fue cancelada.", "Aviso", JOptionPane.INFORMATION_MESSAGE);
//                     }
//
//
//                     ///mensaje desea anular
//                        //update estado = "A"
//                  ///
//                    //ACTUALIZAR EL STOCK
//                       //UPDATE EN PRODUCTOS
//                 //si es modificar
//                }  //hab text
//              }
//            else//no encontro
//            {
//               JOptionPane.showMessageDialog(null, "No existe el Nro. de Orden o Ya Fue utilizado", "Atencion", JOptionPane.ERROR_MESSAGE);
//            }

    public void modificar1() {
        int res = javax.swing.JOptionPane.showOptionDialog(this,
                "Desea Modificar el pedido?", "Aviso", javax.swing.JOptionPane.OK_CANCEL_OPTION,
                javax.swing.JOptionPane.QUESTION_MESSAGE, null,
                new Object[]{"Si", "No"}, "Si");
        if (res == javax.swing.JOptionPane.OK_OPTION) {
            try {
                //pone el stock original
                conn.sentencia = conn.conexion.createStatement();
                String consultaSQL = ("SELECT * FROM detalle_pedido WHERE pedi_cod =" + txtcodigo.getText() + ")");
                conn.resultado = conn.sentencia.executeQuery(consultaSQL);
                //graba en el detalle
                while (conn.resultado.next()) {
                    conn.sentencia = conn.conexion.createStatement();
                }
                conn.sentencia = conn.conexion.createStatement();

                for (int a = 0; a < grilla.getRowCount(); a++) {
                    String insercionSQLb = "DELETE FROM detalle_pedido WHERE pedi_cod=" + txtcodigo.getText() + "and prd_cod=" + grilla.getValueAt(a, 0) + "";
                    conn.sentencia.executeUpdate(insercionSQLb);

                    Object codigo = grilla.getValueAt(a, 0);

                    Object cantidad = grilla.getValueAt(a, 2);

                    conn.sentencia.executeUpdate("INSERT INTO detalle_pedido(pedi_cod,prd_cod,canti,depo_cod)VALUES(" + txtcodigo.getText() + "," + codigo + "," + cantidad + "," + depocod.getText() + ")");

                }

                JOptionPane.showMessageDialog(null, " Se Ha Modificado El Pedido", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                genreporte();
                des_botones();
                borrar_text();
                hab_botones();
                limpiargrilla();
                //this.txtcodigo.setEnabled(false);
            } catch (SQLException ex) {
                Logger.getLogger(pedidos_compra.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Operacion Cancelada", "Atencion", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void anular() {

        int res = javax.swing.JOptionPane.showOptionDialog(this,
                "Desea Anular EL PEDIDO DE COMPRA?", "REGISTRO PEDIDO", javax.swing.JOptionPane.OK_CANCEL_OPTION,
                javax.swing.JOptionPane.QUESTION_MESSAGE, null,
                new Object[]{"Si", "No"}, "Si");

        if (res == javax.swing.JOptionPane.OK_OPTION) {

            try {
                //  validarCampos3();

                ver_conex c = new ver_conex();
                c.sentencia = c.conexion.createStatement();
                c.sentencia.executeUpdate("update cabecera_pedidos set pedi_est ='ANULADO' where pedi_cod = " + txtcodigo.getText());

                JOptionPane.showMessageDialog(null, "El registro se ha Anulado satisfactoriamente.", "Confirmacion", JOptionPane.INFORMATION_MESSAGE);

            } catch (SQLException ex) {
                Logger.getLogger(pedidos_compra.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {

            JOptionPane.showMessageDialog(null, "Operacion Cancelada", "Atencion", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void tirar_grillas() {
        try {
            boolean encontro = false;
            int lugar = 0;
            for (int a = 0; a < grilla.getRowCount(); a++) {
                // Object cod    =grilla.getValueAt(a,0);
                if (txtmercacod.getText().equals(grilla.getValueAt(a, 0).toString())) {
                    lugar = a;
                    encontro = true;
                    cursor.removeRow(lugar);
                }
            }
            do {
                //    dt.addRow(campos);
                //  caltotales();

                String registro[];
                registro = new String[]{txtmercacod.getText(), txtdescri.getText(), txtcantidad.getText()};
                cursor.addRow(registro);
                txtmercacod.setEnabled(true);
                txtmercacod.requestFocus();

            } while (conn.resultado.next());

            //else{
            //  comparacion();
//                }
            // bgrabar.setEnabled(true);
//
        } catch (SQLException ex) {
            Logger.getLogger(pedidos_compra.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void aprobar() {

        int res = javax.swing.JOptionPane.showOptionDialog(this,
                "Desea Aprobar EL PEDIDO DE COMPRA?", "REGISTRO PEDIDO", javax.swing.JOptionPane.OK_CANCEL_OPTION,
                javax.swing.JOptionPane.QUESTION_MESSAGE, null,
                new Object[]{"Si", "No"}, "Si");

        if (res == javax.swing.JOptionPane.OK_OPTION) {

            try {
                //  validarCampos3();

                ver_conex c = new ver_conex();
                c.sentencia = c.conexion.createStatement();
                c.sentencia.executeUpdate("update pedido set ped_est='Aprobado' where ped_cod = " + txtcodigo.getText());

                JOptionPane.showMessageDialog(null, "El pedido se ha Aprobado satisfactoriamente.", "Confirmacion", JOptionPane.INFORMATION_MESSAGE);

            } catch (SQLException ex) {
                Logger.getLogger(pedidos_compra.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {

            JOptionPane.showMessageDialog(null, "Operacion Cancelada", "Atencion", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void sucursales() {
        try {
            ver_conex con = new ver_conex();
            con.sentencia = con.conexion.createStatement();
            con.resultado = conn.sentencia.executeQuery("select * from sucursal where suc_cod=" + txtcodsucursal.getText());

            if (txtcodsucursal.getText().equals("1")) {
                //   baprobar.setVisible(true);
                buscarfactura();
            } else {
                //  baprobar.setVisible(false);
                buscarfactura();
            }
        } catch (SQLException ex) {
            Logger.getLogger(pedidos_compra.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void buscardepo() {
        try {
            ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT * FROM deposito WHERE depo_cod=" + depocod.getText());
            boolean encontro = conn.resultado.next();

            if (encontro == true) {
                depodesc.setText(conn.resultado.getString("depo_desc"));
            } else // no encontro
            {
                JOptionPane.showMessageDialog(null, "No existe un registro con este codigo!", "Atencion", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException ex) {
            Logger.getLogger(pedidos_compra.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void genreporte() //throws JRException, Exception
    {
        try //throws JRException, Exception
        {
            ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT * FROM cabecera_pedidos,detalle_pedido,producto,funcionario,sucursal,proveedor,usuario WHERE \n"
                    + "cabecera_pedidos.pedi_cod=detalle_pedido.pedi_cod AND producto.prd_cod=detalle_pedido.prd_cod AND \n"
                    + "cabecera_pedidos.func_cod=funcionario.func_cod  AND cabecera_pedidos.provee_cod=proveedor.provee_cod AND \n"
                    + "cabecera_pedidos.suc_cod=sucursal.suc_cod AND usuario.func_cod=funcionario.func_cod AND cabecera_pedidos.pedi_cod= " + txtcodigo.getText());
            JRResultSetDataSource jrRS = new JRResultSetDataSource(conn.resultado);

            HashMap parameters = new HashMap();
            URL urlMaestro = getClass().getClassLoader().getResource("reportes/pedidos.jasper");

            // Cargamos el reporte
            JasperReport masterReport = null;
            masterReport = (JasperReport) JRLoader.loadObject(urlMaestro);
            JasperPrint masterPrint = null;
            masterPrint = JasperFillManager.fillReport(masterReport, parameters, jrRS);
            JasperViewer ventana = new JasperViewer(masterPrint, false);
            ventana.setTitle("Vista Previa");
            ventana.setVisible(true);

        } catch (JRException ex) {
            Logger.getLogger(pedidos_compra.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(pedidos_compra.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
